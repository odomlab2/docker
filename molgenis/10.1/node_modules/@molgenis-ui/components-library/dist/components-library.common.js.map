{"version":3,"file":"components-library.common.js","sources":["../src/components/filters/ActiveFilters.vue?rollup-plugin-vue=script.js","../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../src/components/filters/ActiveFilters.vue","../src/components/filters/ChangeFilters.vue?rollup-plugin-vue=script.js","../src/components/filters/ChangeFilters.vue","../src/components/filters/CheckboxFilter.vue?rollup-plugin-vue=script.js","../src/components/filters/CheckboxFilter.vue","../src/components/ui/CartSelectionToast.vue?rollup-plugin-vue=script.js","../src/components/ui/CartSelectionToast.vue","../src/components/filters/DateTimeFilter.vue?rollup-plugin-vue=script.js","../src/components/filters/DateTimeFilter.vue","../src/components/filters/containers/FilterCard.vue?rollup-plugin-vue=script.js","../src/components/filters/containers/FilterCard.vue","../src/components/filters/MultiFilter.vue?rollup-plugin-vue=script.js","../src/components/filters/MultiFilter.vue","../src/components/filters/NumberFilter.vue?rollup-plugin-vue=script.js","../src/components/filters/NumberFilter.vue","../src/components/filters/RangeFilter.vue?rollup-plugin-vue=script.js","../src/components/filters/RangeFilter.vue","../src/components/filters/StringFilter.vue?rollup-plugin-vue=script.js","../src/components/filters/StringFilter.vue","../src/components/filters/containers/FilterContainer.vue?rollup-plugin-vue=script.js","../src/components/filters/containers/FilterContainer.vue","../src/components/ui/Pagination.vue?rollup-plugin-vue=script.js","../src/components/ui/Pagination.vue","../src/components/ui/Toaster.vue?rollup-plugin-vue=script.js","../src/components/ui/Toaster.vue"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'ActiveFilters',\n  props: {\n    /**\n     * List of filter objects\n     */\n    filters: {\n      type: Array,\n      required: true\n    },\n    /**\n     * Active filter values\n     * @model\n     */\n    value: {\n      type: Object,\n      required: true\n    }\n  },\n  data () {\n    return {\n      activeValues: []\n    }\n  },\n  watch: {\n    value: {\n      handler (newValue) {\n        this.buildActiveValues(newValue)\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    async buildActiveValues (newValue) {\n      const activeValues = []\n      Object.entries(newValue).forEach(async ([key, current]) => {\n        const filter = this.selectFilter(key)\n\n        // Clean op the values by removing undefined entry's\n        if (current === undefined || (Array.isArray(current) && !current.length)) {\n          return\n        }\n\n        if (filter.type === 'date-time-filter') {\n          let value\n\n          if (current[0].toISOString() === current[1].toISOString()) {\n            value = current[0].toLocaleDateString()\n          } else {\n            value = `${current[0].toLocaleDateString()} - ${current[1].toLocaleDateString()}`\n          }\n\n          activeValues.push({ key, value, label: filter.label })\n          return\n        }\n\n        // Unpack array\n        if (Array.isArray(current)) {\n          // Checkbox\n          if (filter.type === 'checkbox-filter') {\n            // resolve options function/promise and show results later\n            const option = await filter.options()\n            current.forEach(subKey => {\n              const findTextFromValue = option.filter(\n                filterOption => filterOption.value === subKey\n              )[0]\n              activeValues.push({\n                key,\n                subKey,\n                value: findTextFromValue.text,\n                label: filter.label\n              })\n            })\n          }\n          // Range Filter\n          if (filter.type === 'range-filter') {\n            if ((current[0] === null || current[0] === '') && current[1] != null) {\n              activeValues.push({\n                key,\n                value: `${current[1]} and less`,\n                label: filter.label\n              })\n            } else if (current[0] !== null && (current[1] === null || current[1] === '')) {\n              activeValues.push({\n                key,\n                value: `${current[0]} and more`,\n                label: filter.label\n              })\n            } else if (current[0] !== null && current[1] !== null) {\n              activeValues.push({\n                key,\n                value: `${current[0]} to ${current[1]}`,\n                label: filter.label\n              })\n            }\n          }\n\n          if (filter.type === 'multi-filter') {\n            const options = await filter.options({ nameAttribute: false, queryType: 'in', query: current.join(',') })\n            current.forEach(subKey => {\n              const findTextFromValue = options.filter(\n                filterOption => filterOption.value === subKey\n              )[0]\n              activeValues.push({\n                key,\n                subKey,\n                value: findTextFromValue.text,\n                label: filter.label\n              })\n            })\n          }\n        } else {\n          // Single item\n          activeValues.push({ key, value: current, label: filter.label })\n        }\n      })\n      if (this.value === newValue) {\n        this.activeValues = activeValues\n      }\n    },\n    selectFilter (key) {\n      return this.filters.filter(filter => filter.name === key)[0]\n    },\n    removeFilter ({ key, subKey }) {\n      const selections = { ...this.value }\n      if (subKey === undefined) {\n        delete selections[key]\n      } else {\n        selections[key] = selections[key].filter(selectionKey => selectionKey !== subKey)\n      }\n      this.$emit('input', selections)\n    }\n  }\n}\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","<template>\n  <div :class=\"{'m-n1': activeValues.length > 0}\">\n    <button\n      v-for=\"(item, key) in activeValues\"\n      :key=\"key\"\n      type=\"button\"\n      class=\"active-filter btn btn-light m-1 btn-outline-secondary\"\n      @click=\"removeFilter(item)\"\n    >\n      {{ item.label }}: {{ item.value }}\n      <font-awesome-icon\n        icon=\"times\"\n        class=\"ml-1\"\n      />\n    </button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ActiveFilters',\n  props: {\n    /**\n     * List of filter objects\n     */\n    filters: {\n      type: Array,\n      required: true\n    },\n    /**\n     * Active filter values\n     * @model\n     */\n    value: {\n      type: Object,\n      required: true\n    }\n  },\n  data () {\n    return {\n      activeValues: []\n    }\n  },\n  watch: {\n    value: {\n      handler (newValue) {\n        this.buildActiveValues(newValue)\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    async buildActiveValues (newValue) {\n      const activeValues = []\n      Object.entries(newValue).forEach(async ([key, current]) => {\n        const filter = this.selectFilter(key)\n\n        // Clean op the values by removing undefined entry's\n        if (current === undefined || (Array.isArray(current) && !current.length)) {\n          return\n        }\n\n        if (filter.type === 'date-time-filter') {\n          let value\n\n          if (current[0].toISOString() === current[1].toISOString()) {\n            value = current[0].toLocaleDateString()\n          } else {\n            value = `${current[0].toLocaleDateString()} - ${current[1].toLocaleDateString()}`\n          }\n\n          activeValues.push({ key, value, label: filter.label })\n          return\n        }\n\n        // Unpack array\n        if (Array.isArray(current)) {\n          // Checkbox\n          if (filter.type === 'checkbox-filter') {\n            // resolve options function/promise and show results later\n            const option = await filter.options()\n            current.forEach(subKey => {\n              const findTextFromValue = option.filter(\n                filterOption => filterOption.value === subKey\n              )[0]\n              activeValues.push({\n                key,\n                subKey,\n                value: findTextFromValue.text,\n                label: filter.label\n              })\n            })\n          }\n          // Range Filter\n          if (filter.type === 'range-filter') {\n            if ((current[0] === null || current[0] === '') && current[1] != null) {\n              activeValues.push({\n                key,\n                value: `${current[1]} and less`,\n                label: filter.label\n              })\n            } else if (current[0] !== null && (current[1] === null || current[1] === '')) {\n              activeValues.push({\n                key,\n                value: `${current[0]} and more`,\n                label: filter.label\n              })\n            } else if (current[0] !== null && current[1] !== null) {\n              activeValues.push({\n                key,\n                value: `${current[0]} to ${current[1]}`,\n                label: filter.label\n              })\n            }\n          }\n\n          if (filter.type === 'multi-filter') {\n            const options = await filter.options({ nameAttribute: false, queryType: 'in', query: current.join(',') })\n            current.forEach(subKey => {\n              const findTextFromValue = options.filter(\n                filterOption => filterOption.value === subKey\n              )[0]\n              activeValues.push({\n                key,\n                subKey,\n                value: findTextFromValue.text,\n                label: filter.label\n              })\n            })\n          }\n        } else {\n          // Single item\n          activeValues.push({ key, value: current, label: filter.label })\n        }\n      })\n      if (this.value === newValue) {\n        this.activeValues = activeValues\n      }\n    },\n    selectFilter (key) {\n      return this.filters.filter(filter => filter.name === key)[0]\n    },\n    removeFilter ({ key, subKey }) {\n      const selections = { ...this.value }\n      if (subKey === undefined) {\n        delete selections[key]\n      } else {\n        selections[key] = selections[key].filter(selectionKey => selectionKey !== subKey)\n      }\n      this.$emit('input', selections)\n    }\n  }\n}\n</script>\n\n<style scoped>\nbutton svg path {\n  transition: fill 0.3s;\n}\n\nbutton:hover svg path {\n  fill: var(--danger);\n}\n</style>\n\n<docs>\nVisualisation of active filters\n\n### Usage\n```jsx\n\nconst selections = {\n  search: 'test',\n  name: 'John',\n  age: [32, 45],\n  fruit: ['orange', 'apple'],\n  color: ['red', 'green'],\n  datetime: [new Date('10/01/1980'), new Date('03/12/2020')],\n}\n\n<ActiveFilters\n  v-model=\"selections\"\n  v-bind:filters=\"filtersMocks\">\n</ActiveFilters>\n<div>{{selections}}</div>\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'ChangeFilters',\n  props: {\n    /**\n     * The filters to select from\n     * @model\n     */\n    filters: {\n      type: Array,\n      required: true\n    },\n    /**\n     * The selected filters\n     * @model\n     */\n    value: {\n      type: Array,\n      required: true\n    }\n  },\n  data () {\n    return {\n      selected: this.value\n    }\n  },\n  watch: {\n    value: {\n      handler (newValue) {\n        this.selected = [...newValue]\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    unique: (value, index, items) => items.indexOf(value) === index,\n    checkboxHandler (option, state) {\n      if (state) {\n        this.selected.push(option.name)\n      } else {\n        this.selected = this.selected.filter((item) => item !== option.name)\n      }\n\n      // parent compound toggle\n      if (option.type === 'compound-title') {\n        const subCompounds = this.filters\n          .filter((item) => item.compound === option.name)\n          .map((item) => item.name)\n        if (this.selected.includes(option.name)) {\n          // Select all and make unique\n          this.selected = [...this.selected, ...subCompounds].filter(\n            this.unique\n          )\n        } else {\n          // Deselect all\n          this.selected = this.selected.filter(\n            (item) => !subCompounds.includes(item)\n          )\n        }\n      }\n\n      // child compound toggle\n      if (option.compound) {\n        const subCompounds = this.filters\n          .filter((item) => item.compound === option.compound)\n          .map((item) => item.name)\n        const allSelected = subCompounds.every((item) =>\n          this.selected.includes(item)\n        )\n        const noneSelected = subCompounds.every(\n          (item) => !this.selected.includes(item)\n        )\n        const partialSelected = !allSelected && !noneSelected\n        if (allSelected) {\n          this.selected = [option.compound, ...this.selected].filter(\n            this.unique\n          )\n        }\n        if (noneSelected) {\n          this.selected = this.selected.filter(\n            (item) => item !== option.compound\n          )\n        }\n        if (partialSelected) {\n          this.selected = this.selected.filter(\n            (item) => item !== option.compound\n          )\n        }\n      }\n      this.$emit('input', this.selected)\n    }\n  }\n}\n","<template>\n  <div>\n    <b-form-checkbox\n      v-for=\"option in filters\"\n      :key=\"option.name\"\n      :checked=\"selected.includes(option.name)\"\n      :class=\"{'ml-4':option.compound}\"\n      @change=\"checkboxHandler(option, $event)\"\n    >\n      <span v-if=\"option.label\">\n        <span class=\"text-nowrap\">{{ option.label }}</span>\n        <span class=\"text-secondary\">\n          <small>\n            <span class=\"text-nowrap\">( {{ option.name }} )</span>\n          </small>\n        </span>\n      </span>\n      <span v-else>\n        <span class=\"text-nowrap\">{{ option.name }}</span>\n      </span>\n      <span class=\"text-secondary\">\n        <small v-if=\"option.description\">- {{ option.description }}</small>\n      </span>\n    </b-form-checkbox>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ChangeFilters',\n  props: {\n    /**\n     * The filters to select from\n     * @model\n     */\n    filters: {\n      type: Array,\n      required: true\n    },\n    /**\n     * The selected filters\n     * @model\n     */\n    value: {\n      type: Array,\n      required: true\n    }\n  },\n  data () {\n    return {\n      selected: this.value\n    }\n  },\n  watch: {\n    value: {\n      handler (newValue) {\n        this.selected = [...newValue]\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    unique: (value, index, items) => items.indexOf(value) === index,\n    checkboxHandler (option, state) {\n      if (state) {\n        this.selected.push(option.name)\n      } else {\n        this.selected = this.selected.filter((item) => item !== option.name)\n      }\n\n      // parent compound toggle\n      if (option.type === 'compound-title') {\n        const subCompounds = this.filters\n          .filter((item) => item.compound === option.name)\n          .map((item) => item.name)\n        if (this.selected.includes(option.name)) {\n          // Select all and make unique\n          this.selected = [...this.selected, ...subCompounds].filter(\n            this.unique\n          )\n        } else {\n          // Deselect all\n          this.selected = this.selected.filter(\n            (item) => !subCompounds.includes(item)\n          )\n        }\n      }\n\n      // child compound toggle\n      if (option.compound) {\n        const subCompounds = this.filters\n          .filter((item) => item.compound === option.compound)\n          .map((item) => item.name)\n        const allSelected = subCompounds.every((item) =>\n          this.selected.includes(item)\n        )\n        const noneSelected = subCompounds.every(\n          (item) => !this.selected.includes(item)\n        )\n        const partialSelected = !allSelected && !noneSelected\n        if (allSelected) {\n          this.selected = [option.compound, ...this.selected].filter(\n            this.unique\n          )\n        }\n        if (noneSelected) {\n          this.selected = this.selected.filter(\n            (item) => item !== option.compound\n          )\n        }\n        if (partialSelected) {\n          this.selected = this.selected.filter(\n            (item) => item !== option.compound\n          )\n        }\n      }\n      this.$emit('input', this.selected)\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n\n<docs>\nFilter selector\n### Usage\n```jsx\nconst filters = [\n  {\n    name: 'color',\n    label: 'Color',\n    description: 'pick a color',\n  },\n  {\n    name: 'region',\n    label: 'Region',\n  },\n  {\n    name: 'health',\n    label: 'Health',\n    type: 'compound-title'\n  },\n  {\n    name: 'drugs',\n    label: 'Drug use',\n    compound: 'health'\n  },\n  {\n    name: 'mental-health',\n    label: 'Mental health',\n    compound: 'health'\n  }\n]\nconst model = []\n<div class=\"row\">\n  <div class=\"col-2\">\n    <ChangeFilters\n      v-bind:filters=\"filters\"\n      v-model=\"model\">\n    </ChangeFilters>\n  </div>\n</div>\n\n<div>{{model}}</div>\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'CheckboxFilter',\n  props: {\n    /**\n     * Toggle to switch between returning an array with values or an array with the full option\n     */\n    returnTypeAsObject: {\n      type: Boolean,\n      required: false,\n      default: () => false\n    },\n    /**\n     * A Promise-function that resolves with an array of options.\n     * {text: 'foo', value: 'bar'}\n     */\n    options: {\n      type: [Function],\n      required: true\n    },\n    /**\n     * An array that contains values of options\n     * which is used to only show the checkboxes that match\n     * these values\n     */\n    optionsFilter: {\n      type: Array,\n      required: false\n    },\n    /**\n     * This is the v-model value; an array of selected options.\n     * Can also be a { text, value } object array\n     */\n    value: {\n      type: Array,\n      default: () => []\n    },\n    /**\n     * Whether to use (De)Select All or not.\n     */\n    bulkOperation: {\n      type: Boolean,\n      required: false,\n      default: () => true\n    },\n    /**\n     * Limit the maximum number of visible items.\n     */\n    maxVisibleOptions: {\n      type: Number,\n      default: () => undefined\n    }\n  },\n  data () {\n    return {\n      externalUpdate: false,\n      selection: [],\n      resolvedOptions: [],\n      sliceOptions: this.maxVisibleOptions && this.optionsToRender && this.maxVisibleOptions < this.optionsToRender.length\n    }\n  },\n  computed: {\n    visibleOptions () {\n      return this.sliceOptions ? this.optionsToRender.slice(0, this.maxVisibleOptions) : (typeof this.optionsToRender === 'function' ? [] : this.optionsToRender)\n    },\n    showToggleSlice () {\n      return this.maxVisibleOptions && this.maxVisibleOptions < this.optionsToRender.length\n    },\n    toggleSelectText () {\n      return this.value.length ? 'Deselect all' : 'Select all'\n    },\n    toggleSliceText () {\n      return this.sliceOptions ? `Show ${this.optionsToRender.length - this.maxVisibleOptions} more` : 'Show less'\n    },\n    optionsToRender () {\n      if (this.optionsFilter && this.optionsFilter.length) {\n        return this.resolvedOptions.filter(option => this.optionsFilter.includes(option.value))\n      } else {\n        return this.resolvedOptions\n      }\n    }\n  },\n  watch: {\n    value () {\n      this.setValue()\n    },\n    resolvedOptions () {\n      this.sliceOptions = this.showToggleSlice\n    },\n    selection (newValue) {\n      if (!this.externalUpdate) {\n        let newSelection = []\n\n        if (this.returnTypeAsObject) {\n          newSelection = Object.assign(newSelection, this.optionsToRender.filter(of => newValue.includes(of.value)))\n        } else {\n          newSelection = [...newValue]\n        }\n        this.$emit('input', newSelection)\n      }\n      this.externalUpdate = false\n    }\n  },\n  created () {\n    this.options().then(response => {\n      this.resolvedOptions = response\n    })\n    this.setValue()\n  },\n  methods: {\n    toggleSelect () {\n      if (this.selection && this.selection.length > 0) {\n        this.selection = []\n      } else {\n        this.selection = this.optionsToRender.map(option => option.value)\n      }\n    },\n    toggleSlice () {\n      this.sliceOptions = !this.sliceOptions\n    },\n    setValue () {\n      this.externalUpdate = true\n      if (this.value && this.value.length > 0 && typeof this.value[0] === 'object') {\n        this.selection = this.value.map(vo => vo.value)\n      } else {\n        this.selection = this.value\n      }\n    }\n  }\n}\n","<template>\n  <div>\n    <b-form-checkbox-group\n      v-model=\"selection\"\n      stacked\n      :options=\"visibleOptions\"\n    />\n    <span v-if=\"bulkOperation\">\n      <b-link\n        v-if=\"showToggleSlice\"\n        class=\"toggle-slice card-link\"\n        @click.prevent=\"toggleSlice\"\n      >\n        {{ toggleSliceText }}\n      </b-link>\n      <b-link\n        class=\"toggle-select card-link\"\n        @click.prevent=\"toggleSelect\"\n      >\n        {{ toggleSelectText }}\n      </b-link>\n    </span>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CheckboxFilter',\n  props: {\n    /**\n     * Toggle to switch between returning an array with values or an array with the full option\n     */\n    returnTypeAsObject: {\n      type: Boolean,\n      required: false,\n      default: () => false\n    },\n    /**\n     * A Promise-function that resolves with an array of options.\n     * {text: 'foo', value: 'bar'}\n     */\n    options: {\n      type: [Function],\n      required: true\n    },\n    /**\n     * An array that contains values of options\n     * which is used to only show the checkboxes that match\n     * these values\n     */\n    optionsFilter: {\n      type: Array,\n      required: false\n    },\n    /**\n     * This is the v-model value; an array of selected options.\n     * Can also be a { text, value } object array\n     */\n    value: {\n      type: Array,\n      default: () => []\n    },\n    /**\n     * Whether to use (De)Select All or not.\n     */\n    bulkOperation: {\n      type: Boolean,\n      required: false,\n      default: () => true\n    },\n    /**\n     * Limit the maximum number of visible items.\n     */\n    maxVisibleOptions: {\n      type: Number,\n      default: () => undefined\n    }\n  },\n  data () {\n    return {\n      externalUpdate: false,\n      selection: [],\n      resolvedOptions: [],\n      sliceOptions: this.maxVisibleOptions && this.optionsToRender && this.maxVisibleOptions < this.optionsToRender.length\n    }\n  },\n  computed: {\n    visibleOptions () {\n      return this.sliceOptions ? this.optionsToRender.slice(0, this.maxVisibleOptions) : (typeof this.optionsToRender === 'function' ? [] : this.optionsToRender)\n    },\n    showToggleSlice () {\n      return this.maxVisibleOptions && this.maxVisibleOptions < this.optionsToRender.length\n    },\n    toggleSelectText () {\n      return this.value.length ? 'Deselect all' : 'Select all'\n    },\n    toggleSliceText () {\n      return this.sliceOptions ? `Show ${this.optionsToRender.length - this.maxVisibleOptions} more` : 'Show less'\n    },\n    optionsToRender () {\n      if (this.optionsFilter && this.optionsFilter.length) {\n        return this.resolvedOptions.filter(option => this.optionsFilter.includes(option.value))\n      } else {\n        return this.resolvedOptions\n      }\n    }\n  },\n  watch: {\n    value () {\n      this.setValue()\n    },\n    resolvedOptions () {\n      this.sliceOptions = this.showToggleSlice\n    },\n    selection (newValue) {\n      if (!this.externalUpdate) {\n        let newSelection = []\n\n        if (this.returnTypeAsObject) {\n          newSelection = Object.assign(newSelection, this.optionsToRender.filter(of => newValue.includes(of.value)))\n        } else {\n          newSelection = [...newValue]\n        }\n        this.$emit('input', newSelection)\n      }\n      this.externalUpdate = false\n    }\n  },\n  created () {\n    this.options().then(response => {\n      this.resolvedOptions = response\n    })\n    this.setValue()\n  },\n  methods: {\n    toggleSelect () {\n      if (this.selection && this.selection.length > 0) {\n        this.selection = []\n      } else {\n        this.selection = this.optionsToRender.map(option => option.value)\n      }\n    },\n    toggleSlice () {\n      this.sliceOptions = !this.sliceOptions\n    },\n    setValue () {\n      this.externalUpdate = true\n      if (this.value && this.value.length > 0 && typeof this.value[0] === 'object') {\n        this.selection = this.value.map(vo => vo.value)\n      } else {\n        this.selection = this.value\n      }\n    }\n  }\n}\n</script>\n\n<style>\n.card-link { font-size: small;\n  font-style: italic; }\n</style>\n\n<docs>\nFilter that renders a list of options as a set of checkboxes\n\n## Usage\n```jsx\nconst model = []\n<CheckboxFilter\n  v-bind:maxVisibleOptions=\"5\"\n  v-bind:bulkOperation=\"true\"\n  v-bind:options=\"fruitOptionsFunction\"\n  v-bind:optionsFilter=\"[]\"\n  v-model=\"model\">\n</CheckboxFilter>\n<div>model: {{model}}</div>\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'CartSelectionToast',\n  props: {\n    /**\n     * Passthrough setting from BootstrapVue\n     */\n    toastClass: {\n      type: [String, Object, Array]\n    },\n    /**\n     * Passthrough setting from BootstrapVue\n     */\n    headerClass: {\n      type: [String, Object, Array]\n    },\n    /**\n     * Passthrough setting from BootstrapVue\n     */\n    bodyClass: {\n      type: [String, Object, Array]\n    },\n    /**\n    /**\n     * Default descriptive text.\n     * Use this to specify the amount of selected items in the cart\n     * For example:\n     * \"3 items selected\"\n     */\n    cartSelectionText: {\n      type: String,\n      required: true\n    },\n    /**\n     * See: https://bootstrap-vue.org/docs/components/toast#b-toaster-target-component\n     */\n    location: {\n      type: String,\n      required: false,\n      default: () => 'b-toaster-bottom-right'\n    },\n    /**\n     * See: https://bootstrap-vue.org/docs/reference/color-variants#color-variants-and-css-class-mapping\n     */\n    backgroundVariant: {\n      type: String,\n      required: false,\n      default: () => 'info'\n    },\n    /**\n     * See: https://bootstrap-vue.org/docs/components/button#contextual-variants\n     */\n    buttonVariant: {\n      type: String,\n      required: false,\n      default: () => 'secondary'\n    },\n    /**\n     * If this array is set (via v-model), then in will allow you to preview your selection\n     * Expects a array of strings or a Array of objects\n     * When using a array of objects provide the 'labelAttribute' to select the field to display\n     */\n    value: {\n      type: Array,\n      required: false,\n      default: () => []\n    },\n    /**\n     * Label attribute to display for use with object based store data.\n     */\n    labelAttribute: {\n      type: String,\n      required: false,\n      default: () => 'name'\n    },\n    /**\n     * Button click handler\n     */\n    clickHandler: {\n      type: Function,\n      required: true\n    }\n  },\n  data: () => ({\n    previewToggle: false\n  }),\n  computed: {\n    selectionText () {\n      return this.previewToggle ? 'Hide' : 'Show'\n    }\n  },\n  methods: {\n    previewLabel (item) {\n      if (typeof item === 'string') {\n        return item\n      } else if (typeof item === 'object') {\n        if (typeof item[this.labelAttribute] === 'string') {\n          return item[this.labelAttribute]\n        }\n      }\n      return ''\n    },\n    removeItem (itemName) {\n      /**\n       * v-model return value\n       *\n       * @event input\n       * @property {Array} Returns new array without the deleted item\n       */\n      this.$emit('input', this.value.filter(item => item !== itemName))\n    }\n  }\n}\n","<template>\n  <b-toast\n    visible\n    no-close-button\n    no-auto-hide\n    :toaster=\"location\"\n    :variant=\"backgroundVariant\"\n    :toast-class=\"toastClass\"\n    :body-class=\"bodyClass\"\n    :header-class=\"headerClass\"\n  >\n    <div class=\"container-fluid\">\n      <div v-if=\"previewToggle && value.length > 0\" class=\"mb-4\">\n        <div v-for=\"(item, index) in value\" :key=\"index\" class=\"row\">\n          <div class=\"col\">\n            {{ previewLabel(item) }}\n          </div>\n          <div class=\"col-auto mb-2\">\n            <span role=\"button\" @click=\"removeItem(item)\">\n              <!-- @slot pass an icon for the remove button -->\n              <slot name=\"removeButton\"><span class=\"fa fa-times\" /></slot>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col d-flex flex-column justify-content-start align-self-center\">\n          <div class=\"font-weight-bold\">\n            {{ cartSelectionText }}\n          </div>\n          <div v-if=\"value.length > 0\">\n            <span role=\"button\" @click=\"previewToggle = !previewToggle\">{{ selectionText }} selection</span>\n          </div>\n        </div>\n        <div class=\"col-auto\">\n          <b-button :variant=\"buttonVariant\" @click=\"clickHandler\">\n            <!-- @slot display tekst of button -->\n            <slot name=\"buttonText\">\n              Request items\n            </slot>\n          </b-button>\n        </div>\n      </div>\n    </div>\n  </b-toast>\n</template>\n\n<script>\nexport default {\n  name: 'CartSelectionToast',\n  props: {\n    /**\n     * Passthrough setting from BootstrapVue\n     */\n    toastClass: {\n      type: [String, Object, Array]\n    },\n    /**\n     * Passthrough setting from BootstrapVue\n     */\n    headerClass: {\n      type: [String, Object, Array]\n    },\n    /**\n     * Passthrough setting from BootstrapVue\n     */\n    bodyClass: {\n      type: [String, Object, Array]\n    },\n    /**\n    /**\n     * Default descriptive text.\n     * Use this to specify the amount of selected items in the cart\n     * For example:\n     * \"3 items selected\"\n     */\n    cartSelectionText: {\n      type: String,\n      required: true\n    },\n    /**\n     * See: https://bootstrap-vue.org/docs/components/toast#b-toaster-target-component\n     */\n    location: {\n      type: String,\n      required: false,\n      default: () => 'b-toaster-bottom-right'\n    },\n    /**\n     * See: https://bootstrap-vue.org/docs/reference/color-variants#color-variants-and-css-class-mapping\n     */\n    backgroundVariant: {\n      type: String,\n      required: false,\n      default: () => 'info'\n    },\n    /**\n     * See: https://bootstrap-vue.org/docs/components/button#contextual-variants\n     */\n    buttonVariant: {\n      type: String,\n      required: false,\n      default: () => 'secondary'\n    },\n    /**\n     * If this array is set (via v-model), then in will allow you to preview your selection\n     * Expects a array of strings or a Array of objects\n     * When using a array of objects provide the 'labelAttribute' to select the field to display\n     */\n    value: {\n      type: Array,\n      required: false,\n      default: () => []\n    },\n    /**\n     * Label attribute to display for use with object based store data.\n     */\n    labelAttribute: {\n      type: String,\n      required: false,\n      default: () => 'name'\n    },\n    /**\n     * Button click handler\n     */\n    clickHandler: {\n      type: Function,\n      required: true\n    }\n  },\n  data: () => ({\n    previewToggle: false\n  }),\n  computed: {\n    selectionText () {\n      return this.previewToggle ? 'Hide' : 'Show'\n    }\n  },\n  methods: {\n    previewLabel (item) {\n      if (typeof item === 'string') {\n        return item\n      } else if (typeof item === 'object') {\n        if (typeof item[this.labelAttribute] === 'string') {\n          return item[this.labelAttribute]\n        }\n      }\n      return ''\n    },\n    removeItem (itemName) {\n      /**\n       * v-model return value\n       *\n       * @event input\n       * @property {Array} Returns new array without the deleted item\n       */\n      this.$emit('input', this.value.filter(item => item !== itemName))\n    }\n  }\n}\n</script>\n\n<docs>\n  This toast will float bottom right and hold a selection of shop-like values and has a call to action\n\n  ## Basic example\n\n  ```jsx\n  function click(){\n    alert('clicked')\n  }\n  <b-toaster name=\"demo\"></b-toaster>\n  <cart-selection-toast\n    location=\"demo\"\n    v-bind:clickHandler=\"click\"\n    cartSelectionText=\"3 items selected\">\n    <template v-slot:buttonText>To cart</template>\n    <template v-slot:cartSelection>10 items selected</template>\n  </cart-selection-toast>\n  ```\n  ## Example with filled slots and selection preview\n\n  ```jsx\n  let items = ['Apple', 'Pear', 'Banana']\n  function click(){\n    alert('clicked')\n  }\n  <b-toaster name=\"demo2\"></b-toaster>\n  <cart-selection-toast\n    location=\"demo2\"\n    v-model=\"items\"\n    v-bind:clickHandler=\"click\"\n    v-bind:cartSelectionText=\"items.length + ' item(s) selected'\">\n    <template v-slot:buttonText>Checkout <span class=\"fa fa-shopping-basket\"></span></template>\n    <template v-slot:cartSelection>{{items.length}} item(s) selected</template>\n    <template v-slot:removeButton><i class=\"far fa-times-circle\"></i></template>\n  </cart-selection-toast>\n  ```\n\n  ## Example with id and label\n\n  ```jsx\n  let items = [\n    { label: 'Apple', id: 1 },\n    { label: 'Pear', id: 2 },\n    { label: 'Banana', id: 3 }\n  ]\n  function click(){\n    alert('clicked')\n  }\n  <b-toaster name=\"demo3\"></b-toaster>\n  <cart-selection-toast\n    location=\"demo3\"\n    v-model=\"items\"\n    v-bind:clickHandler=\"click\"\n    v-bind:cartSelectionText=\"items.length + ' item(s) selected'\"\n    labelAttribute=\"label\">\n  </cart-selection-toast>\n  ```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'DateTimeFilter',\n  props: {\n    /**\n     * Define the start of your calendar range.\n     * @values ISOString, null\n     */\n    min: {\n      default: () => null,\n      type: [String, null]\n    },\n    /**\n     * Define the end of your calendar range.\n     * @values ISOString, null\n     */\n    max: {\n      default: () => null,\n      type: [String, null]\n    },\n    /**\n     * Defines a maximal Date/Datetime thats selectable in the calendar widget.\n     * @values right, left, top, bottom\n     */\n    opens: {\n      default: () => 'right',\n      type: String\n    },\n    /**\n     * Toggles time selection in the calendar widget.\n     * @values true, false\n     */\n    time: {\n      type: Boolean,\n      default: () => true\n    },\n    /**\n     * Toggles single date selection; uses only min property in that case.\n     * @values true, false\n     */\n    range: {\n      type: Boolean,\n      default: () => true\n    },\n    /**\n     * The default selected date.\n     * @model\n     */\n    value: {\n      type: Array,\n      default: () => [null, null]\n    },\n    /**\n     * Append the dialog to the body tag, useful if filter is used within a container that uses overflow:scroll\n     * @model\n     */\n    appendToBody: {\n      type: Boolean,\n      default: () => false\n    }\n  },\n  data: function () {\n    return {\n      dateRange: {\n        startDate: null,\n        endDate: null\n      }\n    }\n  },\n  computed: {\n    formattedDate: function () {\n      const date = this.dateRange\n      if (!date.startDate || !date.endDate) {\n        return 'Select...'\n      }\n      if (date.startDate.toISOString() === date.endDate.toISOString()) {\n        return this.formatDate(date.startDate)\n      } else {\n        return `${this.formatDate(date.startDate)} - ${this.formatDate(date.endDate)}`\n      }\n    },\n    pickerFormat () {\n      return this.time ? 'yyyy-mm-dd HH:MM:ss' : 'yyyy-mm-dd'\n    }\n  },\n  watch: {\n    value (newValue) {\n      this.setDateRange(newValue)\n    }\n  },\n  beforeMount () {\n    this.setDateRange(this.value)\n  },\n  methods: {\n    clearValue: function () {\n      this.dateRange = {\n        startDate: null,\n        endDate: null\n      }\n\n      this.$emit('input', undefined)\n    },\n    setDateRange (value) {\n      if (value) {\n        this.dateRange.startDate = this.createDateFromValue(value[0])\n        this.dateRange.endDate = this.createDateFromValue(value[1])\n      }\n    },\n    updateValues: function () {\n      this.$emit('input', [this.dateRange.startDate, this.dateRange.endDate])\n    },\n    createDateFromValue (value) {\n      if (value) {\n        return isNaN(value) ? new Date(Date.parse(value)) : new Date(value)\n      }\n    },\n    formatDate (dateTime) {\n      return this.time ? dateTime.toLocaleString() : dateTime.toLocaleDateString()\n    }\n  }\n}\n","\n<template>\n  <b-input-group class=\"flex-nowrap\">\n    <date-range-picker\n      ref=\"picker\"\n      v-model=\"dateRange\"\n      class=\"flex-grow-1\"\n      :opens=\"opens\"\n      :locale-data=\"{ firstDay: 1, format: pickerFormat }\"\n      :single-date-picker=\"!range\"\n      :time-picker=\"time\"\n      :time-picker24hour=\"true\"\n      :show-week-numbers=\"false\"\n      :show-dropdowns=\"true\"\n      :auto-apply=\"false\"\n      :ranges=\"false\"\n      :linked-calendars=\"false\"\n      :always-show-calendars=\"true\"\n      :min-date=\"min\"\n      :max-date=\"max\"\n      :append-to-body=\"appendToBody\"\n      @update=\"updateValues\"\n    >\n      <template slot=\"input\">\n        {{ formattedDate }}\n      </template>\n    </date-range-picker>\n    <b-input-group-append>\n      <b-button\n        variant=\"outline-secondary\"\n        class=\"t-btn-clear\"\n        @click=\"clearValue\"\n      >\n        <font-awesome-icon icon=\"times\" />\n      </b-button>\n    </b-input-group-append>\n  </b-input-group>\n</template>\n\n<script>\nexport default {\n  name: 'DateTimeFilter',\n  props: {\n    /**\n     * Define the start of your calendar range.\n     * @values ISOString, null\n     */\n    min: {\n      default: () => null,\n      type: [String, null]\n    },\n    /**\n     * Define the end of your calendar range.\n     * @values ISOString, null\n     */\n    max: {\n      default: () => null,\n      type: [String, null]\n    },\n    /**\n     * Defines a maximal Date/Datetime thats selectable in the calendar widget.\n     * @values right, left, top, bottom\n     */\n    opens: {\n      default: () => 'right',\n      type: String\n    },\n    /**\n     * Toggles time selection in the calendar widget.\n     * @values true, false\n     */\n    time: {\n      type: Boolean,\n      default: () => true\n    },\n    /**\n     * Toggles single date selection; uses only min property in that case.\n     * @values true, false\n     */\n    range: {\n      type: Boolean,\n      default: () => true\n    },\n    /**\n     * The default selected date.\n     * @model\n     */\n    value: {\n      type: Array,\n      default: () => [null, null]\n    },\n    /**\n     * Append the dialog to the body tag, useful if filter is used within a container that uses overflow:scroll\n     * @model\n     */\n    appendToBody: {\n      type: Boolean,\n      default: () => false\n    }\n  },\n  data: function () {\n    return {\n      dateRange: {\n        startDate: null,\n        endDate: null\n      }\n    }\n  },\n  computed: {\n    formattedDate: function () {\n      const date = this.dateRange\n      if (!date.startDate || !date.endDate) {\n        return 'Select...'\n      }\n      if (date.startDate.toISOString() === date.endDate.toISOString()) {\n        return this.formatDate(date.startDate)\n      } else {\n        return `${this.formatDate(date.startDate)} - ${this.formatDate(date.endDate)}`\n      }\n    },\n    pickerFormat () {\n      return this.time ? 'yyyy-mm-dd HH:MM:ss' : 'yyyy-mm-dd'\n    }\n  },\n  watch: {\n    value (newValue) {\n      this.setDateRange(newValue)\n    }\n  },\n  beforeMount () {\n    this.setDateRange(this.value)\n  },\n  methods: {\n    clearValue: function () {\n      this.dateRange = {\n        startDate: null,\n        endDate: null\n      }\n\n      this.$emit('input', undefined)\n    },\n    setDateRange (value) {\n      if (value) {\n        this.dateRange.startDate = this.createDateFromValue(value[0])\n        this.dateRange.endDate = this.createDateFromValue(value[1])\n      }\n    },\n    updateValues: function () {\n      this.$emit('input', [this.dateRange.startDate, this.dateRange.endDate])\n    },\n    createDateFromValue (value) {\n      if (value) {\n        return isNaN(value) ? new Date(Date.parse(value)) : new Date(value)\n      }\n    },\n    formatDate (dateTime) {\n      return this.time ? dateTime.toLocaleString() : dateTime.toLocaleDateString()\n    }\n  }\n}\n</script>\n\n<style lang=\"css\">\n.form-control.reportrange-text {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n</style>\n\n<docs>\nFilter between a begin Date(time) and optionally an end Date(time)\n\n### Usage\n```jsx\nconst defaultMin = new Date()\nconst defaultMax = new Date()\ndefaultMax.setDate(defaultMax.getDate() + 7)\n\nconst selectMax = new Date()\nconst selectMin = new Date()\nselectMax.setDate(selectMax.getDate() + 30)\nselectMin.setDate(selectMin.getDate() - 7)\n\nconst model = [defaultMin.toISOString(), defaultMax.toISOString()]\n<DateTimeFilter\n    opens='right'\n    v-bind:max='selectMax.toISOString()'\n    v-bind:min='selectMin.toISOString()'\n    v-bind:range='true'\n    v-bind:time='true'\n    v-model='model'>\n</DateTimeFilter>\n<div>{{model}}</div>\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'FilterCard',\n  props: {\n    /**\n     * Extra class to style b-card-header\n     */\n    headerClass: {\n      type: String,\n      default: () => ''\n    },\n    /**\n     * Unique filter identifier\n     */\n    name: {\n      type: String,\n      required: true\n    },\n    /**\n     * Human readable label descibing the filter\n     */\n    label: {\n      type: String,\n      required: false,\n      default: () => ''\n    },\n    /**\n     * Indicates if filter is shown in collapsed state or not\n     */\n    collapsed: {\n      type: Boolean,\n      required: false,\n      default: () => true\n    },\n    /**\n     * Indicates if the user can collapse the filter\n     */\n    collapsable: {\n      type: Boolean,\n      required: false,\n      default: () => true\n    },\n    /**\n     * Human readable text with aditional description of the filter\n     */\n    description: {\n      type: String,\n      required: false,\n      default: () => ''\n    },\n    /**\n     * Whether or not the user can remove the filter or not\n     */\n    canRemove: {\n      type: Boolean,\n      required: false,\n      default: () => false\n    }\n  },\n  data () {\n    return {\n      isOpen: this.collapsable ? !this.collapsed : true\n    }\n  },\n  computed: {\n    cssClasses: function () {\n      const classes = this.headerClass.split(' ').filter(i => i)\n      if (this.collapsable) {\n        classes.push('collapsable')\n      }\n      return classes.join(' ')\n    },\n    iconStyle () {\n      return {\n        transform: `rotate(${this.isOpen ? 90 : 0}deg)`,\n        transition: 'transform 0.2s'\n      }\n    }\n  },\n  methods: {\n    removeFilter () {\n      this.$emit('removeFilter', this.name)\n    },\n    toggleState () {\n      if (this.collapsable) {\n        this.isOpen = !this.isOpen\n        return this.isOpen\n      }\n      return false\n    }\n  }\n}\n","<template>\n  <b-card\n    no-body\n    class=\"filter-card mb-2\"\n  >\n    <b-card-header\n      class=\"drag-handle\"\n      :class=\"cssClasses\"\n      @click=\"toggleState\"\n    >\n      <div\n        class=\"title mr-3 px-1\"\n        :title=\"label\"\n      >\n        <font-awesome-icon\n          v-if=\"collapsable\"\n          icon=\"caret-right\"\n          :style=\"iconStyle\"\n          class=\"mr-2\"\n        />\n        {{ label }}\n        <span\n          v-if=\"canRemove\"\n          class=\"remove-button\"\n          @click.stop=\"removeFilter\"\n        >\n          <font-awesome-icon icon=\"times\" />\n        </span>\n      </div>\n    </b-card-header>\n    <b-collapse\n      :id=\"name\"\n      v-model=\"isOpen\"\n    >\n      <b-card-body>\n        <b-form-group :description=\"description\">\n          <slot />\n        </b-form-group>\n      </b-card-body>\n    </b-collapse>\n  </b-card>\n</template>\n\n<script>\nexport default {\n  name: 'FilterCard',\n  props: {\n    /**\n     * Extra class to style b-card-header\n     */\n    headerClass: {\n      type: String,\n      default: () => ''\n    },\n    /**\n     * Unique filter identifier\n     */\n    name: {\n      type: String,\n      required: true\n    },\n    /**\n     * Human readable label descibing the filter\n     */\n    label: {\n      type: String,\n      required: false,\n      default: () => ''\n    },\n    /**\n     * Indicates if filter is shown in collapsed state or not\n     */\n    collapsed: {\n      type: Boolean,\n      required: false,\n      default: () => true\n    },\n    /**\n     * Indicates if the user can collapse the filter\n     */\n    collapsable: {\n      type: Boolean,\n      required: false,\n      default: () => true\n    },\n    /**\n     * Human readable text with aditional description of the filter\n     */\n    description: {\n      type: String,\n      required: false,\n      default: () => ''\n    },\n    /**\n     * Whether or not the user can remove the filter or not\n     */\n    canRemove: {\n      type: Boolean,\n      required: false,\n      default: () => false\n    }\n  },\n  data () {\n    return {\n      isOpen: this.collapsable ? !this.collapsed : true\n    }\n  },\n  computed: {\n    cssClasses: function () {\n      const classes = this.headerClass.split(' ').filter(i => i)\n      if (this.collapsable) {\n        classes.push('collapsable')\n      }\n      return classes.join(' ')\n    },\n    iconStyle () {\n      return {\n        transform: `rotate(${this.isOpen ? 90 : 0}deg)`,\n        transition: 'transform 0.2s'\n      }\n    }\n  },\n  methods: {\n    removeFilter () {\n      this.$emit('removeFilter', this.name)\n    },\n    toggleState () {\n      if (this.collapsable) {\n        this.isOpen = !this.isOpen\n        return this.isOpen\n      }\n      return false\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .card-header.collapsable {\n    cursor: pointer;\n  }\n\n  .form-group {\n    margin-bottom: 0;\n  }\n\n  .title {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .remove-button {\n    cursor: pointer;\n    display: inline-block;\n    height: inherit;\n    opacity: 0;\n    position: absolute;\n    right: 10px;\n    text-align: center;\n    transition: opacity 0.2s, color 0.2s;\n    width: 1.5em;\n  }\n\n  .remove-button:hover {\n    color: var(--danger);\n  }\n\n  .filter-card:hover .remove-button {\n    opacity: 1;\n  }\n\n  .sortable-ghost {\n    border-style: dashed;\n  }\n\n  .sortable-ghost > div {\n    opacity: 0.2;\n  }\n</style>\n\n<docs>\nCard containing filter\n### Usage\n```jsx\nconst onRemoveFilter = () => alert('remove me please')\n\nconst options = () => Promise.resolve(\n [\n  { text: 'Orange', value: 'orange' },\n  { text: 'Apple', value: 'apple' },\n  { text: 'Pineapple', value: 'pineapple' },\n  { text: 'Grape', value: 'grape' }\n ]\n)\nconst model = []\n\n<FilterCard\n  name=\"fruit-card\"\n  label=\"Fruit\"\n  headerClass=\"bg-info text-white\"\n  description=\"Example with checkbox filter\"\n  v-bind:collapsed=\"false\"\n  v-bind:collapsable=\"true\"\n  v-bind:canRemove=\"true\"\n  v-on:removeFilter=\"onRemoveFilter\">\n  <CheckboxFilter\n    v-bind:maxVisibleOptions=\"null\"\n    v-bind:bulkOperation=\"true\"\n    v-bind:options=\"options\"\n    v-model=\"model\">\n  </CheckboxFilter>\n</FilterCard>\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'MultiFilter',\n  props: {\n    /**\n     * Toggle to switch between returning an array with values or an array with the full option\n     */\n    returnTypeAsObject: {\n      type: Boolean,\n      required: false,\n      default: () => false\n    },\n    /**\n     * The HTML input element name.\n     */\n    name: {\n      type: String,\n      required: true\n    },\n    /**\n     * The HTML input element placeholder.\n     */\n    placeholder: {\n      type: String,\n      required: false,\n      default: () => 'Type to search more'\n    },\n    /**\n     * The async method returning filter options.\n     */\n    options: {\n      type: Function,\n      required: true\n    },\n    /**\n     * The amount of initial options to show.\n     */\n    initialDisplayItems: {\n      type: Number,\n      required: false,\n      default: () => 1\n    },\n    /**\n     * The amount of options available at one time\n     * per search request\n     */\n    optionsWarningCount: {\n      type: Number,\n      required: false,\n      default: 100\n    },\n    /**\n     * @model\n     */\n    value: {\n      type: Array,\n      default: () => []\n    },\n    /**\n     * The amount of options to show after filtering the checkbox options.\n     */\n    maxVisibleOptions: {\n      type: Number,\n      default: () => 10\n    }\n  },\n  data () {\n    return {\n      externalUpdate: false,\n      showCount: 0,\n      isLoading: false,\n      triggerQuery: Number,\n      inputOptions: [],\n      initialOptions: [],\n      selection: [],\n      query: ''\n    }\n  },\n  computed: {\n    multifilterOptions () {\n      return this.inputOptions\n    },\n    slicedOptions () {\n      return this.multifilterOptions.slice(0, this.showCount)\n    },\n    foundOptionCount () {\n      return this.multifilterOptions.length\n    },\n    showMoreText () {\n      const remaining = this.foundOptionCount - this.showCount\n      if (remaining <= this.maxVisibleOptions) {\n        return `Show remaining ${remaining}`\n      } else {\n        return `Show ${this.maxVisibleOptions} more`\n      }\n    }\n  },\n  watch: {\n    selection (newValue) {\n      let newSelection\n      if (this.externalUpdate) {\n        this.externalUpdate = false\n        return\n      }\n\n      if (this.returnTypeAsObject) {\n        newSelection = Object.assign(\n          newValue,\n          this.multifilterOptions.filter((mfo) => newValue.includes(mfo.value))\n        )\n      } else {\n        newSelection = [...newValue]\n      }\n\n      this.$emit('input', newSelection)\n    },\n    value () {\n      this.setValue()\n    },\n    query (queryValue) {\n      if (this.triggerQuery) {\n        clearTimeout(this.triggerQuery)\n      }\n\n      if (!queryValue.length) {\n        const newInititalOptions = [].concat(this.multifilterOptions)\n        this.inputOptions = this.inputOptionsSort(newInititalOptions)\n        return\n      }\n\n      this.triggerQuery = setTimeout(() => {\n        clearTimeout(this.triggerQuery)\n        this.showCount = this.maxVisibleOptions\n        this.isLoading = true\n\n        this.options({ nameAttribute: 'label', query: this.query }).then(\n          (searchResults) => {\n            const allOptions = searchResults\n              ? searchResults.concat(this.inputOptions)\n              : this.inputOptions\n            this.inputOptions = this.inputOptionsSort(allOptions)\n          }\n        )\n\n        this.isLoading = false\n      }, 500)\n    }\n  },\n  created () {\n    this.showCount = this.maxVisibleOptions\n  },\n  beforeMount () {\n    this.initializeFilter()\n  },\n  methods: {\n    inputOptionsSort (optionsArray) {\n      optionsArray.sort((a, b) => {\n        if (\n          !this.selection.includes(a.value) &&\n          !this.selection.includes(b.value)\n        ) {\n          return 0\n        } else if (\n          this.selection.includes(a.value) &&\n          !this.selection.includes(b.value)\n        ) {\n          return -1\n        } else return 1\n      })\n\n      return Array.from(\n        new Set(optionsArray.map((cio) => cio.value))\n      ).map((value) => optionsArray.find((cio) => cio.value === value))\n    },\n    setValue () {\n      this.externalUpdate = true\n      this.selection =\n        typeof this.value[0] === 'object'\n          ? this.value.map((vo) => vo.value)\n          : this.value\n    },\n    showMore () {\n      this.showCount += this.maxVisibleOptions\n    },\n    async initializeFilter () {\n      let selectedOptions = []\n\n      if (this.value && this.value.length) {\n        this.setValue()\n        // Get the initial selected\n        selectedOptions = await this.options({\n          nameAttribute: 'label',\n          queryType: 'in',\n          query: this.selection.join(',')\n        })\n      }\n\n      // fetch the other options and concat\n      const completeInitialOptions = selectedOptions.concat(\n        await this.options({\n          nameAttribute: 'label',\n          count: this.initialDisplayItems\n        })\n      )\n\n      // deduplicate by first mapping the id's then getting the first matching object back.\n      this.initialOptions = this.inputOptionsSort(completeInitialOptions)\n      this.inputOptions = this.initialOptions\n    }\n  }\n}\n","<template>\n  <div>\n    <b-input-group>\n      <b-form-input\n        v-model=\"query\"\n        :name=\"name\"\n        :placeholder=\"placeholder\"\n        trim\n      />\n      <b-input-group-append>\n        <b-button\n          variant=\"outline-secondary\"\n          :disabled=\"isLoading\"\n          @click.prevent=\"query = ''\"\n        >\n          <font-awesome-icon\n            v-if=\"isLoading\"\n            icon=\"spinner\"\n            class=\"fa-spin\"\n            size=\"xs\"\n          />\n          <font-awesome-icon v-else icon=\"times\" />\n        </b-button>\n      </b-input-group-append>\n    </b-input-group>\n    <b-form-checkbox-group\n      v-if=\"slicedOptions.length\"\n      v-model=\"selection\"\n      class=\"checkbox-list\"\n      :name=\"name\"\n      :options=\"slicedOptions\"\n      stacked\n    />\n    <div class=\"d-flex\">\n      <b-link\n        v-if=\"showCount < multifilterOptions.length\"\n        class=\"card-link\"\n        @click=\"showMore\"\n      >\n        {{ showMoreText }}\n      </b-link>\n      <div\n        v-if=\"foundOptionCount >= optionsWarningCount\"\n        v-b-popover.hover=\"\n          `There are ${optionsWarningCount} or more results found, only the first ${optionsWarningCount} are available. Please refine your search.`\n        \"\n        class=\"badge badge-warning warning text-white ml-auto d-flex align-items-center\"\n      >\n        <span class=\"mr-1\">\n          {{ optionsWarningCount }}+\n        </span>\n        <font-awesome-icon\n          icon=\"exclamation-circle\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'MultiFilter',\n  props: {\n    /**\n     * Toggle to switch between returning an array with values or an array with the full option\n     */\n    returnTypeAsObject: {\n      type: Boolean,\n      required: false,\n      default: () => false\n    },\n    /**\n     * The HTML input element name.\n     */\n    name: {\n      type: String,\n      required: true\n    },\n    /**\n     * The HTML input element placeholder.\n     */\n    placeholder: {\n      type: String,\n      required: false,\n      default: () => 'Type to search more'\n    },\n    /**\n     * The async method returning filter options.\n     */\n    options: {\n      type: Function,\n      required: true\n    },\n    /**\n     * The amount of initial options to show.\n     */\n    initialDisplayItems: {\n      type: Number,\n      required: false,\n      default: () => 1\n    },\n    /**\n     * The amount of options available at one time\n     * per search request\n     */\n    optionsWarningCount: {\n      type: Number,\n      required: false,\n      default: 100\n    },\n    /**\n     * @model\n     */\n    value: {\n      type: Array,\n      default: () => []\n    },\n    /**\n     * The amount of options to show after filtering the checkbox options.\n     */\n    maxVisibleOptions: {\n      type: Number,\n      default: () => 10\n    }\n  },\n  data () {\n    return {\n      externalUpdate: false,\n      showCount: 0,\n      isLoading: false,\n      triggerQuery: Number,\n      inputOptions: [],\n      initialOptions: [],\n      selection: [],\n      query: ''\n    }\n  },\n  computed: {\n    multifilterOptions () {\n      return this.inputOptions\n    },\n    slicedOptions () {\n      return this.multifilterOptions.slice(0, this.showCount)\n    },\n    foundOptionCount () {\n      return this.multifilterOptions.length\n    },\n    showMoreText () {\n      const remaining = this.foundOptionCount - this.showCount\n      if (remaining <= this.maxVisibleOptions) {\n        return `Show remaining ${remaining}`\n      } else {\n        return `Show ${this.maxVisibleOptions} more`\n      }\n    }\n  },\n  watch: {\n    selection (newValue) {\n      let newSelection\n      if (this.externalUpdate) {\n        this.externalUpdate = false\n        return\n      }\n\n      if (this.returnTypeAsObject) {\n        newSelection = Object.assign(\n          newValue,\n          this.multifilterOptions.filter((mfo) => newValue.includes(mfo.value))\n        )\n      } else {\n        newSelection = [...newValue]\n      }\n\n      this.$emit('input', newSelection)\n    },\n    value () {\n      this.setValue()\n    },\n    query (queryValue) {\n      if (this.triggerQuery) {\n        clearTimeout(this.triggerQuery)\n      }\n\n      if (!queryValue.length) {\n        const newInititalOptions = [].concat(this.multifilterOptions)\n        this.inputOptions = this.inputOptionsSort(newInititalOptions)\n        return\n      }\n\n      this.triggerQuery = setTimeout(() => {\n        clearTimeout(this.triggerQuery)\n        this.showCount = this.maxVisibleOptions\n        this.isLoading = true\n\n        this.options({ nameAttribute: 'label', query: this.query }).then(\n          (searchResults) => {\n            const allOptions = searchResults\n              ? searchResults.concat(this.inputOptions)\n              : this.inputOptions\n            this.inputOptions = this.inputOptionsSort(allOptions)\n          }\n        )\n\n        this.isLoading = false\n      }, 500)\n    }\n  },\n  created () {\n    this.showCount = this.maxVisibleOptions\n  },\n  beforeMount () {\n    this.initializeFilter()\n  },\n  methods: {\n    inputOptionsSort (optionsArray) {\n      optionsArray.sort((a, b) => {\n        if (\n          !this.selection.includes(a.value) &&\n          !this.selection.includes(b.value)\n        ) {\n          return 0\n        } else if (\n          this.selection.includes(a.value) &&\n          !this.selection.includes(b.value)\n        ) {\n          return -1\n        } else return 1\n      })\n\n      return Array.from(\n        new Set(optionsArray.map((cio) => cio.value))\n      ).map((value) => optionsArray.find((cio) => cio.value === value))\n    },\n    setValue () {\n      this.externalUpdate = true\n      this.selection =\n        typeof this.value[0] === 'object'\n          ? this.value.map((vo) => vo.value)\n          : this.value\n    },\n    showMore () {\n      this.showCount += this.maxVisibleOptions\n    },\n    async initializeFilter () {\n      let selectedOptions = []\n\n      if (this.value && this.value.length) {\n        this.setValue()\n        // Get the initial selected\n        selectedOptions = await this.options({\n          nameAttribute: 'label',\n          queryType: 'in',\n          query: this.selection.join(',')\n        })\n      }\n\n      // fetch the other options and concat\n      const completeInitialOptions = selectedOptions.concat(\n        await this.options({\n          nameAttribute: 'label',\n          count: this.initialDisplayItems\n        })\n      )\n\n      // deduplicate by first mapping the id's then getting the first matching object back.\n      this.initialOptions = this.inputOptionsSort(completeInitialOptions)\n      this.inputOptions = this.initialOptions\n    }\n  }\n}\n</script>\n\n<style scoped>\n.warning:hover {\n  cursor: pointer;\n}\n\n.checkbox-list {\n  margin: 0.75rem 0;\n  max-height: 16rem;\n  overflow-y: auto;\n}\n\n.card-link {\n  font-size: small;\n  font-style: italic;\n}\n</style>\n\n<docs>\nItem-based Filter. Search box is used to find items in the table.\n\n### Usage\n```jsx\n\nconst model = []\n<MultiFilter\n  v-bind:returnTypeAsObject=\"false\"\n  v-bind:options=\"multiFilterOptions\"\n  v-bind:collapses=\"false\"\n  v-bind:initialDisplayItems=\"5\"\n  v-bind:maxVisibleOptions=\"5\"\n  v-bind:optionsWarningCount=\"10\"\n  v-model=\"model\"\n  name=\"multi-filter\">\n</MultiFilter>\n<div>{{model}}</div>\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'NumberFilter',\n  props: {\n    /**\n     * The minimum allowed filter value.\n     */\n    min: {\n      type: Number,\n      default: () => Number.MIN_SAFE_INTEGER\n    },\n    /**\n     * The maximum allowed filter value.\n     */\n    max: {\n      type: Number,\n      default: () => Number.MAX_SAFE_INTEGER\n    },\n    /**\n     * Step size when using browser UI controls.\n     */\n    step: {\n      type: Number,\n      default: () => 1\n    },\n    /**\n     * The number to be used in filtering items.\n     * @model\n     */\n    value: {\n      type: Number,\n      default: () => 0\n    },\n    /**\n     * Whether to use an additional UI slider to set the input value.\n     */\n    useSlider: {\n      type: Boolean,\n      default: () => false\n    }\n  },\n  computed: {\n    model: {\n      get () {\n        return this.value\n      },\n      /**\n       * v-model return value\n       *\n       * @event input\n       * @property {Array} Returns new array without the deleted item\n       */\n      set (value) {\n        if (typeof value === 'string' && value === '') {\n          this.$emit('input', undefined)\n        } else {\n          value = Math.min(Math.max(value, this.min), this.max)\n          /**\n          * v-model return value\n          *\n          * @event input\n          * @property {Float} Returns new filter value or NaN\n          */\n          this.$emit('input', parseFloat(value))\n        }\n      }\n    }\n  }\n}\n","<template>\n  <div>\n    <b-input-group>\n      <b-form-input\n        v-model=\"model\"\n        type=\"number\"\n        :min=\"min\"\n        :max=\"max\"\n        :step=\"step\"\n      />\n    </b-input-group>\n    <vue-slider\n      v-if=\"useSlider\"\n      v-model=\"model\"\n      :min=\"min\"\n      :max=\"max\"\n      :interval=\"step\"\n      class=\"mt-2\"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'NumberFilter',\n  props: {\n    /**\n     * The minimum allowed filter value.\n     */\n    min: {\n      type: Number,\n      default: () => Number.MIN_SAFE_INTEGER\n    },\n    /**\n     * The maximum allowed filter value.\n     */\n    max: {\n      type: Number,\n      default: () => Number.MAX_SAFE_INTEGER\n    },\n    /**\n     * Step size when using browser UI controls.\n     */\n    step: {\n      type: Number,\n      default: () => 1\n    },\n    /**\n     * The number to be used in filtering items.\n     * @model\n     */\n    value: {\n      type: Number,\n      default: () => 0\n    },\n    /**\n     * Whether to use an additional UI slider to set the input value.\n     */\n    useSlider: {\n      type: Boolean,\n      default: () => false\n    }\n  },\n  computed: {\n    model: {\n      get () {\n        return this.value\n      },\n      /**\n       * v-model return value\n       *\n       * @event input\n       * @property {Array} Returns new array without the deleted item\n       */\n      set (value) {\n        if (typeof value === 'string' && value === '') {\n          this.$emit('input', undefined)\n        } else {\n          value = Math.min(Math.max(value, this.min), this.max)\n          /**\n          * v-model return value\n          *\n          * @event input\n          * @property {Float} Returns new filter value or NaN\n          */\n          this.$emit('input', parseFloat(value))\n        }\n      }\n    }\n  }\n}\n</script>\n\n<docs>\nBrowser number input filter with additional options.\n### Usage\n```jsx\nconst model = 5\n<NumberFilter\n  v-bind:collapses=\"false\"\n  v-bind:maxVisibleOptions=\"5\"\n  v-model=\"model\"\n  v-bind:min=\"0\"\n  v-bind:max=\"10\"\n  v-bind:step=\"2\"\n  v-bind:useSlider=\"true\"\n  label=\"Number\"\n  name=\"number\">\n</NumberFilter>\n<div>{{model}}</div>\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'RangeFilter',\n  props: {\n    /**\n     * The minimum allowed filter value.\n     */\n    min: {\n      type: Number,\n      default: () => Number.MIN_SAFE_INTEGER\n    },\n    /**\n     * The maximum allowed filter value.\n     */\n    max: {\n      type: Number,\n      default: () => Number.MAX_SAFE_INTEGER\n    },\n    /**\n     * Step size when using browser UI controls.\n     */\n    step: {\n      type: Number,\n      default: () => 1\n    },\n    /**\n     * The number to be used in filtering items.\n     * @model\n     */\n    value: {\n      type: Array,\n      default: () => [null, null]\n    },\n    /**\n     * Whether to use an additional UI slider to set the input value.\n     */\n    useSlider: {\n      type: Boolean,\n      default: () => false\n    }\n  },\n  data: function () {\n    return {\n      rangeValue: this.value\n    }\n  },\n  watch: {\n    value (newValue) {\n      if (newValue[0] == null && newValue[1] == null) {\n        this.rangeValue = [null, null]\n      }\n    }\n  },\n  methods: {\n    setRangeValue (id, value) {\n      this.rangeValue[id] = value\n      this.handleRangeValueChange()\n    },\n    clampValue (value, max, min) {\n      return Math.min(Math.max(value, min), max)\n    },\n    handleRangeValueChange () {\n      if (this.rangeValue[0] === '') {\n        this.rangeValue[0] = null\n      }\n      if (this.rangeValue[1] === '') {\n        this.rangeValue[1] = null\n      }\n\n      if (this.rangeValue[0] != null) {\n        this.rangeValue[0] = this.clampValue(this.rangeValue[0], this.max, this.min)\n      }\n      if (this.rangeValue[1] != null) {\n        this.rangeValue[1] = this.clampValue(this.rangeValue[1], this.max, this.min)\n      }\n      this.rangeValue = [this.rangeValue[0], this.rangeValue[1]]\n\n      /**\n      * Clone to break reactive loop.\n      * @property {Array} rangeValue Range filter value\n      */\n      this.$emit('input', [...this.rangeValue])\n    }\n  }\n}\n","\n<template>\n  <div>\n    <b-input-group class=\"mb-1\">\n      <b-form-input\n        v-model=\"rangeValue[0]\"\n        type=\"number\"\n        :min=\"min\"\n        :max=\"max\"\n        placeholder=\"from\"\n        :step=\"step\"\n        class=\"text-center range-from\"\n        @input=\"handleRangeValueChange\"\n      />\n      <b-input-group-append>\n        <b-button\n          class=\"clear-from\"\n          variant=\"outline-secondary\"\n          @click.prevent=\"setRangeValue(0, null)\"\n        >\n          <font-awesome-icon icon=\"times\" />\n        </b-button>\n      </b-input-group-append>\n    </b-input-group>\n    <b-input-group>\n      <b-form-input\n        v-model=\"rangeValue[1]\"\n        type=\"number\"\n        :min=\"min\"\n        :max=\"max\"\n        placeholder=\"to\"\n        :step=\"step\"\n        class=\"text-center range-to\"\n        @input=\"handleRangeValueChange\"\n      />\n      <b-input-group-append>\n        <b-button\n          class=\"clear-to\"\n          variant=\"outline-secondary\"\n          @click.prevent=\"setRangeValue(1, null)\"\n        >\n          <font-awesome-icon icon=\"times\" />\n        </b-button>\n      </b-input-group-append>\n    </b-input-group>\n    <vue-slider\n      v-if=\"useSlider\"\n      v-model=\"rangeValue\"\n      :min=\"min\"\n      :max=\"max\"\n      :interval=\"step\"\n      class=\"mt-2\"\n      @change=\"handleRangeValueChange\"\n    />\n    <small\n      v-if=\"min != Number.MIN_SAFE_INTEGER && max != Number.MAX_SAFE_INTEGER\"\n      class=\"form-text text-muted\"\n    >In a range of {{ min }} and {{ max }}</small>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'RangeFilter',\n  props: {\n    /**\n     * The minimum allowed filter value.\n     */\n    min: {\n      type: Number,\n      default: () => Number.MIN_SAFE_INTEGER\n    },\n    /**\n     * The maximum allowed filter value.\n     */\n    max: {\n      type: Number,\n      default: () => Number.MAX_SAFE_INTEGER\n    },\n    /**\n     * Step size when using browser UI controls.\n     */\n    step: {\n      type: Number,\n      default: () => 1\n    },\n    /**\n     * The number to be used in filtering items.\n     * @model\n     */\n    value: {\n      type: Array,\n      default: () => [null, null]\n    },\n    /**\n     * Whether to use an additional UI slider to set the input value.\n     */\n    useSlider: {\n      type: Boolean,\n      default: () => false\n    }\n  },\n  data: function () {\n    return {\n      rangeValue: this.value\n    }\n  },\n  watch: {\n    value (newValue) {\n      if (newValue[0] == null && newValue[1] == null) {\n        this.rangeValue = [null, null]\n      }\n    }\n  },\n  methods: {\n    setRangeValue (id, value) {\n      this.rangeValue[id] = value\n      this.handleRangeValueChange()\n    },\n    clampValue (value, max, min) {\n      return Math.min(Math.max(value, min), max)\n    },\n    handleRangeValueChange () {\n      if (this.rangeValue[0] === '') {\n        this.rangeValue[0] = null\n      }\n      if (this.rangeValue[1] === '') {\n        this.rangeValue[1] = null\n      }\n\n      if (this.rangeValue[0] != null) {\n        this.rangeValue[0] = this.clampValue(this.rangeValue[0], this.max, this.min)\n      }\n      if (this.rangeValue[1] != null) {\n        this.rangeValue[1] = this.clampValue(this.rangeValue[1], this.max, this.min)\n      }\n      this.rangeValue = [this.rangeValue[0], this.rangeValue[1]]\n\n      /**\n      * Clone to break reactive loop.\n      * @property {Array} rangeValue Range filter value\n      */\n      this.$emit('input', [...this.rangeValue])\n    }\n  }\n}\n</script>\n\n<docs>\nBrowser number input filter with additional options.\n### Usage\n```jsx\nconst model = [2, 8]\n<RangeFilter\n  v-model=\"model\"\n  v-bind:min=\"0\"\n  v-bind:max=\"10\"\n  v-bind:step=\"1\"\n  v-bind:useSlider=\"true\"\n  label=\"Number\"\n  name=\"number\">\n</RangeFilter>\n<div>{{model}}</div>\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'StringFilter',\n  props: {\n    /**\n     * The HTML input element name.\n     */\n    name: {\n      type: String,\n      required: true\n    },\n    /**\n     * The HTML input element placeholder.\n     */\n    placeholder: {\n      type: String,\n      required: false,\n      default: () => ''\n    },\n    /**\n     * The StringFilter model value.\n     * @model\n     */\n    value: {\n      type: String,\n      default: () => ''\n    }\n  },\n  computed: {\n    model: {\n      get () {\n        return this.value || ''\n      },\n      set (value) {\n        this.$emit('input', value === '' ? undefined : value)\n      }\n    }\n  }\n}\n","<template>\n  <b-input-group>\n    <b-form-input\n      v-model=\"model\"\n      :name=\"name\"\n      :placeholder=\"placeholder\"\n      trim\n    />\n    <b-input-group-append>\n      <b-button\n        variant=\"outline-secondary\"\n        @click.prevent=\"model=''\"\n      >\n        <font-awesome-icon icon=\"times\" />\n      </b-button>\n    </b-input-group-append>\n  </b-input-group>\n</template>\n\n<script>\nexport default {\n  name: 'StringFilter',\n  props: {\n    /**\n     * The HTML input element name.\n     */\n    name: {\n      type: String,\n      required: true\n    },\n    /**\n     * The HTML input element placeholder.\n     */\n    placeholder: {\n      type: String,\n      required: false,\n      default: () => ''\n    },\n    /**\n     * The StringFilter model value.\n     * @model\n     */\n    value: {\n      type: String,\n      default: () => ''\n    }\n  },\n  computed: {\n    model: {\n      get () {\n        return this.value || ''\n      },\n      set (value) {\n        this.$emit('input', value === '' ? undefined : value)\n      }\n    }\n  }\n}\n</script>\n\n<docs>\nBrowser input filter with additional options.\n### Usage\n```jsx\nconst model = 'bla'\n<StringFilter\n  v-model=\"model\"\n  placeholder=\"Input placeholder\"\n  name=\"my-string-filter\">\n</StringFilter>\n<div>{{model}}</div>\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport FilterCard from './FilterCard.vue'\n\nimport ActiveFilters from '../ActiveFilters.vue'\nimport ChangeFilters from '../ChangeFilters.vue'\nimport CheckboxFilter from '../CheckboxFilter.vue'\nimport DateTimeFilter from '../DateTimeFilter.vue'\nimport MultiFilter from '../MultiFilter.vue'\nimport NumberFilter from '../NumberFilter.vue'\nimport RangeFilter from '../RangeFilter.vue'\nimport StringFilter from '../StringFilter.vue'\n\nexport default {\n  name: 'FilterContainer',\n  components: {\n    ActiveFilters,\n    ChangeFilters,\n    CheckboxFilter,\n    DateTimeFilter,\n    MultiFilter,\n    NumberFilter,\n    RangeFilter,\n    StringFilter,\n    FilterCard\n  },\n  props: {\n    /**\n     * An array of filters to render.\n     */\n    filters: {\n      type: Array,\n      required: true\n    },\n    /**\n     * Object Key/values of filter names/values from all concerned filters.\n     * @model\n     */\n    value: {\n      type: Object,\n      default: () => ({})\n    },\n    /**\n     * The filters to show; an array of filter name properties.\n     */\n    filtersShown: {\n      type: Array,\n      required: false,\n      default: () => []\n    },\n    /**\n     * Lock or unluck filter addition/removal.\n     */\n    canEdit: {\n      type: Boolean,\n      required: false,\n      default: () => false\n    },\n    /**\n    * Set active filters selection dialogue style, choose between 'dropdown' or 'modal'.\n    * Defaults to using 'dropdown'\n    */\n    dialogStyle: {\n      type: String,\n      required: false,\n      default: () => 'dropdown'\n    },\n    /**\n    * Change action label\n    */\n    filterActionLabel: {\n      type: String,\n      required: false,\n      default: () => 'Add filter'\n    },\n    /**\n    * Filter list label\n    */\n    filterListLabel: {\n      type: String,\n      required: false,\n      default: () => 'Filters'\n    }\n  },\n  data () {\n    return {\n      filtersToShow: this.filtersShown,\n      filterToAdd: null,\n      drag: false,\n      width: 0,\n      mobileToggle: false\n    }\n  },\n  computed: {\n    doCollapse () {\n      // Bootstrap's mobile collapse width\n      return this.width <= 576\n    },\n    doDragDrop () {\n      return this.canEdit && !this.doCollapse\n    },\n    listOfVisibleFilters () {\n      return this.filtersToShow.map(id => this.filters.find(filter => filter.name === id))\n        .filter(item => item !== undefined)\n        .filter(item => item.type !== 'compound-title')\n    }\n  },\n  watch: {\n    filtersShown (newValue) {\n      this.filtersToShow = newValue\n    }\n  },\n  created () {\n    window.addEventListener('resize', this.handleResize)\n    this.handleResize()\n  },\n  destroyed () {\n    window.removeEventListener('resize', this.handleResize)\n  },\n  methods: {\n    handleResize () {\n      this.width = window.innerWidth\n    },\n    removeFilter (name) {\n      this.filtersToShow = this.filtersToShow.filter(filter => name !== filter)\n      /**\n       * Emit the filters that are supposed to be visible.\n       * @property {Array} filtersToShow - An array of filter name properties\n       * @event update\n       */\n      this.$emit('update', this.filtersToShow)\n\n      const selections = { ...this.value }\n      delete selections[name]\n      this.$emit('input', selections)\n    },\n    selectionChange (name, value) {\n      /**\n       * Update the model with the updated values from related filters.\n       * @property {Object} - Filter name/value\n       * @event input\n       */\n\n      // clear an empty checkbox and range filter\n      if (Array.isArray(value)) {\n        if (value.length === 0) {\n          value = undefined\n        } else if (value.every(item => item === null)) {\n          value = undefined\n        }\n      }\n\n      const newSelection = { ...this.value, [name]: value }\n      // remove all undefined properties\n      Object.keys(newSelection).forEach(key => newSelection[key] === undefined && delete newSelection[key])\n      this.$emit('input', newSelection)\n    },\n    selectionUpdate () {\n      this.$emit('update', this.filtersToShow)\n    }\n  }\n}\n","<template>\n  <div\n    class=\"filter-container\"\n    @mouseup=\"drag=false\"\n  >\n    <div v-if=\"canEdit && filters.length > 0\" class=\"change-filters\">\n      <b-dropdown\n        v-if=\"dialogStyle == 'dropdown'\"\n        ref=\"addFilter\"\n        class=\"mb-2\"\n        variant=\"outline-primary\"\n        boundary=\"window\"\n        menu-class=\"shadow ml-2\"\n        dropright\n        no-caret\n        block\n      >\n        <template #button-content>\n          <font-awesome-icon icon=\"filter\" class=\"mr-1\" /> {{ filterActionLabel }}\n        </template>\n        <b-dropdown-text>\n          {{ filterListLabel }}\n          <span class=\"float-right btn-close-filter-dialog\" @click.stop=\"$refs.addFilter.hide(true)\">\n            <font-awesome-icon icon=\"times\" />\n          </span>\n        </b-dropdown-text>\n        <b-dropdown-form>\n          <change-filters\n            v-model=\"filtersToShow\"\n            :filters=\"filters\"\n            @input=\"selectionUpdate\"\n          />\n        </b-dropdown-form>\n      </b-dropdown>\n      <button v-else v-b-modal.change-filters-modal class=\"btn btn-block btn-primary text-nowrap\">\n        {{ filterListLabel }}<font-awesome-icon icon=\"caret-right\" class=\"ml-1\" />\n      </button>\n      <b-modal\n        id=\"change-filters-modal\" title=\"Change filters\"\n        hide-footer\n        hide-header scrollable\n      >\n        <change-filters\n          v-model=\"filtersToShow\"\n          :filters=\"filters\"\n          @input=\"selectionUpdate\"\n        />\n      </b-modal>\n    </div>\n\n    <b-collapse\n      id=\"mobile-button-toggle\"\n      :visible=\"doCollapse\"\n    >\n      <button\n        class=\"btn w-100 my-2 btn-outline-secondary\"\n        @click=\"mobileToggle=!mobileToggle\"\n      >\n        {{ mobileToggle?'Hide filters':'Show filters' }}\n      </button>\n    </b-collapse>\n\n    <b-collapse\n      id=\"mobile-toggle\"\n      :visible=\"!doCollapse || mobileToggle\"\n    >\n      <draggable\n        v-model=\"filtersToShow\"\n        handle=\".drag-handle\"\n        :class=\"{'dragdrop': doDragDrop, 'dragging': drag}\"\n        :disabled=\"!doDragDrop\"\n        @choose=\"drag=true\"\n        @end=\"drag=false\"\n        @input=\"selectionUpdate\"\n      >\n        <transition-group>\n          <filter-card\n            v-for=\"filter in listOfVisibleFilters\"\n            :key=\"filter.name\"\n            v-bind=\"filter\"\n            :can-remove=\"canEdit\"\n            @removeFilter=\"removeFilter(filter.name)\"\n          >\n            <component\n              :is=\"filter.type\"\n              :name=\"filter.name\"\n              :value=\"value[filter.name]\"\n              v-bind=\"filter\"\n              @input=\"value => selectionChange(filter.name, value)\"\n            />\n          </filter-card>\n        </transition-group>\n      </draggable>\n    </b-collapse>\n  </div>\n</template>\n\n<script>\nimport FilterCard from './FilterCard.vue'\n\nimport ActiveFilters from '../ActiveFilters.vue'\nimport ChangeFilters from '../ChangeFilters.vue'\nimport CheckboxFilter from '../CheckboxFilter.vue'\nimport DateTimeFilter from '../DateTimeFilter.vue'\nimport MultiFilter from '../MultiFilter.vue'\nimport NumberFilter from '../NumberFilter.vue'\nimport RangeFilter from '../RangeFilter.vue'\nimport StringFilter from '../StringFilter.vue'\n\nexport default {\n  name: 'FilterContainer',\n  components: {\n    ActiveFilters,\n    ChangeFilters,\n    CheckboxFilter,\n    DateTimeFilter,\n    MultiFilter,\n    NumberFilter,\n    RangeFilter,\n    StringFilter,\n    FilterCard\n  },\n  props: {\n    /**\n     * An array of filters to render.\n     */\n    filters: {\n      type: Array,\n      required: true\n    },\n    /**\n     * Object Key/values of filter names/values from all concerned filters.\n     * @model\n     */\n    value: {\n      type: Object,\n      default: () => ({})\n    },\n    /**\n     * The filters to show; an array of filter name properties.\n     */\n    filtersShown: {\n      type: Array,\n      required: false,\n      default: () => []\n    },\n    /**\n     * Lock or unluck filter addition/removal.\n     */\n    canEdit: {\n      type: Boolean,\n      required: false,\n      default: () => false\n    },\n    /**\n    * Set active filters selection dialogue style, choose between 'dropdown' or 'modal'.\n    * Defaults to using 'dropdown'\n    */\n    dialogStyle: {\n      type: String,\n      required: false,\n      default: () => 'dropdown'\n    },\n    /**\n    * Change action label\n    */\n    filterActionLabel: {\n      type: String,\n      required: false,\n      default: () => 'Add filter'\n    },\n    /**\n    * Filter list label\n    */\n    filterListLabel: {\n      type: String,\n      required: false,\n      default: () => 'Filters'\n    }\n  },\n  data () {\n    return {\n      filtersToShow: this.filtersShown,\n      filterToAdd: null,\n      drag: false,\n      width: 0,\n      mobileToggle: false\n    }\n  },\n  computed: {\n    doCollapse () {\n      // Bootstrap's mobile collapse width\n      return this.width <= 576\n    },\n    doDragDrop () {\n      return this.canEdit && !this.doCollapse\n    },\n    listOfVisibleFilters () {\n      return this.filtersToShow.map(id => this.filters.find(filter => filter.name === id))\n        .filter(item => item !== undefined)\n        .filter(item => item.type !== 'compound-title')\n    }\n  },\n  watch: {\n    filtersShown (newValue) {\n      this.filtersToShow = newValue\n    }\n  },\n  created () {\n    window.addEventListener('resize', this.handleResize)\n    this.handleResize()\n  },\n  destroyed () {\n    window.removeEventListener('resize', this.handleResize)\n  },\n  methods: {\n    handleResize () {\n      this.width = window.innerWidth\n    },\n    removeFilter (name) {\n      this.filtersToShow = this.filtersToShow.filter(filter => name !== filter)\n      /**\n       * Emit the filters that are supposed to be visible.\n       * @property {Array} filtersToShow - An array of filter name properties\n       * @event update\n       */\n      this.$emit('update', this.filtersToShow)\n\n      const selections = { ...this.value }\n      delete selections[name]\n      this.$emit('input', selections)\n    },\n    selectionChange (name, value) {\n      /**\n       * Update the model with the updated values from related filters.\n       * @property {Object} - Filter name/value\n       * @event input\n       */\n\n      // clear an empty checkbox and range filter\n      if (Array.isArray(value)) {\n        if (value.length === 0) {\n          value = undefined\n        } else if (value.every(item => item === null)) {\n          value = undefined\n        }\n      }\n\n      const newSelection = { ...this.value, [name]: value }\n      // remove all undefined properties\n      Object.keys(newSelection).forEach(key => newSelection[key] === undefined && delete newSelection[key])\n      this.$emit('input', newSelection)\n    },\n    selectionUpdate () {\n      this.$emit('update', this.filtersToShow)\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .dragdrop .drag-handle {\n    cursor: grab;\n  }\n\n  .dragdrop.dragging .drag-handle {\n    cursor: grabbing;\n  }\n\n  .btn-close-filter-dialog {\n    cursor: pointer;\n    display: inline-block;\n    height: inherit;\n    position: absolute;\n    right: 10px;\n    text-align: center;\n    transition: color 0.2s;\n    width: 1.5em;\n  }\n\n  .btn-close-filter-dialog:hover {\n    color: var(--danger);\n  }\n\n  .change-filters form {\n    max-height: 400px;\n    overflow: auto;\n  }\n</style>\n\n<docs>\nCard containing filter\n### Usage\n```jsx\nconst onRemoveFilter = () => alert('remove me please')\n\nconst model = {\n    search: 'test',\n}\n\nconst filtersShown = ['datetime']\n\n<div class=\"row\">\n  <div class=\"col-4\">\n    <FilterContainer\n        v-model=\"model\"\n        :filters=\"filtersMocks\"\n        :filters-shown=\"filtersShown\"\n        :can-edit=\"true\"\n        filterActionLabel=\"Add filter\"\n        filterListLabel=\"Filters\"\n        @update=\"(newState) => filtersShown = newState\"\n    />\n  </div>\n  <div>{{model}}</div>\n</div>\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'Pagination',\n  props: {\n    /**\n     * Extra css classes for the pagination buttons.\n     */\n    css: {\n      type: Object,\n      required: false,\n      default: () => ({})\n    },\n    /**\n     * Translatable texts.\n     */\n    i18n: {\n      type: Object,\n      default: () => ({\n        page: 'page',\n        'per page': 'per page',\n        items: 'items'\n      })\n    },\n    /**\n     * Select choices for the page size.\n     */\n    pageSizes: {\n      type: Array,\n      required: false,\n      default: () => [10, 20, 50]\n    },\n    /**\n     * Reflects the pagination state.\n     * @model\n     */\n    value: {\n      type: Object,\n      required: true\n    },\n    /**\n     * Number of navigational page buttons; this must be uneven.\n     */\n    visiblePages: {\n      type: Number,\n      default: () => 7,\n      validator (value) {\n        return (value % 2 !== 0)\n      }\n    }\n  },\n  data: function () {\n    return {\n      localValue: {\n        size: 20,\n        page: 1,\n        loading: false,\n        count: 0\n      }\n    }\n  },\n  computed: {\n    navigationText () {\n      if (this.pageCount <= 1) {\n        return `${this.i18n.items}: ${this.localValue.count}`\n      } else {\n        return `${this.i18n.page} ${this.localValue.page}/${this.pageCount} (${this.localValue.count} ${this.i18n.items})`\n      }\n    },\n    pageCount () {\n      if (!this.localValue.count) { return 0 }\n      return Math.ceil(this.localValue.count / this.localValue.size)\n    },\n    pageNumbers () {\n      const pages = []\n      for (let i = this.pageRange.left; i <= this.pageRange.right; i++) { pages.push(i) }\n      return pages\n    },\n    /**\n     * Calculations that determine which pages must be rendered.\n     * See the computed `pageNumbers` method for its usage.\n     */\n    pageRange () {\n      const edge = Math.floor(this.visiblePages / 2)\n      const start = this.localValue.page <= edge\n      const end = this.localValue.page >= (Math.floor(this.localValue.count / this.localValue.size) - edge)\n\n      let left, right\n\n      if (start) {\n        left = 1\n        right = (this.pageCount > this.visiblePages) ? this.visiblePages : this.pageCount\n      } else if (end) {\n        left = (this.pageCount - this.visiblePages) > 0 ? (this.pageCount - this.visiblePages + 1) : 1\n        right = this.pageCount\n      } else {\n        // Must be within the mid-range.\n        left = this.localValue.page - edge\n        right = this.localValue.page + edge\n      }\n\n      return { left, right }\n    }\n  },\n  watch: {\n    /**\n     * Sync the local state when the external state changes.\n     */\n    value: {\n      handler (value) {\n        this.localValue = value\n      },\n      deep: true\n    }\n  },\n  async created () {\n    this.localValue = { ...this.localValue, ...this.value }\n  },\n  methods: {\n    updateValue (value) {\n      this.localValue = { ...this.localValue, ...this.value, ...value }\n      this.$emit('input', { ...this.localValue })\n    },\n    handleSizeChange () {\n      this.updateValue({ page: 1, size: this.localValue.size })\n    }\n  }\n}\n","<template>\n  <nav class=\"c-pagination\">\n    <div v-if=\"localValue.count > localValue.size\" class=\"btn-group mb-2 mr-3\">\n      <button\n        :class=\"css\" class=\"btn btn-outline-primary\"\n        :disabled=\"localValue.page <= 1\"\n        @click=\"updateValue({page: 1})\"\n      >\n        «\n      </button>\n\n      <button\n        :class=\"css\" class=\"t-page-prev btn btn-outline-primary\"\n        :disabled=\"localValue.page <= 1\"\n        @click=\"updateValue({page: localValue.page - 1})\"\n      >\n        ‹\n      </button>\n\n      <button\n        v-for=\"pageNumber in pageNumbers\" :key=\"pageNumber\"\n        class=\"btn btn-outline-primary\"\n        :class=\"{'active': pageNumber === localValue.page, ...css}\"\n        @click=\"updateValue({page: pageNumber})\"\n      >\n        {{ pageNumber }}\n      </button>\n\n      <button\n        :class=\"css\" class=\"t-page-next btn btn-outline-primary\"\n        :disabled=\"localValue.page >= pageCount\"\n        @click=\"updateValue({page: localValue.page + 1})\"\n      >\n        ›\n      </button>\n\n      <button\n        :class=\"css\" class=\"btn btn-outline-primary\"\n        :disabled=\"localValue.page >= pageCount\"\n        @click=\"updateValue({page: pageCount})\"\n      >\n        »\n      </button>\n    </div>\n\n    <div class=\"controls mb-2\">\n      <div class=\"item-count form-inline mr-2\">\n        <span>{{ navigationText }}</span>\n      </div>\n\n      <div class=\"form-check form-check-inline\">\n        <label class=\"form-check-label mr-2\" for=\"page-size\">{{ i18n['per page'] }}</label>\n        <select\n          id=\"page-size\" v-model=\"localValue.size\"\n          class=\"form-control\"\n          @change=\"handleSizeChange\"\n        >\n          <option v-for=\"pageSize of pageSizes\" :key=\"pageSize\" :value=\"pageSize\">\n            {{ pageSize }}\n          </option>\n        </select>\n      </div>\n    </div>\n  </nav>\n</template>\n\n<script>\nexport default {\n  name: 'Pagination',\n  props: {\n    /**\n     * Extra css classes for the pagination buttons.\n     */\n    css: {\n      type: Object,\n      required: false,\n      default: () => ({})\n    },\n    /**\n     * Translatable texts.\n     */\n    i18n: {\n      type: Object,\n      default: () => ({\n        page: 'page',\n        'per page': 'per page',\n        items: 'items'\n      })\n    },\n    /**\n     * Select choices for the page size.\n     */\n    pageSizes: {\n      type: Array,\n      required: false,\n      default: () => [10, 20, 50]\n    },\n    /**\n     * Reflects the pagination state.\n     * @model\n     */\n    value: {\n      type: Object,\n      required: true\n    },\n    /**\n     * Number of navigational page buttons; this must be uneven.\n     */\n    visiblePages: {\n      type: Number,\n      default: () => 7,\n      validator (value) {\n        return (value % 2 !== 0)\n      }\n    }\n  },\n  data: function () {\n    return {\n      localValue: {\n        size: 20,\n        page: 1,\n        loading: false,\n        count: 0\n      }\n    }\n  },\n  computed: {\n    navigationText () {\n      if (this.pageCount <= 1) {\n        return `${this.i18n.items}: ${this.localValue.count}`\n      } else {\n        return `${this.i18n.page} ${this.localValue.page}/${this.pageCount} (${this.localValue.count} ${this.i18n.items})`\n      }\n    },\n    pageCount () {\n      if (!this.localValue.count) { return 0 }\n      return Math.ceil(this.localValue.count / this.localValue.size)\n    },\n    pageNumbers () {\n      const pages = []\n      for (let i = this.pageRange.left; i <= this.pageRange.right; i++) { pages.push(i) }\n      return pages\n    },\n    /**\n     * Calculations that determine which pages must be rendered.\n     * See the computed `pageNumbers` method for its usage.\n     */\n    pageRange () {\n      const edge = Math.floor(this.visiblePages / 2)\n      const start = this.localValue.page <= edge\n      const end = this.localValue.page >= (Math.floor(this.localValue.count / this.localValue.size) - edge)\n\n      let left, right\n\n      if (start) {\n        left = 1\n        right = (this.pageCount > this.visiblePages) ? this.visiblePages : this.pageCount\n      } else if (end) {\n        left = (this.pageCount - this.visiblePages) > 0 ? (this.pageCount - this.visiblePages + 1) : 1\n        right = this.pageCount\n      } else {\n        // Must be within the mid-range.\n        left = this.localValue.page - edge\n        right = this.localValue.page + edge\n      }\n\n      return { left, right }\n    }\n  },\n  watch: {\n    /**\n     * Sync the local state when the external state changes.\n     */\n    value: {\n      handler (value) {\n        this.localValue = value\n      },\n      deep: true\n    }\n  },\n  async created () {\n    this.localValue = { ...this.localValue, ...this.value }\n  },\n  methods: {\n    updateValue (value) {\n      this.localValue = { ...this.localValue, ...this.value, ...value }\n      this.$emit('input', { ...this.localValue })\n    },\n    handleSizeChange () {\n      this.updateValue({ page: 1, size: this.localValue.size })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.c-pagination {\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n\n  .btn-group {\n    display: flex;\n\n    .btn {\n      // Use fixed width buttons, so their position remains stable during navigation.\n      width: 2.25rem;\n    }\n  }\n\n  // The controls container fills up the rest of the space and flows\n  // beneath the navigation buttons when there is no more room.\n  .controls {\n    display: flex;\n    flex: 1;\n    flex-wrap: nowrap;\n    justify-content: space-between;\n    white-space: nowrap;\n\n    select {\n      width: 4.5rem;\n    }\n\n    .form-check {\n      margin: 0;\n    }\n  }\n}\n</style>\n\n<docs>\n## Basic example\n\n```jsx\n  // Always provide at least 'size' and 'page'; the other properties\n  // are added from the pagination component itself.\n  let model = { size: 20, page: 1, count: 124 }\n  const mockStore = (e) => { model = e }\n\n  <Pagination\n    v-model=\"model\"\n    v-on:input=\"mockStore\"\n    v-bind:visiblePages=\"9\"\n    v-bind:pageSizes=\"[10, 20, 50, 100]\"\n    v-bind:css=\"{'btn-sm': true}\"/>\n  Model: {{model}}\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst defaultTimeout = 3000\n\nexport default {\n  name: 'Toaster',\n  props: {\n    /**\n     * List of toasts to show (see types/Toast.ts)\n     * @model\n     */\n    value: {\n      type: Array,\n      required: true\n    },\n    /**\n     * Position of toast in window\n     * Fixed positioning: 'top-left', 'bottom-left', 'top-right', 'bottom-right'\n     * Or Inline using: 'inline'\n     */\n    position: {\n      type: String,\n      default: () => 'bottom-right'\n    }\n  },\n  data: function () {\n    return {\n      toasts: [...this.value]\n    }\n  },\n  watch: {\n    value: {\n      handler: function (newValue, oldValue) {\n        this.$set(this, 'toasts', [...newValue])\n\n        // Only process timeout for new toasts. Old value is empty\n        // when called on creation, due to immediately watch property.\n        if (oldValue && newValue.length < oldValue.length) return\n\n        for (const toast of newValue) {\n          // Timeout already scheduled.\n          if (toast.timeout === -1) continue\n          // New toast has an explicitly disabled timeout.\n          if (toast.timeout === 0) continue\n\n          if (!toast.timeout) {\n            toast.timeout = defaultTimeout\n          }\n\n          setTimeout(() => {\n            this.clearToast(toast)\n          }, toast.timeout)\n\n          toast.timeout = -1\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    clearToast (toast) {\n      this.toasts.splice(this.toasts.indexOf(toast), 1)\n      /**\n      * v-model return value\n      * @event input\n      * @property {Object[]} Toasts array with toast removed\n      */\n      this.$emit('input', [...this.toasts])\n    }\n  }\n}\n","<template>\n  <div class=\"c-toaster\" :class=\"{[position]: true}\">\n    <div\n      v-for=\"(toast, index) in toasts\" :key=\"index\"\n      class=\"mg-toast alert alert-dismissible fade show shadow-sm\"\n      :class=\"{[`alert-${toast.type}`]: true}\"\n    >\n      <div class=\"mg-toast-message\" v-html=\"toast.message\" />\n\n      <button type=\"button\" class=\"close\" @click=\"clearToast(toast)\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  </div>\n</template>\n<script>\nconst defaultTimeout = 3000\n\nexport default {\n  name: 'Toaster',\n  props: {\n    /**\n     * List of toasts to show (see types/Toast.ts)\n     * @model\n     */\n    value: {\n      type: Array,\n      required: true\n    },\n    /**\n     * Position of toast in window\n     * Fixed positioning: 'top-left', 'bottom-left', 'top-right', 'bottom-right'\n     * Or Inline using: 'inline'\n     */\n    position: {\n      type: String,\n      default: () => 'bottom-right'\n    }\n  },\n  data: function () {\n    return {\n      toasts: [...this.value]\n    }\n  },\n  watch: {\n    value: {\n      handler: function (newValue, oldValue) {\n        this.$set(this, 'toasts', [...newValue])\n\n        // Only process timeout for new toasts. Old value is empty\n        // when called on creation, due to immediately watch property.\n        if (oldValue && newValue.length < oldValue.length) return\n\n        for (const toast of newValue) {\n          // Timeout already scheduled.\n          if (toast.timeout === -1) continue\n          // New toast has an explicitly disabled timeout.\n          if (toast.timeout === 0) continue\n\n          if (!toast.timeout) {\n            toast.timeout = defaultTimeout\n          }\n\n          setTimeout(() => {\n            this.clearToast(toast)\n          }, toast.timeout)\n\n          toast.timeout = -1\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    clearToast (toast) {\n      this.toasts.splice(this.toasts.indexOf(toast), 1)\n      /**\n      * v-model return value\n      * @event input\n      * @property {Object[]} Toasts array with toast removed\n      */\n      this.$emit('input', [...this.toasts])\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n$spacer: 0.5rem;\n\n.c-toaster {\n  &.top-left,\n  &.top-right {\n    position: fixed;\n    top: $spacer;\n  }\n\n  &.bottom-left,\n  &.bottom-right {\n    bottom: $spacer;\n    position: fixed;\n  }\n\n  &.bottom-left,\n  &.top-left {\n    left: $spacer;\n  }\n\n  &.bottom-right,\n  &.top-right {\n    right: $spacer;\n  }\n\n  &:not(.inline) {\n    max-width: 350px; // To match bootstrap's toast size ( in case the shopping cart is under the toasts )\n    z-index: 1060;  // Bootstrap popover z-index\n\n    @media (max-width: 576px) {\n      padding: 0 $spacer;\n      width: 100%;\n\n      &.bottom-left,\n      &.top-left {\n        left: 0;\n      }\n\n      &.bottom-right,\n      &.top-right {\n        right: 0;\n      }\n\n    }\n  }\n}\n</style>\n\n<docs>\n  This is a notification component.\n\n  ## Example\n\n  ```jsx\n  let model = []\n  const addToast = (message, type, timeout) => model.push({message, type, timeout})\n  const mockVuex = (e) => model = e\n\n  <Toaster v-model=\"model\" v-on:input=\"mockVuex\"></Toaster>\n  <button class=\"btn btn-primary\" v-on:click=\"addToast('new message', 'success', 0)\">Add toast</button>\n  <button class=\"btn btn-primary\" v-on:click=\"addToast('timeout message', 'danger', 1500)\">Add toast (timeout)</button>\n  <div>{{model}}</div>\n  ```\n</docs>\n"],"names":["name","props","filters","type","Array","required","value","Object","data","activeValues","watch","handler","newValue","buildActiveValues","immediate","methods","entries","forEach","key","current","filter","selectFilter","undefined","isArray","length","toISOString","toLocaleDateString","push","label","options","option","subKey","findTextFromValue","filterOption","text","nameAttribute","queryType","query","join","removeFilter","selections","selectionKey","$emit","selected","unique","index","items","indexOf","checkboxHandler","state","item","subCompounds","compound","map","includes","allSelected","every","noneSelected","partialSelected","returnTypeAsObject","Boolean","default","Function","optionsFilter","bulkOperation","maxVisibleOptions","Number","externalUpdate","selection","resolvedOptions","sliceOptions","optionsToRender","computed","visibleOptions","slice","showToggleSlice","toggleSelectText","toggleSliceText","setValue","newSelection","assign","of","created","then","response","toggleSelect","toggleSlice","vo","toastClass","String","headerClass","bodyClass","cartSelectionText","location","backgroundVariant","buttonVariant","labelAttribute","clickHandler","previewToggle","selectionText","previewLabel","removeItem","itemName","min","max","opens","time","range","appendToBody","dateRange","startDate","endDate","formattedDate","date","formatDate","pickerFormat","setDateRange","beforeMount","clearValue","createDateFromValue","updateValues","isNaN","Date","parse","dateTime","toLocaleString","collapsed","collapsable","description","canRemove","isOpen","cssClasses","classes","split","i","iconStyle","transform","transition","toggleState","placeholder","initialDisplayItems","optionsWarningCount","showCount","isLoading","triggerQuery","inputOptions","initialOptions","multifilterOptions","slicedOptions","foundOptionCount","showMoreText","remaining","mfo","queryValue","clearTimeout","newInititalOptions","concat","inputOptionsSort","setTimeout","searchResults","allOptions","initializeFilter","optionsArray","sort","a","b","from","Set","cio","find","showMore","selectedOptions","count","completeInitialOptions","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","step","useSlider","model","get","set","Math","parseFloat","rangeValue","setRangeValue","id","handleRangeValueChange","clampValue","components","ActiveFilters","ChangeFilters","CheckboxFilter","DateTimeFilter","MultiFilter","NumberFilter","RangeFilter","StringFilter","FilterCard","filtersShown","canEdit","dialogStyle","filterActionLabel","filterListLabel","filtersToShow","filterToAdd","drag","width","mobileToggle","doCollapse","doDragDrop","listOfVisibleFilters","window","addEventListener","handleResize","destroyed","removeEventListener","innerWidth","selectionChange","keys","selectionUpdate","css","i18n","page","pageSizes","visiblePages","validator","localValue","size","loading","navigationText","pageCount","ceil","pageNumbers","pages","pageRange","left","right","edge","floor","start","end","deep","updateValue","handleSizeChange","defaultTimeout","position","toasts","oldValue","$set","toast","timeout","clearToast","splice"],"mappings":"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"}