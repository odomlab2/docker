{"version":3,"file":"components-library.esm.js","sources":["../src/components/filters/ActiveFilters.vue?rollup-plugin-vue=script.js","../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../src/components/filters/ActiveFilters.vue","../src/components/filters/ChangeFilters.vue?rollup-plugin-vue=script.js","../src/components/filters/ChangeFilters.vue","../src/components/filters/CheckboxFilter.vue?rollup-plugin-vue=script.js","../src/components/filters/CheckboxFilter.vue","../src/components/ui/CartSelectionToast.vue?rollup-plugin-vue=script.js","../src/components/ui/CartSelectionToast.vue","../src/components/filters/DateTimeFilter.vue?rollup-plugin-vue=script.js","../src/components/filters/DateTimeFilter.vue","../src/components/filters/containers/FilterCard.vue?rollup-plugin-vue=script.js","../src/components/filters/containers/FilterCard.vue","../src/components/filters/MultiFilter.vue?rollup-plugin-vue=script.js","../src/components/filters/MultiFilter.vue","../src/components/filters/NumberFilter.vue?rollup-plugin-vue=script.js","../src/components/filters/NumberFilter.vue","../src/components/filters/RangeFilter.vue?rollup-plugin-vue=script.js","../src/components/filters/RangeFilter.vue","../src/components/filters/StringFilter.vue?rollup-plugin-vue=script.js","../src/components/filters/StringFilter.vue","../src/components/filters/containers/FilterContainer.vue?rollup-plugin-vue=script.js","../src/components/filters/containers/FilterContainer.vue","../src/components/ui/Pagination.vue?rollup-plugin-vue=script.js","../src/components/ui/Pagination.vue","../src/components/ui/Toaster.vue?rollup-plugin-vue=script.js","../src/components/ui/Toaster.vue"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'ActiveFilters',\n  props: {\n    /**\n     * List of filter objects\n     */\n    filters: {\n      type: Array,\n      required: true\n    },\n    /**\n     * Active filter values\n     * @model\n     */\n    value: {\n      type: Object,\n      required: true\n    }\n  },\n  data () {\n    return {\n      activeValues: []\n    }\n  },\n  watch: {\n    value: {\n      handler (newValue) {\n        this.buildActiveValues(newValue)\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    async buildActiveValues (newValue) {\n      const activeValues = []\n      Object.entries(newValue).forEach(async ([key, current]) => {\n        const filter = this.selectFilter(key)\n\n        // Clean op the values by removing undefined entry's\n        if (current === undefined || (Array.isArray(current) && !current.length)) {\n          return\n        }\n\n        if (filter.type === 'date-time-filter') {\n          let value\n\n          if (current[0].toISOString() === current[1].toISOString()) {\n            value = current[0].toLocaleDateString()\n          } else {\n            value = `${current[0].toLocaleDateString()} - ${current[1].toLocaleDateString()}`\n          }\n\n          activeValues.push({ key, value, label: filter.label })\n          return\n        }\n\n        // Unpack array\n        if (Array.isArray(current)) {\n          // Checkbox\n          if (filter.type === 'checkbox-filter') {\n            // resolve options function/promise and show results later\n            const option = await filter.options()\n            current.forEach(subKey => {\n              const findTextFromValue = option.filter(\n                filterOption => filterOption.value === subKey\n              )[0]\n              activeValues.push({\n                key,\n                subKey,\n                value: findTextFromValue.text,\n                label: filter.label\n              })\n            })\n          }\n          // Range Filter\n          if (filter.type === 'range-filter') {\n            if ((current[0] === null || current[0] === '') && current[1] != null) {\n              activeValues.push({\n                key,\n                value: `${current[1]} and less`,\n                label: filter.label\n              })\n            } else if (current[0] !== null && (current[1] === null || current[1] === '')) {\n              activeValues.push({\n                key,\n                value: `${current[0]} and more`,\n                label: filter.label\n              })\n            } else if (current[0] !== null && current[1] !== null) {\n              activeValues.push({\n                key,\n                value: `${current[0]} to ${current[1]}`,\n                label: filter.label\n              })\n            }\n          }\n\n          if (filter.type === 'multi-filter') {\n            const options = await filter.options({ nameAttribute: false, queryType: 'in', query: current.join(',') })\n            current.forEach(subKey => {\n              const findTextFromValue = options.filter(\n                filterOption => filterOption.value === subKey\n              )[0]\n              activeValues.push({\n                key,\n                subKey,\n                value: findTextFromValue.text,\n                label: filter.label\n              })\n            })\n          }\n        } else {\n          // Single item\n          activeValues.push({ key, value: current, label: filter.label })\n        }\n      })\n      if (this.value === newValue) {\n        this.activeValues = activeValues\n      }\n    },\n    selectFilter (key) {\n      return this.filters.filter(filter => filter.name === key)[0]\n    },\n    removeFilter ({ key, subKey }) {\n      const selections = { ...this.value }\n      if (subKey === undefined) {\n        delete selections[key]\n      } else {\n        selections[key] = selections[key].filter(selectionKey => selectionKey !== subKey)\n      }\n      this.$emit('input', selections)\n    }\n  }\n}\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","<template>\n  <div :class=\"{'m-n1': activeValues.length > 0}\">\n    <button\n      v-for=\"(item, key) in activeValues\"\n      :key=\"key\"\n      type=\"button\"\n      class=\"active-filter btn btn-light m-1 btn-outline-secondary\"\n      @click=\"removeFilter(item)\"\n    >\n      {{ item.label }}: {{ item.value }}\n      <font-awesome-icon\n        icon=\"times\"\n        class=\"ml-1\"\n      />\n    </button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ActiveFilters',\n  props: {\n    /**\n     * List of filter objects\n     */\n    filters: {\n      type: Array,\n      required: true\n    },\n    /**\n     * Active filter values\n     * @model\n     */\n    value: {\n      type: Object,\n      required: true\n    }\n  },\n  data () {\n    return {\n      activeValues: []\n    }\n  },\n  watch: {\n    value: {\n      handler (newValue) {\n        this.buildActiveValues(newValue)\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    async buildActiveValues (newValue) {\n      const activeValues = []\n      Object.entries(newValue).forEach(async ([key, current]) => {\n        const filter = this.selectFilter(key)\n\n        // Clean op the values by removing undefined entry's\n        if (current === undefined || (Array.isArray(current) && !current.length)) {\n          return\n        }\n\n        if (filter.type === 'date-time-filter') {\n          let value\n\n          if (current[0].toISOString() === current[1].toISOString()) {\n            value = current[0].toLocaleDateString()\n          } else {\n            value = `${current[0].toLocaleDateString()} - ${current[1].toLocaleDateString()}`\n          }\n\n          activeValues.push({ key, value, label: filter.label })\n          return\n        }\n\n        // Unpack array\n        if (Array.isArray(current)) {\n          // Checkbox\n          if (filter.type === 'checkbox-filter') {\n            // resolve options function/promise and show results later\n            const option = await filter.options()\n            current.forEach(subKey => {\n              const findTextFromValue = option.filter(\n                filterOption => filterOption.value === subKey\n              )[0]\n              activeValues.push({\n                key,\n                subKey,\n                value: findTextFromValue.text,\n                label: filter.label\n              })\n            })\n          }\n          // Range Filter\n          if (filter.type === 'range-filter') {\n            if ((current[0] === null || current[0] === '') && current[1] != null) {\n              activeValues.push({\n                key,\n                value: `${current[1]} and less`,\n                label: filter.label\n              })\n            } else if (current[0] !== null && (current[1] === null || current[1] === '')) {\n              activeValues.push({\n                key,\n                value: `${current[0]} and more`,\n                label: filter.label\n              })\n            } else if (current[0] !== null && current[1] !== null) {\n              activeValues.push({\n                key,\n                value: `${current[0]} to ${current[1]}`,\n                label: filter.label\n              })\n            }\n          }\n\n          if (filter.type === 'multi-filter') {\n            const options = await filter.options({ nameAttribute: false, queryType: 'in', query: current.join(',') })\n            current.forEach(subKey => {\n              const findTextFromValue = options.filter(\n                filterOption => filterOption.value === subKey\n              )[0]\n              activeValues.push({\n                key,\n                subKey,\n                value: findTextFromValue.text,\n                label: filter.label\n              })\n            })\n          }\n        } else {\n          // Single item\n          activeValues.push({ key, value: current, label: filter.label })\n        }\n      })\n      if (this.value === newValue) {\n        this.activeValues = activeValues\n      }\n    },\n    selectFilter (key) {\n      return this.filters.filter(filter => filter.name === key)[0]\n    },\n    removeFilter ({ key, subKey }) {\n      const selections = { ...this.value }\n      if (subKey === undefined) {\n        delete selections[key]\n      } else {\n        selections[key] = selections[key].filter(selectionKey => selectionKey !== subKey)\n      }\n      this.$emit('input', selections)\n    }\n  }\n}\n</script>\n\n<style scoped>\nbutton svg path {\n  transition: fill 0.3s;\n}\n\nbutton:hover svg path {\n  fill: var(--danger);\n}\n</style>\n\n<docs>\nVisualisation of active filters\n\n### Usage\n```jsx\n\nconst selections = {\n  search: 'test',\n  name: 'John',\n  age: [32, 45],\n  fruit: ['orange', 'apple'],\n  color: ['red', 'green'],\n  datetime: [new Date('10/01/1980'), new Date('03/12/2020')],\n}\n\n<ActiveFilters\n  v-model=\"selections\"\n  v-bind:filters=\"filtersMocks\">\n</ActiveFilters>\n<div>{{selections}}</div>\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'ChangeFilters',\n  props: {\n    /**\n     * The filters to select from\n     * @model\n     */\n    filters: {\n      type: Array,\n      required: true\n    },\n    /**\n     * The selected filters\n     * @model\n     */\n    value: {\n      type: Array,\n      required: true\n    }\n  },\n  data () {\n    return {\n      selected: this.value\n    }\n  },\n  watch: {\n    value: {\n      handler (newValue) {\n        this.selected = [...newValue]\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    unique: (value, index, items) => items.indexOf(value) === index,\n    checkboxHandler (option, state) {\n      if (state) {\n        this.selected.push(option.name)\n      } else {\n        this.selected = this.selected.filter((item) => item !== option.name)\n      }\n\n      // parent compound toggle\n      if (option.type === 'compound-title') {\n        const subCompounds = this.filters\n          .filter((item) => item.compound === option.name)\n          .map((item) => item.name)\n        if (this.selected.includes(option.name)) {\n          // Select all and make unique\n          this.selected = [...this.selected, ...subCompounds].filter(\n            this.unique\n          )\n        } else {\n          // Deselect all\n          this.selected = this.selected.filter(\n            (item) => !subCompounds.includes(item)\n          )\n        }\n      }\n\n      // child compound toggle\n      if (option.compound) {\n        const subCompounds = this.filters\n          .filter((item) => item.compound === option.compound)\n          .map((item) => item.name)\n        const allSelected = subCompounds.every((item) =>\n          this.selected.includes(item)\n        )\n        const noneSelected = subCompounds.every(\n          (item) => !this.selected.includes(item)\n        )\n        const partialSelected = !allSelected && !noneSelected\n        if (allSelected) {\n          this.selected = [option.compound, ...this.selected].filter(\n            this.unique\n          )\n        }\n        if (noneSelected) {\n          this.selected = this.selected.filter(\n            (item) => item !== option.compound\n          )\n        }\n        if (partialSelected) {\n          this.selected = this.selected.filter(\n            (item) => item !== option.compound\n          )\n        }\n      }\n      this.$emit('input', this.selected)\n    }\n  }\n}\n","<template>\n  <div>\n    <b-form-checkbox\n      v-for=\"option in filters\"\n      :key=\"option.name\"\n      :checked=\"selected.includes(option.name)\"\n      :class=\"{'ml-4':option.compound}\"\n      @change=\"checkboxHandler(option, $event)\"\n    >\n      <span v-if=\"option.label\">\n        <span class=\"text-nowrap\">{{ option.label }}</span>\n        <span class=\"text-secondary\">\n          <small>\n            <span class=\"text-nowrap\">( {{ option.name }} )</span>\n          </small>\n        </span>\n      </span>\n      <span v-else>\n        <span class=\"text-nowrap\">{{ option.name }}</span>\n      </span>\n      <span class=\"text-secondary\">\n        <small v-if=\"option.description\">- {{ option.description }}</small>\n      </span>\n    </b-form-checkbox>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ChangeFilters',\n  props: {\n    /**\n     * The filters to select from\n     * @model\n     */\n    filters: {\n      type: Array,\n      required: true\n    },\n    /**\n     * The selected filters\n     * @model\n     */\n    value: {\n      type: Array,\n      required: true\n    }\n  },\n  data () {\n    return {\n      selected: this.value\n    }\n  },\n  watch: {\n    value: {\n      handler (newValue) {\n        this.selected = [...newValue]\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    unique: (value, index, items) => items.indexOf(value) === index,\n    checkboxHandler (option, state) {\n      if (state) {\n        this.selected.push(option.name)\n      } else {\n        this.selected = this.selected.filter((item) => item !== option.name)\n      }\n\n      // parent compound toggle\n      if (option.type === 'compound-title') {\n        const subCompounds = this.filters\n          .filter((item) => item.compound === option.name)\n          .map((item) => item.name)\n        if (this.selected.includes(option.name)) {\n          // Select all and make unique\n          this.selected = [...this.selected, ...subCompounds].filter(\n            this.unique\n          )\n        } else {\n          // Deselect all\n          this.selected = this.selected.filter(\n            (item) => !subCompounds.includes(item)\n          )\n        }\n      }\n\n      // child compound toggle\n      if (option.compound) {\n        const subCompounds = this.filters\n          .filter((item) => item.compound === option.compound)\n          .map((item) => item.name)\n        const allSelected = subCompounds.every((item) =>\n          this.selected.includes(item)\n        )\n        const noneSelected = subCompounds.every(\n          (item) => !this.selected.includes(item)\n        )\n        const partialSelected = !allSelected && !noneSelected\n        if (allSelected) {\n          this.selected = [option.compound, ...this.selected].filter(\n            this.unique\n          )\n        }\n        if (noneSelected) {\n          this.selected = this.selected.filter(\n            (item) => item !== option.compound\n          )\n        }\n        if (partialSelected) {\n          this.selected = this.selected.filter(\n            (item) => item !== option.compound\n          )\n        }\n      }\n      this.$emit('input', this.selected)\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n\n<docs>\nFilter selector\n### Usage\n```jsx\nconst filters = [\n  {\n    name: 'color',\n    label: 'Color',\n    description: 'pick a color',\n  },\n  {\n    name: 'region',\n    label: 'Region',\n  },\n  {\n    name: 'health',\n    label: 'Health',\n    type: 'compound-title'\n  },\n  {\n    name: 'drugs',\n    label: 'Drug use',\n    compound: 'health'\n  },\n  {\n    name: 'mental-health',\n    label: 'Mental health',\n    compound: 'health'\n  }\n]\nconst model = []\n<div class=\"row\">\n  <div class=\"col-2\">\n    <ChangeFilters\n      v-bind:filters=\"filters\"\n      v-model=\"model\">\n    </ChangeFilters>\n  </div>\n</div>\n\n<div>{{model}}</div>\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'CheckboxFilter',\n  props: {\n    /**\n     * Toggle to switch between returning an array with values or an array with the full option\n     */\n    returnTypeAsObject: {\n      type: Boolean,\n      required: false,\n      default: () => false\n    },\n    /**\n     * A Promise-function that resolves with an array of options.\n     * {text: 'foo', value: 'bar'}\n     */\n    options: {\n      type: [Function],\n      required: true\n    },\n    /**\n     * An array that contains values of options\n     * which is used to only show the checkboxes that match\n     * these values\n     */\n    optionsFilter: {\n      type: Array,\n      required: false\n    },\n    /**\n     * This is the v-model value; an array of selected options.\n     * Can also be a { text, value } object array\n     */\n    value: {\n      type: Array,\n      default: () => []\n    },\n    /**\n     * Whether to use (De)Select All or not.\n     */\n    bulkOperation: {\n      type: Boolean,\n      required: false,\n      default: () => true\n    },\n    /**\n     * Limit the maximum number of visible items.\n     */\n    maxVisibleOptions: {\n      type: Number,\n      default: () => undefined\n    }\n  },\n  data () {\n    return {\n      externalUpdate: false,\n      selection: [],\n      resolvedOptions: [],\n      sliceOptions: this.maxVisibleOptions && this.optionsToRender && this.maxVisibleOptions < this.optionsToRender.length\n    }\n  },\n  computed: {\n    visibleOptions () {\n      return this.sliceOptions ? this.optionsToRender.slice(0, this.maxVisibleOptions) : (typeof this.optionsToRender === 'function' ? [] : this.optionsToRender)\n    },\n    showToggleSlice () {\n      return this.maxVisibleOptions && this.maxVisibleOptions < this.optionsToRender.length\n    },\n    toggleSelectText () {\n      return this.value.length ? 'Deselect all' : 'Select all'\n    },\n    toggleSliceText () {\n      return this.sliceOptions ? `Show ${this.optionsToRender.length - this.maxVisibleOptions} more` : 'Show less'\n    },\n    optionsToRender () {\n      if (this.optionsFilter && this.optionsFilter.length) {\n        return this.resolvedOptions.filter(option => this.optionsFilter.includes(option.value))\n      } else {\n        return this.resolvedOptions\n      }\n    }\n  },\n  watch: {\n    value () {\n      this.setValue()\n    },\n    resolvedOptions () {\n      this.sliceOptions = this.showToggleSlice\n    },\n    selection (newValue) {\n      if (!this.externalUpdate) {\n        let newSelection = []\n\n        if (this.returnTypeAsObject) {\n          newSelection = Object.assign(newSelection, this.optionsToRender.filter(of => newValue.includes(of.value)))\n        } else {\n          newSelection = [...newValue]\n        }\n        this.$emit('input', newSelection)\n      }\n      this.externalUpdate = false\n    }\n  },\n  created () {\n    this.options().then(response => {\n      this.resolvedOptions = response\n    })\n    this.setValue()\n  },\n  methods: {\n    toggleSelect () {\n      if (this.selection && this.selection.length > 0) {\n        this.selection = []\n      } else {\n        this.selection = this.optionsToRender.map(option => option.value)\n      }\n    },\n    toggleSlice () {\n      this.sliceOptions = !this.sliceOptions\n    },\n    setValue () {\n      this.externalUpdate = true\n      if (this.value && this.value.length > 0 && typeof this.value[0] === 'object') {\n        this.selection = this.value.map(vo => vo.value)\n      } else {\n        this.selection = this.value\n      }\n    }\n  }\n}\n","<template>\n  <div>\n    <b-form-checkbox-group\n      v-model=\"selection\"\n      stacked\n      :options=\"visibleOptions\"\n    />\n    <span v-if=\"bulkOperation\">\n      <b-link\n        v-if=\"showToggleSlice\"\n        class=\"toggle-slice card-link\"\n        @click.prevent=\"toggleSlice\"\n      >\n        {{ toggleSliceText }}\n      </b-link>\n      <b-link\n        class=\"toggle-select card-link\"\n        @click.prevent=\"toggleSelect\"\n      >\n        {{ toggleSelectText }}\n      </b-link>\n    </span>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'CheckboxFilter',\n  props: {\n    /**\n     * Toggle to switch between returning an array with values or an array with the full option\n     */\n    returnTypeAsObject: {\n      type: Boolean,\n      required: false,\n      default: () => false\n    },\n    /**\n     * A Promise-function that resolves with an array of options.\n     * {text: 'foo', value: 'bar'}\n     */\n    options: {\n      type: [Function],\n      required: true\n    },\n    /**\n     * An array that contains values of options\n     * which is used to only show the checkboxes that match\n     * these values\n     */\n    optionsFilter: {\n      type: Array,\n      required: false\n    },\n    /**\n     * This is the v-model value; an array of selected options.\n     * Can also be a { text, value } object array\n     */\n    value: {\n      type: Array,\n      default: () => []\n    },\n    /**\n     * Whether to use (De)Select All or not.\n     */\n    bulkOperation: {\n      type: Boolean,\n      required: false,\n      default: () => true\n    },\n    /**\n     * Limit the maximum number of visible items.\n     */\n    maxVisibleOptions: {\n      type: Number,\n      default: () => undefined\n    }\n  },\n  data () {\n    return {\n      externalUpdate: false,\n      selection: [],\n      resolvedOptions: [],\n      sliceOptions: this.maxVisibleOptions && this.optionsToRender && this.maxVisibleOptions < this.optionsToRender.length\n    }\n  },\n  computed: {\n    visibleOptions () {\n      return this.sliceOptions ? this.optionsToRender.slice(0, this.maxVisibleOptions) : (typeof this.optionsToRender === 'function' ? [] : this.optionsToRender)\n    },\n    showToggleSlice () {\n      return this.maxVisibleOptions && this.maxVisibleOptions < this.optionsToRender.length\n    },\n    toggleSelectText () {\n      return this.value.length ? 'Deselect all' : 'Select all'\n    },\n    toggleSliceText () {\n      return this.sliceOptions ? `Show ${this.optionsToRender.length - this.maxVisibleOptions} more` : 'Show less'\n    },\n    optionsToRender () {\n      if (this.optionsFilter && this.optionsFilter.length) {\n        return this.resolvedOptions.filter(option => this.optionsFilter.includes(option.value))\n      } else {\n        return this.resolvedOptions\n      }\n    }\n  },\n  watch: {\n    value () {\n      this.setValue()\n    },\n    resolvedOptions () {\n      this.sliceOptions = this.showToggleSlice\n    },\n    selection (newValue) {\n      if (!this.externalUpdate) {\n        let newSelection = []\n\n        if (this.returnTypeAsObject) {\n          newSelection = Object.assign(newSelection, this.optionsToRender.filter(of => newValue.includes(of.value)))\n        } else {\n          newSelection = [...newValue]\n        }\n        this.$emit('input', newSelection)\n      }\n      this.externalUpdate = false\n    }\n  },\n  created () {\n    this.options().then(response => {\n      this.resolvedOptions = response\n    })\n    this.setValue()\n  },\n  methods: {\n    toggleSelect () {\n      if (this.selection && this.selection.length > 0) {\n        this.selection = []\n      } else {\n        this.selection = this.optionsToRender.map(option => option.value)\n      }\n    },\n    toggleSlice () {\n      this.sliceOptions = !this.sliceOptions\n    },\n    setValue () {\n      this.externalUpdate = true\n      if (this.value && this.value.length > 0 && typeof this.value[0] === 'object') {\n        this.selection = this.value.map(vo => vo.value)\n      } else {\n        this.selection = this.value\n      }\n    }\n  }\n}\n</script>\n\n<style>\n.card-link { font-size: small;\n  font-style: italic; }\n</style>\n\n<docs>\nFilter that renders a list of options as a set of checkboxes\n\n## Usage\n```jsx\nconst model = []\n<CheckboxFilter\n  v-bind:maxVisibleOptions=\"5\"\n  v-bind:bulkOperation=\"true\"\n  v-bind:options=\"fruitOptionsFunction\"\n  v-bind:optionsFilter=\"[]\"\n  v-model=\"model\">\n</CheckboxFilter>\n<div>model: {{model}}</div>\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'CartSelectionToast',\n  props: {\n    /**\n     * Passthrough setting from BootstrapVue\n     */\n    toastClass: {\n      type: [String, Object, Array]\n    },\n    /**\n     * Passthrough setting from BootstrapVue\n     */\n    headerClass: {\n      type: [String, Object, Array]\n    },\n    /**\n     * Passthrough setting from BootstrapVue\n     */\n    bodyClass: {\n      type: [String, Object, Array]\n    },\n    /**\n    /**\n     * Default descriptive text.\n     * Use this to specify the amount of selected items in the cart\n     * For example:\n     * \"3 items selected\"\n     */\n    cartSelectionText: {\n      type: String,\n      required: true\n    },\n    /**\n     * See: https://bootstrap-vue.org/docs/components/toast#b-toaster-target-component\n     */\n    location: {\n      type: String,\n      required: false,\n      default: () => 'b-toaster-bottom-right'\n    },\n    /**\n     * See: https://bootstrap-vue.org/docs/reference/color-variants#color-variants-and-css-class-mapping\n     */\n    backgroundVariant: {\n      type: String,\n      required: false,\n      default: () => 'info'\n    },\n    /**\n     * See: https://bootstrap-vue.org/docs/components/button#contextual-variants\n     */\n    buttonVariant: {\n      type: String,\n      required: false,\n      default: () => 'secondary'\n    },\n    /**\n     * If this array is set (via v-model), then in will allow you to preview your selection\n     * Expects a array of strings or a Array of objects\n     * When using a array of objects provide the 'labelAttribute' to select the field to display\n     */\n    value: {\n      type: Array,\n      required: false,\n      default: () => []\n    },\n    /**\n     * Label attribute to display for use with object based store data.\n     */\n    labelAttribute: {\n      type: String,\n      required: false,\n      default: () => 'name'\n    },\n    /**\n     * Button click handler\n     */\n    clickHandler: {\n      type: Function,\n      required: true\n    }\n  },\n  data: () => ({\n    previewToggle: false\n  }),\n  computed: {\n    selectionText () {\n      return this.previewToggle ? 'Hide' : 'Show'\n    }\n  },\n  methods: {\n    previewLabel (item) {\n      if (typeof item === 'string') {\n        return item\n      } else if (typeof item === 'object') {\n        if (typeof item[this.labelAttribute] === 'string') {\n          return item[this.labelAttribute]\n        }\n      }\n      return ''\n    },\n    removeItem (itemName) {\n      /**\n       * v-model return value\n       *\n       * @event input\n       * @property {Array} Returns new array without the deleted item\n       */\n      this.$emit('input', this.value.filter(item => item !== itemName))\n    }\n  }\n}\n","<template>\n  <b-toast\n    visible\n    no-close-button\n    no-auto-hide\n    :toaster=\"location\"\n    :variant=\"backgroundVariant\"\n    :toast-class=\"toastClass\"\n    :body-class=\"bodyClass\"\n    :header-class=\"headerClass\"\n  >\n    <div class=\"container-fluid\">\n      <div v-if=\"previewToggle && value.length > 0\" class=\"mb-4\">\n        <div v-for=\"(item, index) in value\" :key=\"index\" class=\"row\">\n          <div class=\"col\">\n            {{ previewLabel(item) }}\n          </div>\n          <div class=\"col-auto mb-2\">\n            <span role=\"button\" @click=\"removeItem(item)\">\n              <!-- @slot pass an icon for the remove button -->\n              <slot name=\"removeButton\"><span class=\"fa fa-times\" /></slot>\n            </span>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col d-flex flex-column justify-content-start align-self-center\">\n          <div class=\"font-weight-bold\">\n            {{ cartSelectionText }}\n          </div>\n          <div v-if=\"value.length > 0\">\n            <span role=\"button\" @click=\"previewToggle = !previewToggle\">{{ selectionText }} selection</span>\n          </div>\n        </div>\n        <div class=\"col-auto\">\n          <b-button :variant=\"buttonVariant\" @click=\"clickHandler\">\n            <!-- @slot display tekst of button -->\n            <slot name=\"buttonText\">\n              Request items\n            </slot>\n          </b-button>\n        </div>\n      </div>\n    </div>\n  </b-toast>\n</template>\n\n<script>\nexport default {\n  name: 'CartSelectionToast',\n  props: {\n    /**\n     * Passthrough setting from BootstrapVue\n     */\n    toastClass: {\n      type: [String, Object, Array]\n    },\n    /**\n     * Passthrough setting from BootstrapVue\n     */\n    headerClass: {\n      type: [String, Object, Array]\n    },\n    /**\n     * Passthrough setting from BootstrapVue\n     */\n    bodyClass: {\n      type: [String, Object, Array]\n    },\n    /**\n    /**\n     * Default descriptive text.\n     * Use this to specify the amount of selected items in the cart\n     * For example:\n     * \"3 items selected\"\n     */\n    cartSelectionText: {\n      type: String,\n      required: true\n    },\n    /**\n     * See: https://bootstrap-vue.org/docs/components/toast#b-toaster-target-component\n     */\n    location: {\n      type: String,\n      required: false,\n      default: () => 'b-toaster-bottom-right'\n    },\n    /**\n     * See: https://bootstrap-vue.org/docs/reference/color-variants#color-variants-and-css-class-mapping\n     */\n    backgroundVariant: {\n      type: String,\n      required: false,\n      default: () => 'info'\n    },\n    /**\n     * See: https://bootstrap-vue.org/docs/components/button#contextual-variants\n     */\n    buttonVariant: {\n      type: String,\n      required: false,\n      default: () => 'secondary'\n    },\n    /**\n     * If this array is set (via v-model), then in will allow you to preview your selection\n     * Expects a array of strings or a Array of objects\n     * When using a array of objects provide the 'labelAttribute' to select the field to display\n     */\n    value: {\n      type: Array,\n      required: false,\n      default: () => []\n    },\n    /**\n     * Label attribute to display for use with object based store data.\n     */\n    labelAttribute: {\n      type: String,\n      required: false,\n      default: () => 'name'\n    },\n    /**\n     * Button click handler\n     */\n    clickHandler: {\n      type: Function,\n      required: true\n    }\n  },\n  data: () => ({\n    previewToggle: false\n  }),\n  computed: {\n    selectionText () {\n      return this.previewToggle ? 'Hide' : 'Show'\n    }\n  },\n  methods: {\n    previewLabel (item) {\n      if (typeof item === 'string') {\n        return item\n      } else if (typeof item === 'object') {\n        if (typeof item[this.labelAttribute] === 'string') {\n          return item[this.labelAttribute]\n        }\n      }\n      return ''\n    },\n    removeItem (itemName) {\n      /**\n       * v-model return value\n       *\n       * @event input\n       * @property {Array} Returns new array without the deleted item\n       */\n      this.$emit('input', this.value.filter(item => item !== itemName))\n    }\n  }\n}\n</script>\n\n<docs>\n  This toast will float bottom right and hold a selection of shop-like values and has a call to action\n\n  ## Basic example\n\n  ```jsx\n  function click(){\n    alert('clicked')\n  }\n  <b-toaster name=\"demo\"></b-toaster>\n  <cart-selection-toast\n    location=\"demo\"\n    v-bind:clickHandler=\"click\"\n    cartSelectionText=\"3 items selected\">\n    <template v-slot:buttonText>To cart</template>\n    <template v-slot:cartSelection>10 items selected</template>\n  </cart-selection-toast>\n  ```\n  ## Example with filled slots and selection preview\n\n  ```jsx\n  let items = ['Apple', 'Pear', 'Banana']\n  function click(){\n    alert('clicked')\n  }\n  <b-toaster name=\"demo2\"></b-toaster>\n  <cart-selection-toast\n    location=\"demo2\"\n    v-model=\"items\"\n    v-bind:clickHandler=\"click\"\n    v-bind:cartSelectionText=\"items.length + ' item(s) selected'\">\n    <template v-slot:buttonText>Checkout <span class=\"fa fa-shopping-basket\"></span></template>\n    <template v-slot:cartSelection>{{items.length}} item(s) selected</template>\n    <template v-slot:removeButton><i class=\"far fa-times-circle\"></i></template>\n  </cart-selection-toast>\n  ```\n\n  ## Example with id and label\n\n  ```jsx\n  let items = [\n    { label: 'Apple', id: 1 },\n    { label: 'Pear', id: 2 },\n    { label: 'Banana', id: 3 }\n  ]\n  function click(){\n    alert('clicked')\n  }\n  <b-toaster name=\"demo3\"></b-toaster>\n  <cart-selection-toast\n    location=\"demo3\"\n    v-model=\"items\"\n    v-bind:clickHandler=\"click\"\n    v-bind:cartSelectionText=\"items.length + ' item(s) selected'\"\n    labelAttribute=\"label\">\n  </cart-selection-toast>\n  ```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'DateTimeFilter',\n  props: {\n    /**\n     * Define the start of your calendar range.\n     * @values ISOString, null\n     */\n    min: {\n      default: () => null,\n      type: [String, null]\n    },\n    /**\n     * Define the end of your calendar range.\n     * @values ISOString, null\n     */\n    max: {\n      default: () => null,\n      type: [String, null]\n    },\n    /**\n     * Defines a maximal Date/Datetime thats selectable in the calendar widget.\n     * @values right, left, top, bottom\n     */\n    opens: {\n      default: () => 'right',\n      type: String\n    },\n    /**\n     * Toggles time selection in the calendar widget.\n     * @values true, false\n     */\n    time: {\n      type: Boolean,\n      default: () => true\n    },\n    /**\n     * Toggles single date selection; uses only min property in that case.\n     * @values true, false\n     */\n    range: {\n      type: Boolean,\n      default: () => true\n    },\n    /**\n     * The default selected date.\n     * @model\n     */\n    value: {\n      type: Array,\n      default: () => [null, null]\n    },\n    /**\n     * Append the dialog to the body tag, useful if filter is used within a container that uses overflow:scroll\n     * @model\n     */\n    appendToBody: {\n      type: Boolean,\n      default: () => false\n    }\n  },\n  data: function () {\n    return {\n      dateRange: {\n        startDate: null,\n        endDate: null\n      }\n    }\n  },\n  computed: {\n    formattedDate: function () {\n      const date = this.dateRange\n      if (!date.startDate || !date.endDate) {\n        return 'Select...'\n      }\n      if (date.startDate.toISOString() === date.endDate.toISOString()) {\n        return this.formatDate(date.startDate)\n      } else {\n        return `${this.formatDate(date.startDate)} - ${this.formatDate(date.endDate)}`\n      }\n    },\n    pickerFormat () {\n      return this.time ? 'yyyy-mm-dd HH:MM:ss' : 'yyyy-mm-dd'\n    }\n  },\n  watch: {\n    value (newValue) {\n      this.setDateRange(newValue)\n    }\n  },\n  beforeMount () {\n    this.setDateRange(this.value)\n  },\n  methods: {\n    clearValue: function () {\n      this.dateRange = {\n        startDate: null,\n        endDate: null\n      }\n\n      this.$emit('input', undefined)\n    },\n    setDateRange (value) {\n      if (value) {\n        this.dateRange.startDate = this.createDateFromValue(value[0])\n        this.dateRange.endDate = this.createDateFromValue(value[1])\n      }\n    },\n    updateValues: function () {\n      this.$emit('input', [this.dateRange.startDate, this.dateRange.endDate])\n    },\n    createDateFromValue (value) {\n      if (value) {\n        return isNaN(value) ? new Date(Date.parse(value)) : new Date(value)\n      }\n    },\n    formatDate (dateTime) {\n      return this.time ? dateTime.toLocaleString() : dateTime.toLocaleDateString()\n    }\n  }\n}\n","\n<template>\n  <b-input-group class=\"flex-nowrap\">\n    <date-range-picker\n      ref=\"picker\"\n      v-model=\"dateRange\"\n      class=\"flex-grow-1\"\n      :opens=\"opens\"\n      :locale-data=\"{ firstDay: 1, format: pickerFormat }\"\n      :single-date-picker=\"!range\"\n      :time-picker=\"time\"\n      :time-picker24hour=\"true\"\n      :show-week-numbers=\"false\"\n      :show-dropdowns=\"true\"\n      :auto-apply=\"false\"\n      :ranges=\"false\"\n      :linked-calendars=\"false\"\n      :always-show-calendars=\"true\"\n      :min-date=\"min\"\n      :max-date=\"max\"\n      :append-to-body=\"appendToBody\"\n      @update=\"updateValues\"\n    >\n      <template slot=\"input\">\n        {{ formattedDate }}\n      </template>\n    </date-range-picker>\n    <b-input-group-append>\n      <b-button\n        variant=\"outline-secondary\"\n        class=\"t-btn-clear\"\n        @click=\"clearValue\"\n      >\n        <font-awesome-icon icon=\"times\" />\n      </b-button>\n    </b-input-group-append>\n  </b-input-group>\n</template>\n\n<script>\nexport default {\n  name: 'DateTimeFilter',\n  props: {\n    /**\n     * Define the start of your calendar range.\n     * @values ISOString, null\n     */\n    min: {\n      default: () => null,\n      type: [String, null]\n    },\n    /**\n     * Define the end of your calendar range.\n     * @values ISOString, null\n     */\n    max: {\n      default: () => null,\n      type: [String, null]\n    },\n    /**\n     * Defines a maximal Date/Datetime thats selectable in the calendar widget.\n     * @values right, left, top, bottom\n     */\n    opens: {\n      default: () => 'right',\n      type: String\n    },\n    /**\n     * Toggles time selection in the calendar widget.\n     * @values true, false\n     */\n    time: {\n      type: Boolean,\n      default: () => true\n    },\n    /**\n     * Toggles single date selection; uses only min property in that case.\n     * @values true, false\n     */\n    range: {\n      type: Boolean,\n      default: () => true\n    },\n    /**\n     * The default selected date.\n     * @model\n     */\n    value: {\n      type: Array,\n      default: () => [null, null]\n    },\n    /**\n     * Append the dialog to the body tag, useful if filter is used within a container that uses overflow:scroll\n     * @model\n     */\n    appendToBody: {\n      type: Boolean,\n      default: () => false\n    }\n  },\n  data: function () {\n    return {\n      dateRange: {\n        startDate: null,\n        endDate: null\n      }\n    }\n  },\n  computed: {\n    formattedDate: function () {\n      const date = this.dateRange\n      if (!date.startDate || !date.endDate) {\n        return 'Select...'\n      }\n      if (date.startDate.toISOString() === date.endDate.toISOString()) {\n        return this.formatDate(date.startDate)\n      } else {\n        return `${this.formatDate(date.startDate)} - ${this.formatDate(date.endDate)}`\n      }\n    },\n    pickerFormat () {\n      return this.time ? 'yyyy-mm-dd HH:MM:ss' : 'yyyy-mm-dd'\n    }\n  },\n  watch: {\n    value (newValue) {\n      this.setDateRange(newValue)\n    }\n  },\n  beforeMount () {\n    this.setDateRange(this.value)\n  },\n  methods: {\n    clearValue: function () {\n      this.dateRange = {\n        startDate: null,\n        endDate: null\n      }\n\n      this.$emit('input', undefined)\n    },\n    setDateRange (value) {\n      if (value) {\n        this.dateRange.startDate = this.createDateFromValue(value[0])\n        this.dateRange.endDate = this.createDateFromValue(value[1])\n      }\n    },\n    updateValues: function () {\n      this.$emit('input', [this.dateRange.startDate, this.dateRange.endDate])\n    },\n    createDateFromValue (value) {\n      if (value) {\n        return isNaN(value) ? new Date(Date.parse(value)) : new Date(value)\n      }\n    },\n    formatDate (dateTime) {\n      return this.time ? dateTime.toLocaleString() : dateTime.toLocaleDateString()\n    }\n  }\n}\n</script>\n\n<style lang=\"css\">\n.form-control.reportrange-text {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n</style>\n\n<docs>\nFilter between a begin Date(time) and optionally an end Date(time)\n\n### Usage\n```jsx\nconst defaultMin = new Date()\nconst defaultMax = new Date()\ndefaultMax.setDate(defaultMax.getDate() + 7)\n\nconst selectMax = new Date()\nconst selectMin = new Date()\nselectMax.setDate(selectMax.getDate() + 30)\nselectMin.setDate(selectMin.getDate() - 7)\n\nconst model = [defaultMin.toISOString(), defaultMax.toISOString()]\n<DateTimeFilter\n    opens='right'\n    v-bind:max='selectMax.toISOString()'\n    v-bind:min='selectMin.toISOString()'\n    v-bind:range='true'\n    v-bind:time='true'\n    v-model='model'>\n</DateTimeFilter>\n<div>{{model}}</div>\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'FilterCard',\n  props: {\n    /**\n     * Extra class to style b-card-header\n     */\n    headerClass: {\n      type: String,\n      default: () => ''\n    },\n    /**\n     * Unique filter identifier\n     */\n    name: {\n      type: String,\n      required: true\n    },\n    /**\n     * Human readable label descibing the filter\n     */\n    label: {\n      type: String,\n      required: false,\n      default: () => ''\n    },\n    /**\n     * Indicates if filter is shown in collapsed state or not\n     */\n    collapsed: {\n      type: Boolean,\n      required: false,\n      default: () => true\n    },\n    /**\n     * Indicates if the user can collapse the filter\n     */\n    collapsable: {\n      type: Boolean,\n      required: false,\n      default: () => true\n    },\n    /**\n     * Human readable text with aditional description of the filter\n     */\n    description: {\n      type: String,\n      required: false,\n      default: () => ''\n    },\n    /**\n     * Whether or not the user can remove the filter or not\n     */\n    canRemove: {\n      type: Boolean,\n      required: false,\n      default: () => false\n    }\n  },\n  data () {\n    return {\n      isOpen: this.collapsable ? !this.collapsed : true\n    }\n  },\n  computed: {\n    cssClasses: function () {\n      const classes = this.headerClass.split(' ').filter(i => i)\n      if (this.collapsable) {\n        classes.push('collapsable')\n      }\n      return classes.join(' ')\n    },\n    iconStyle () {\n      return {\n        transform: `rotate(${this.isOpen ? 90 : 0}deg)`,\n        transition: 'transform 0.2s'\n      }\n    }\n  },\n  methods: {\n    removeFilter () {\n      this.$emit('removeFilter', this.name)\n    },\n    toggleState () {\n      if (this.collapsable) {\n        this.isOpen = !this.isOpen\n        return this.isOpen\n      }\n      return false\n    }\n  }\n}\n","<template>\n  <b-card\n    no-body\n    class=\"filter-card mb-2\"\n  >\n    <b-card-header\n      class=\"drag-handle\"\n      :class=\"cssClasses\"\n      @click=\"toggleState\"\n    >\n      <div\n        class=\"title mr-3 px-1\"\n        :title=\"label\"\n      >\n        <font-awesome-icon\n          v-if=\"collapsable\"\n          icon=\"caret-right\"\n          :style=\"iconStyle\"\n          class=\"mr-2\"\n        />\n        {{ label }}\n        <span\n          v-if=\"canRemove\"\n          class=\"remove-button\"\n          @click.stop=\"removeFilter\"\n        >\n          <font-awesome-icon icon=\"times\" />\n        </span>\n      </div>\n    </b-card-header>\n    <b-collapse\n      :id=\"name\"\n      v-model=\"isOpen\"\n    >\n      <b-card-body>\n        <b-form-group :description=\"description\">\n          <slot />\n        </b-form-group>\n      </b-card-body>\n    </b-collapse>\n  </b-card>\n</template>\n\n<script>\nexport default {\n  name: 'FilterCard',\n  props: {\n    /**\n     * Extra class to style b-card-header\n     */\n    headerClass: {\n      type: String,\n      default: () => ''\n    },\n    /**\n     * Unique filter identifier\n     */\n    name: {\n      type: String,\n      required: true\n    },\n    /**\n     * Human readable label descibing the filter\n     */\n    label: {\n      type: String,\n      required: false,\n      default: () => ''\n    },\n    /**\n     * Indicates if filter is shown in collapsed state or not\n     */\n    collapsed: {\n      type: Boolean,\n      required: false,\n      default: () => true\n    },\n    /**\n     * Indicates if the user can collapse the filter\n     */\n    collapsable: {\n      type: Boolean,\n      required: false,\n      default: () => true\n    },\n    /**\n     * Human readable text with aditional description of the filter\n     */\n    description: {\n      type: String,\n      required: false,\n      default: () => ''\n    },\n    /**\n     * Whether or not the user can remove the filter or not\n     */\n    canRemove: {\n      type: Boolean,\n      required: false,\n      default: () => false\n    }\n  },\n  data () {\n    return {\n      isOpen: this.collapsable ? !this.collapsed : true\n    }\n  },\n  computed: {\n    cssClasses: function () {\n      const classes = this.headerClass.split(' ').filter(i => i)\n      if (this.collapsable) {\n        classes.push('collapsable')\n      }\n      return classes.join(' ')\n    },\n    iconStyle () {\n      return {\n        transform: `rotate(${this.isOpen ? 90 : 0}deg)`,\n        transition: 'transform 0.2s'\n      }\n    }\n  },\n  methods: {\n    removeFilter () {\n      this.$emit('removeFilter', this.name)\n    },\n    toggleState () {\n      if (this.collapsable) {\n        this.isOpen = !this.isOpen\n        return this.isOpen\n      }\n      return false\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .card-header.collapsable {\n    cursor: pointer;\n  }\n\n  .form-group {\n    margin-bottom: 0;\n  }\n\n  .title {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n\n  .remove-button {\n    cursor: pointer;\n    display: inline-block;\n    height: inherit;\n    opacity: 0;\n    position: absolute;\n    right: 10px;\n    text-align: center;\n    transition: opacity 0.2s, color 0.2s;\n    width: 1.5em;\n  }\n\n  .remove-button:hover {\n    color: var(--danger);\n  }\n\n  .filter-card:hover .remove-button {\n    opacity: 1;\n  }\n\n  .sortable-ghost {\n    border-style: dashed;\n  }\n\n  .sortable-ghost > div {\n    opacity: 0.2;\n  }\n</style>\n\n<docs>\nCard containing filter\n### Usage\n```jsx\nconst onRemoveFilter = () => alert('remove me please')\n\nconst options = () => Promise.resolve(\n [\n  { text: 'Orange', value: 'orange' },\n  { text: 'Apple', value: 'apple' },\n  { text: 'Pineapple', value: 'pineapple' },\n  { text: 'Grape', value: 'grape' }\n ]\n)\nconst model = []\n\n<FilterCard\n  name=\"fruit-card\"\n  label=\"Fruit\"\n  headerClass=\"bg-info text-white\"\n  description=\"Example with checkbox filter\"\n  v-bind:collapsed=\"false\"\n  v-bind:collapsable=\"true\"\n  v-bind:canRemove=\"true\"\n  v-on:removeFilter=\"onRemoveFilter\">\n  <CheckboxFilter\n    v-bind:maxVisibleOptions=\"null\"\n    v-bind:bulkOperation=\"true\"\n    v-bind:options=\"options\"\n    v-model=\"model\">\n  </CheckboxFilter>\n</FilterCard>\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'MultiFilter',\n  props: {\n    /**\n     * Toggle to switch between returning an array with values or an array with the full option\n     */\n    returnTypeAsObject: {\n      type: Boolean,\n      required: false,\n      default: () => false\n    },\n    /**\n     * The HTML input element name.\n     */\n    name: {\n      type: String,\n      required: true\n    },\n    /**\n     * The HTML input element placeholder.\n     */\n    placeholder: {\n      type: String,\n      required: false,\n      default: () => 'Type to search more'\n    },\n    /**\n     * The async method returning filter options.\n     */\n    options: {\n      type: Function,\n      required: true\n    },\n    /**\n     * The amount of initial options to show.\n     */\n    initialDisplayItems: {\n      type: Number,\n      required: false,\n      default: () => 1\n    },\n    /**\n     * The amount of options available at one time\n     * per search request\n     */\n    optionsWarningCount: {\n      type: Number,\n      required: false,\n      default: 100\n    },\n    /**\n     * @model\n     */\n    value: {\n      type: Array,\n      default: () => []\n    },\n    /**\n     * The amount of options to show after filtering the checkbox options.\n     */\n    maxVisibleOptions: {\n      type: Number,\n      default: () => 10\n    }\n  },\n  data () {\n    return {\n      externalUpdate: false,\n      showCount: 0,\n      isLoading: false,\n      triggerQuery: Number,\n      inputOptions: [],\n      initialOptions: [],\n      selection: [],\n      query: ''\n    }\n  },\n  computed: {\n    multifilterOptions () {\n      return this.inputOptions\n    },\n    slicedOptions () {\n      return this.multifilterOptions.slice(0, this.showCount)\n    },\n    foundOptionCount () {\n      return this.multifilterOptions.length\n    },\n    showMoreText () {\n      const remaining = this.foundOptionCount - this.showCount\n      if (remaining <= this.maxVisibleOptions) {\n        return `Show remaining ${remaining}`\n      } else {\n        return `Show ${this.maxVisibleOptions} more`\n      }\n    }\n  },\n  watch: {\n    selection (newValue) {\n      let newSelection\n      if (this.externalUpdate) {\n        this.externalUpdate = false\n        return\n      }\n\n      if (this.returnTypeAsObject) {\n        newSelection = Object.assign(\n          newValue,\n          this.multifilterOptions.filter((mfo) => newValue.includes(mfo.value))\n        )\n      } else {\n        newSelection = [...newValue]\n      }\n\n      this.$emit('input', newSelection)\n    },\n    value () {\n      this.setValue()\n    },\n    query (queryValue) {\n      if (this.triggerQuery) {\n        clearTimeout(this.triggerQuery)\n      }\n\n      if (!queryValue.length) {\n        const newInititalOptions = [].concat(this.multifilterOptions)\n        this.inputOptions = this.inputOptionsSort(newInititalOptions)\n        return\n      }\n\n      this.triggerQuery = setTimeout(() => {\n        clearTimeout(this.triggerQuery)\n        this.showCount = this.maxVisibleOptions\n        this.isLoading = true\n\n        this.options({ nameAttribute: 'label', query: this.query }).then(\n          (searchResults) => {\n            const allOptions = searchResults\n              ? searchResults.concat(this.inputOptions)\n              : this.inputOptions\n            this.inputOptions = this.inputOptionsSort(allOptions)\n          }\n        )\n\n        this.isLoading = false\n      }, 500)\n    }\n  },\n  created () {\n    this.showCount = this.maxVisibleOptions\n  },\n  beforeMount () {\n    this.initializeFilter()\n  },\n  methods: {\n    inputOptionsSort (optionsArray) {\n      optionsArray.sort((a, b) => {\n        if (\n          !this.selection.includes(a.value) &&\n          !this.selection.includes(b.value)\n        ) {\n          return 0\n        } else if (\n          this.selection.includes(a.value) &&\n          !this.selection.includes(b.value)\n        ) {\n          return -1\n        } else return 1\n      })\n\n      return Array.from(\n        new Set(optionsArray.map((cio) => cio.value))\n      ).map((value) => optionsArray.find((cio) => cio.value === value))\n    },\n    setValue () {\n      this.externalUpdate = true\n      this.selection =\n        typeof this.value[0] === 'object'\n          ? this.value.map((vo) => vo.value)\n          : this.value\n    },\n    showMore () {\n      this.showCount += this.maxVisibleOptions\n    },\n    async initializeFilter () {\n      let selectedOptions = []\n\n      if (this.value && this.value.length) {\n        this.setValue()\n        // Get the initial selected\n        selectedOptions = await this.options({\n          nameAttribute: 'label',\n          queryType: 'in',\n          query: this.selection.join(',')\n        })\n      }\n\n      // fetch the other options and concat\n      const completeInitialOptions = selectedOptions.concat(\n        await this.options({\n          nameAttribute: 'label',\n          count: this.initialDisplayItems\n        })\n      )\n\n      // deduplicate by first mapping the id's then getting the first matching object back.\n      this.initialOptions = this.inputOptionsSort(completeInitialOptions)\n      this.inputOptions = this.initialOptions\n    }\n  }\n}\n","<template>\n  <div>\n    <b-input-group>\n      <b-form-input\n        v-model=\"query\"\n        :name=\"name\"\n        :placeholder=\"placeholder\"\n        trim\n      />\n      <b-input-group-append>\n        <b-button\n          variant=\"outline-secondary\"\n          :disabled=\"isLoading\"\n          @click.prevent=\"query = ''\"\n        >\n          <font-awesome-icon\n            v-if=\"isLoading\"\n            icon=\"spinner\"\n            class=\"fa-spin\"\n            size=\"xs\"\n          />\n          <font-awesome-icon v-else icon=\"times\" />\n        </b-button>\n      </b-input-group-append>\n    </b-input-group>\n    <b-form-checkbox-group\n      v-if=\"slicedOptions.length\"\n      v-model=\"selection\"\n      class=\"checkbox-list\"\n      :name=\"name\"\n      :options=\"slicedOptions\"\n      stacked\n    />\n    <div class=\"d-flex\">\n      <b-link\n        v-if=\"showCount < multifilterOptions.length\"\n        class=\"card-link\"\n        @click=\"showMore\"\n      >\n        {{ showMoreText }}\n      </b-link>\n      <div\n        v-if=\"foundOptionCount >= optionsWarningCount\"\n        v-b-popover.hover=\"\n          `There are ${optionsWarningCount} or more results found, only the first ${optionsWarningCount} are available. Please refine your search.`\n        \"\n        class=\"badge badge-warning warning text-white ml-auto d-flex align-items-center\"\n      >\n        <span class=\"mr-1\">\n          {{ optionsWarningCount }}+\n        </span>\n        <font-awesome-icon\n          icon=\"exclamation-circle\"\n        />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'MultiFilter',\n  props: {\n    /**\n     * Toggle to switch between returning an array with values or an array with the full option\n     */\n    returnTypeAsObject: {\n      type: Boolean,\n      required: false,\n      default: () => false\n    },\n    /**\n     * The HTML input element name.\n     */\n    name: {\n      type: String,\n      required: true\n    },\n    /**\n     * The HTML input element placeholder.\n     */\n    placeholder: {\n      type: String,\n      required: false,\n      default: () => 'Type to search more'\n    },\n    /**\n     * The async method returning filter options.\n     */\n    options: {\n      type: Function,\n      required: true\n    },\n    /**\n     * The amount of initial options to show.\n     */\n    initialDisplayItems: {\n      type: Number,\n      required: false,\n      default: () => 1\n    },\n    /**\n     * The amount of options available at one time\n     * per search request\n     */\n    optionsWarningCount: {\n      type: Number,\n      required: false,\n      default: 100\n    },\n    /**\n     * @model\n     */\n    value: {\n      type: Array,\n      default: () => []\n    },\n    /**\n     * The amount of options to show after filtering the checkbox options.\n     */\n    maxVisibleOptions: {\n      type: Number,\n      default: () => 10\n    }\n  },\n  data () {\n    return {\n      externalUpdate: false,\n      showCount: 0,\n      isLoading: false,\n      triggerQuery: Number,\n      inputOptions: [],\n      initialOptions: [],\n      selection: [],\n      query: ''\n    }\n  },\n  computed: {\n    multifilterOptions () {\n      return this.inputOptions\n    },\n    slicedOptions () {\n      return this.multifilterOptions.slice(0, this.showCount)\n    },\n    foundOptionCount () {\n      return this.multifilterOptions.length\n    },\n    showMoreText () {\n      const remaining = this.foundOptionCount - this.showCount\n      if (remaining <= this.maxVisibleOptions) {\n        return `Show remaining ${remaining}`\n      } else {\n        return `Show ${this.maxVisibleOptions} more`\n      }\n    }\n  },\n  watch: {\n    selection (newValue) {\n      let newSelection\n      if (this.externalUpdate) {\n        this.externalUpdate = false\n        return\n      }\n\n      if (this.returnTypeAsObject) {\n        newSelection = Object.assign(\n          newValue,\n          this.multifilterOptions.filter((mfo) => newValue.includes(mfo.value))\n        )\n      } else {\n        newSelection = [...newValue]\n      }\n\n      this.$emit('input', newSelection)\n    },\n    value () {\n      this.setValue()\n    },\n    query (queryValue) {\n      if (this.triggerQuery) {\n        clearTimeout(this.triggerQuery)\n      }\n\n      if (!queryValue.length) {\n        const newInititalOptions = [].concat(this.multifilterOptions)\n        this.inputOptions = this.inputOptionsSort(newInititalOptions)\n        return\n      }\n\n      this.triggerQuery = setTimeout(() => {\n        clearTimeout(this.triggerQuery)\n        this.showCount = this.maxVisibleOptions\n        this.isLoading = true\n\n        this.options({ nameAttribute: 'label', query: this.query }).then(\n          (searchResults) => {\n            const allOptions = searchResults\n              ? searchResults.concat(this.inputOptions)\n              : this.inputOptions\n            this.inputOptions = this.inputOptionsSort(allOptions)\n          }\n        )\n\n        this.isLoading = false\n      }, 500)\n    }\n  },\n  created () {\n    this.showCount = this.maxVisibleOptions\n  },\n  beforeMount () {\n    this.initializeFilter()\n  },\n  methods: {\n    inputOptionsSort (optionsArray) {\n      optionsArray.sort((a, b) => {\n        if (\n          !this.selection.includes(a.value) &&\n          !this.selection.includes(b.value)\n        ) {\n          return 0\n        } else if (\n          this.selection.includes(a.value) &&\n          !this.selection.includes(b.value)\n        ) {\n          return -1\n        } else return 1\n      })\n\n      return Array.from(\n        new Set(optionsArray.map((cio) => cio.value))\n      ).map((value) => optionsArray.find((cio) => cio.value === value))\n    },\n    setValue () {\n      this.externalUpdate = true\n      this.selection =\n        typeof this.value[0] === 'object'\n          ? this.value.map((vo) => vo.value)\n          : this.value\n    },\n    showMore () {\n      this.showCount += this.maxVisibleOptions\n    },\n    async initializeFilter () {\n      let selectedOptions = []\n\n      if (this.value && this.value.length) {\n        this.setValue()\n        // Get the initial selected\n        selectedOptions = await this.options({\n          nameAttribute: 'label',\n          queryType: 'in',\n          query: this.selection.join(',')\n        })\n      }\n\n      // fetch the other options and concat\n      const completeInitialOptions = selectedOptions.concat(\n        await this.options({\n          nameAttribute: 'label',\n          count: this.initialDisplayItems\n        })\n      )\n\n      // deduplicate by first mapping the id's then getting the first matching object back.\n      this.initialOptions = this.inputOptionsSort(completeInitialOptions)\n      this.inputOptions = this.initialOptions\n    }\n  }\n}\n</script>\n\n<style scoped>\n.warning:hover {\n  cursor: pointer;\n}\n\n.checkbox-list {\n  margin: 0.75rem 0;\n  max-height: 16rem;\n  overflow-y: auto;\n}\n\n.card-link {\n  font-size: small;\n  font-style: italic;\n}\n</style>\n\n<docs>\nItem-based Filter. Search box is used to find items in the table.\n\n### Usage\n```jsx\n\nconst model = []\n<MultiFilter\n  v-bind:returnTypeAsObject=\"false\"\n  v-bind:options=\"multiFilterOptions\"\n  v-bind:collapses=\"false\"\n  v-bind:initialDisplayItems=\"5\"\n  v-bind:maxVisibleOptions=\"5\"\n  v-bind:optionsWarningCount=\"10\"\n  v-model=\"model\"\n  name=\"multi-filter\">\n</MultiFilter>\n<div>{{model}}</div>\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'NumberFilter',\n  props: {\n    /**\n     * The minimum allowed filter value.\n     */\n    min: {\n      type: Number,\n      default: () => Number.MIN_SAFE_INTEGER\n    },\n    /**\n     * The maximum allowed filter value.\n     */\n    max: {\n      type: Number,\n      default: () => Number.MAX_SAFE_INTEGER\n    },\n    /**\n     * Step size when using browser UI controls.\n     */\n    step: {\n      type: Number,\n      default: () => 1\n    },\n    /**\n     * The number to be used in filtering items.\n     * @model\n     */\n    value: {\n      type: Number,\n      default: () => 0\n    },\n    /**\n     * Whether to use an additional UI slider to set the input value.\n     */\n    useSlider: {\n      type: Boolean,\n      default: () => false\n    }\n  },\n  computed: {\n    model: {\n      get () {\n        return this.value\n      },\n      /**\n       * v-model return value\n       *\n       * @event input\n       * @property {Array} Returns new array without the deleted item\n       */\n      set (value) {\n        if (typeof value === 'string' && value === '') {\n          this.$emit('input', undefined)\n        } else {\n          value = Math.min(Math.max(value, this.min), this.max)\n          /**\n          * v-model return value\n          *\n          * @event input\n          * @property {Float} Returns new filter value or NaN\n          */\n          this.$emit('input', parseFloat(value))\n        }\n      }\n    }\n  }\n}\n","<template>\n  <div>\n    <b-input-group>\n      <b-form-input\n        v-model=\"model\"\n        type=\"number\"\n        :min=\"min\"\n        :max=\"max\"\n        :step=\"step\"\n      />\n    </b-input-group>\n    <vue-slider\n      v-if=\"useSlider\"\n      v-model=\"model\"\n      :min=\"min\"\n      :max=\"max\"\n      :interval=\"step\"\n      class=\"mt-2\"\n    />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'NumberFilter',\n  props: {\n    /**\n     * The minimum allowed filter value.\n     */\n    min: {\n      type: Number,\n      default: () => Number.MIN_SAFE_INTEGER\n    },\n    /**\n     * The maximum allowed filter value.\n     */\n    max: {\n      type: Number,\n      default: () => Number.MAX_SAFE_INTEGER\n    },\n    /**\n     * Step size when using browser UI controls.\n     */\n    step: {\n      type: Number,\n      default: () => 1\n    },\n    /**\n     * The number to be used in filtering items.\n     * @model\n     */\n    value: {\n      type: Number,\n      default: () => 0\n    },\n    /**\n     * Whether to use an additional UI slider to set the input value.\n     */\n    useSlider: {\n      type: Boolean,\n      default: () => false\n    }\n  },\n  computed: {\n    model: {\n      get () {\n        return this.value\n      },\n      /**\n       * v-model return value\n       *\n       * @event input\n       * @property {Array} Returns new array without the deleted item\n       */\n      set (value) {\n        if (typeof value === 'string' && value === '') {\n          this.$emit('input', undefined)\n        } else {\n          value = Math.min(Math.max(value, this.min), this.max)\n          /**\n          * v-model return value\n          *\n          * @event input\n          * @property {Float} Returns new filter value or NaN\n          */\n          this.$emit('input', parseFloat(value))\n        }\n      }\n    }\n  }\n}\n</script>\n\n<docs>\nBrowser number input filter with additional options.\n### Usage\n```jsx\nconst model = 5\n<NumberFilter\n  v-bind:collapses=\"false\"\n  v-bind:maxVisibleOptions=\"5\"\n  v-model=\"model\"\n  v-bind:min=\"0\"\n  v-bind:max=\"10\"\n  v-bind:step=\"2\"\n  v-bind:useSlider=\"true\"\n  label=\"Number\"\n  name=\"number\">\n</NumberFilter>\n<div>{{model}}</div>\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'RangeFilter',\n  props: {\n    /**\n     * The minimum allowed filter value.\n     */\n    min: {\n      type: Number,\n      default: () => Number.MIN_SAFE_INTEGER\n    },\n    /**\n     * The maximum allowed filter value.\n     */\n    max: {\n      type: Number,\n      default: () => Number.MAX_SAFE_INTEGER\n    },\n    /**\n     * Step size when using browser UI controls.\n     */\n    step: {\n      type: Number,\n      default: () => 1\n    },\n    /**\n     * The number to be used in filtering items.\n     * @model\n     */\n    value: {\n      type: Array,\n      default: () => [null, null]\n    },\n    /**\n     * Whether to use an additional UI slider to set the input value.\n     */\n    useSlider: {\n      type: Boolean,\n      default: () => false\n    }\n  },\n  data: function () {\n    return {\n      rangeValue: this.value\n    }\n  },\n  watch: {\n    value (newValue) {\n      if (newValue[0] == null && newValue[1] == null) {\n        this.rangeValue = [null, null]\n      }\n    }\n  },\n  methods: {\n    setRangeValue (id, value) {\n      this.rangeValue[id] = value\n      this.handleRangeValueChange()\n    },\n    clampValue (value, max, min) {\n      return Math.min(Math.max(value, min), max)\n    },\n    handleRangeValueChange () {\n      if (this.rangeValue[0] === '') {\n        this.rangeValue[0] = null\n      }\n      if (this.rangeValue[1] === '') {\n        this.rangeValue[1] = null\n      }\n\n      if (this.rangeValue[0] != null) {\n        this.rangeValue[0] = this.clampValue(this.rangeValue[0], this.max, this.min)\n      }\n      if (this.rangeValue[1] != null) {\n        this.rangeValue[1] = this.clampValue(this.rangeValue[1], this.max, this.min)\n      }\n      this.rangeValue = [this.rangeValue[0], this.rangeValue[1]]\n\n      /**\n      * Clone to break reactive loop.\n      * @property {Array} rangeValue Range filter value\n      */\n      this.$emit('input', [...this.rangeValue])\n    }\n  }\n}\n","\n<template>\n  <div>\n    <b-input-group class=\"mb-1\">\n      <b-form-input\n        v-model=\"rangeValue[0]\"\n        type=\"number\"\n        :min=\"min\"\n        :max=\"max\"\n        placeholder=\"from\"\n        :step=\"step\"\n        class=\"text-center range-from\"\n        @input=\"handleRangeValueChange\"\n      />\n      <b-input-group-append>\n        <b-button\n          class=\"clear-from\"\n          variant=\"outline-secondary\"\n          @click.prevent=\"setRangeValue(0, null)\"\n        >\n          <font-awesome-icon icon=\"times\" />\n        </b-button>\n      </b-input-group-append>\n    </b-input-group>\n    <b-input-group>\n      <b-form-input\n        v-model=\"rangeValue[1]\"\n        type=\"number\"\n        :min=\"min\"\n        :max=\"max\"\n        placeholder=\"to\"\n        :step=\"step\"\n        class=\"text-center range-to\"\n        @input=\"handleRangeValueChange\"\n      />\n      <b-input-group-append>\n        <b-button\n          class=\"clear-to\"\n          variant=\"outline-secondary\"\n          @click.prevent=\"setRangeValue(1, null)\"\n        >\n          <font-awesome-icon icon=\"times\" />\n        </b-button>\n      </b-input-group-append>\n    </b-input-group>\n    <vue-slider\n      v-if=\"useSlider\"\n      v-model=\"rangeValue\"\n      :min=\"min\"\n      :max=\"max\"\n      :interval=\"step\"\n      class=\"mt-2\"\n      @change=\"handleRangeValueChange\"\n    />\n    <small\n      v-if=\"min != Number.MIN_SAFE_INTEGER && max != Number.MAX_SAFE_INTEGER\"\n      class=\"form-text text-muted\"\n    >In a range of {{ min }} and {{ max }}</small>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'RangeFilter',\n  props: {\n    /**\n     * The minimum allowed filter value.\n     */\n    min: {\n      type: Number,\n      default: () => Number.MIN_SAFE_INTEGER\n    },\n    /**\n     * The maximum allowed filter value.\n     */\n    max: {\n      type: Number,\n      default: () => Number.MAX_SAFE_INTEGER\n    },\n    /**\n     * Step size when using browser UI controls.\n     */\n    step: {\n      type: Number,\n      default: () => 1\n    },\n    /**\n     * The number to be used in filtering items.\n     * @model\n     */\n    value: {\n      type: Array,\n      default: () => [null, null]\n    },\n    /**\n     * Whether to use an additional UI slider to set the input value.\n     */\n    useSlider: {\n      type: Boolean,\n      default: () => false\n    }\n  },\n  data: function () {\n    return {\n      rangeValue: this.value\n    }\n  },\n  watch: {\n    value (newValue) {\n      if (newValue[0] == null && newValue[1] == null) {\n        this.rangeValue = [null, null]\n      }\n    }\n  },\n  methods: {\n    setRangeValue (id, value) {\n      this.rangeValue[id] = value\n      this.handleRangeValueChange()\n    },\n    clampValue (value, max, min) {\n      return Math.min(Math.max(value, min), max)\n    },\n    handleRangeValueChange () {\n      if (this.rangeValue[0] === '') {\n        this.rangeValue[0] = null\n      }\n      if (this.rangeValue[1] === '') {\n        this.rangeValue[1] = null\n      }\n\n      if (this.rangeValue[0] != null) {\n        this.rangeValue[0] = this.clampValue(this.rangeValue[0], this.max, this.min)\n      }\n      if (this.rangeValue[1] != null) {\n        this.rangeValue[1] = this.clampValue(this.rangeValue[1], this.max, this.min)\n      }\n      this.rangeValue = [this.rangeValue[0], this.rangeValue[1]]\n\n      /**\n      * Clone to break reactive loop.\n      * @property {Array} rangeValue Range filter value\n      */\n      this.$emit('input', [...this.rangeValue])\n    }\n  }\n}\n</script>\n\n<docs>\nBrowser number input filter with additional options.\n### Usage\n```jsx\nconst model = [2, 8]\n<RangeFilter\n  v-model=\"model\"\n  v-bind:min=\"0\"\n  v-bind:max=\"10\"\n  v-bind:step=\"1\"\n  v-bind:useSlider=\"true\"\n  label=\"Number\"\n  name=\"number\">\n</RangeFilter>\n<div>{{model}}</div>\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'StringFilter',\n  props: {\n    /**\n     * The HTML input element name.\n     */\n    name: {\n      type: String,\n      required: true\n    },\n    /**\n     * The HTML input element placeholder.\n     */\n    placeholder: {\n      type: String,\n      required: false,\n      default: () => ''\n    },\n    /**\n     * The StringFilter model value.\n     * @model\n     */\n    value: {\n      type: String,\n      default: () => ''\n    }\n  },\n  computed: {\n    model: {\n      get () {\n        return this.value || ''\n      },\n      set (value) {\n        this.$emit('input', value === '' ? undefined : value)\n      }\n    }\n  }\n}\n","<template>\n  <b-input-group>\n    <b-form-input\n      v-model=\"model\"\n      :name=\"name\"\n      :placeholder=\"placeholder\"\n      trim\n    />\n    <b-input-group-append>\n      <b-button\n        variant=\"outline-secondary\"\n        @click.prevent=\"model=''\"\n      >\n        <font-awesome-icon icon=\"times\" />\n      </b-button>\n    </b-input-group-append>\n  </b-input-group>\n</template>\n\n<script>\nexport default {\n  name: 'StringFilter',\n  props: {\n    /**\n     * The HTML input element name.\n     */\n    name: {\n      type: String,\n      required: true\n    },\n    /**\n     * The HTML input element placeholder.\n     */\n    placeholder: {\n      type: String,\n      required: false,\n      default: () => ''\n    },\n    /**\n     * The StringFilter model value.\n     * @model\n     */\n    value: {\n      type: String,\n      default: () => ''\n    }\n  },\n  computed: {\n    model: {\n      get () {\n        return this.value || ''\n      },\n      set (value) {\n        this.$emit('input', value === '' ? undefined : value)\n      }\n    }\n  }\n}\n</script>\n\n<docs>\nBrowser input filter with additional options.\n### Usage\n```jsx\nconst model = 'bla'\n<StringFilter\n  v-model=\"model\"\n  placeholder=\"Input placeholder\"\n  name=\"my-string-filter\">\n</StringFilter>\n<div>{{model}}</div>\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport FilterCard from './FilterCard.vue'\n\nimport ActiveFilters from '../ActiveFilters.vue'\nimport ChangeFilters from '../ChangeFilters.vue'\nimport CheckboxFilter from '../CheckboxFilter.vue'\nimport DateTimeFilter from '../DateTimeFilter.vue'\nimport MultiFilter from '../MultiFilter.vue'\nimport NumberFilter from '../NumberFilter.vue'\nimport RangeFilter from '../RangeFilter.vue'\nimport StringFilter from '../StringFilter.vue'\n\nexport default {\n  name: 'FilterContainer',\n  components: {\n    ActiveFilters,\n    ChangeFilters,\n    CheckboxFilter,\n    DateTimeFilter,\n    MultiFilter,\n    NumberFilter,\n    RangeFilter,\n    StringFilter,\n    FilterCard\n  },\n  props: {\n    /**\n     * An array of filters to render.\n     */\n    filters: {\n      type: Array,\n      required: true\n    },\n    /**\n     * Object Key/values of filter names/values from all concerned filters.\n     * @model\n     */\n    value: {\n      type: Object,\n      default: () => ({})\n    },\n    /**\n     * The filters to show; an array of filter name properties.\n     */\n    filtersShown: {\n      type: Array,\n      required: false,\n      default: () => []\n    },\n    /**\n     * Lock or unluck filter addition/removal.\n     */\n    canEdit: {\n      type: Boolean,\n      required: false,\n      default: () => false\n    },\n    /**\n    * Set active filters selection dialogue style, choose between 'dropdown' or 'modal'.\n    * Defaults to using 'dropdown'\n    */\n    dialogStyle: {\n      type: String,\n      required: false,\n      default: () => 'dropdown'\n    },\n    /**\n    * Change action label\n    */\n    filterActionLabel: {\n      type: String,\n      required: false,\n      default: () => 'Add filter'\n    },\n    /**\n    * Filter list label\n    */\n    filterListLabel: {\n      type: String,\n      required: false,\n      default: () => 'Filters'\n    }\n  },\n  data () {\n    return {\n      filtersToShow: this.filtersShown,\n      filterToAdd: null,\n      drag: false,\n      width: 0,\n      mobileToggle: false\n    }\n  },\n  computed: {\n    doCollapse () {\n      // Bootstrap's mobile collapse width\n      return this.width <= 576\n    },\n    doDragDrop () {\n      return this.canEdit && !this.doCollapse\n    },\n    listOfVisibleFilters () {\n      return this.filtersToShow.map(id => this.filters.find(filter => filter.name === id))\n        .filter(item => item !== undefined)\n        .filter(item => item.type !== 'compound-title')\n    }\n  },\n  watch: {\n    filtersShown (newValue) {\n      this.filtersToShow = newValue\n    }\n  },\n  created () {\n    window.addEventListener('resize', this.handleResize)\n    this.handleResize()\n  },\n  destroyed () {\n    window.removeEventListener('resize', this.handleResize)\n  },\n  methods: {\n    handleResize () {\n      this.width = window.innerWidth\n    },\n    removeFilter (name) {\n      this.filtersToShow = this.filtersToShow.filter(filter => name !== filter)\n      /**\n       * Emit the filters that are supposed to be visible.\n       * @property {Array} filtersToShow - An array of filter name properties\n       * @event update\n       */\n      this.$emit('update', this.filtersToShow)\n\n      const selections = { ...this.value }\n      delete selections[name]\n      this.$emit('input', selections)\n    },\n    selectionChange (name, value) {\n      /**\n       * Update the model with the updated values from related filters.\n       * @property {Object} - Filter name/value\n       * @event input\n       */\n\n      // clear an empty checkbox and range filter\n      if (Array.isArray(value)) {\n        if (value.length === 0) {\n          value = undefined\n        } else if (value.every(item => item === null)) {\n          value = undefined\n        }\n      }\n\n      const newSelection = { ...this.value, [name]: value }\n      // remove all undefined properties\n      Object.keys(newSelection).forEach(key => newSelection[key] === undefined && delete newSelection[key])\n      this.$emit('input', newSelection)\n    },\n    selectionUpdate () {\n      this.$emit('update', this.filtersToShow)\n    }\n  }\n}\n","<template>\n  <div\n    class=\"filter-container\"\n    @mouseup=\"drag=false\"\n  >\n    <div v-if=\"canEdit && filters.length > 0\" class=\"change-filters\">\n      <b-dropdown\n        v-if=\"dialogStyle == 'dropdown'\"\n        ref=\"addFilter\"\n        class=\"mb-2\"\n        variant=\"outline-primary\"\n        boundary=\"window\"\n        menu-class=\"shadow ml-2\"\n        dropright\n        no-caret\n        block\n      >\n        <template #button-content>\n          <font-awesome-icon icon=\"filter\" class=\"mr-1\" /> {{ filterActionLabel }}\n        </template>\n        <b-dropdown-text>\n          {{ filterListLabel }}\n          <span class=\"float-right btn-close-filter-dialog\" @click.stop=\"$refs.addFilter.hide(true)\">\n            <font-awesome-icon icon=\"times\" />\n          </span>\n        </b-dropdown-text>\n        <b-dropdown-form>\n          <change-filters\n            v-model=\"filtersToShow\"\n            :filters=\"filters\"\n            @input=\"selectionUpdate\"\n          />\n        </b-dropdown-form>\n      </b-dropdown>\n      <button v-else v-b-modal.change-filters-modal class=\"btn btn-block btn-primary text-nowrap\">\n        {{ filterListLabel }}<font-awesome-icon icon=\"caret-right\" class=\"ml-1\" />\n      </button>\n      <b-modal\n        id=\"change-filters-modal\" title=\"Change filters\"\n        hide-footer\n        hide-header scrollable\n      >\n        <change-filters\n          v-model=\"filtersToShow\"\n          :filters=\"filters\"\n          @input=\"selectionUpdate\"\n        />\n      </b-modal>\n    </div>\n\n    <b-collapse\n      id=\"mobile-button-toggle\"\n      :visible=\"doCollapse\"\n    >\n      <button\n        class=\"btn w-100 my-2 btn-outline-secondary\"\n        @click=\"mobileToggle=!mobileToggle\"\n      >\n        {{ mobileToggle?'Hide filters':'Show filters' }}\n      </button>\n    </b-collapse>\n\n    <b-collapse\n      id=\"mobile-toggle\"\n      :visible=\"!doCollapse || mobileToggle\"\n    >\n      <draggable\n        v-model=\"filtersToShow\"\n        handle=\".drag-handle\"\n        :class=\"{'dragdrop': doDragDrop, 'dragging': drag}\"\n        :disabled=\"!doDragDrop\"\n        @choose=\"drag=true\"\n        @end=\"drag=false\"\n        @input=\"selectionUpdate\"\n      >\n        <transition-group>\n          <filter-card\n            v-for=\"filter in listOfVisibleFilters\"\n            :key=\"filter.name\"\n            v-bind=\"filter\"\n            :can-remove=\"canEdit\"\n            @removeFilter=\"removeFilter(filter.name)\"\n          >\n            <component\n              :is=\"filter.type\"\n              :name=\"filter.name\"\n              :value=\"value[filter.name]\"\n              v-bind=\"filter\"\n              @input=\"value => selectionChange(filter.name, value)\"\n            />\n          </filter-card>\n        </transition-group>\n      </draggable>\n    </b-collapse>\n  </div>\n</template>\n\n<script>\nimport FilterCard from './FilterCard.vue'\n\nimport ActiveFilters from '../ActiveFilters.vue'\nimport ChangeFilters from '../ChangeFilters.vue'\nimport CheckboxFilter from '../CheckboxFilter.vue'\nimport DateTimeFilter from '../DateTimeFilter.vue'\nimport MultiFilter from '../MultiFilter.vue'\nimport NumberFilter from '../NumberFilter.vue'\nimport RangeFilter from '../RangeFilter.vue'\nimport StringFilter from '../StringFilter.vue'\n\nexport default {\n  name: 'FilterContainer',\n  components: {\n    ActiveFilters,\n    ChangeFilters,\n    CheckboxFilter,\n    DateTimeFilter,\n    MultiFilter,\n    NumberFilter,\n    RangeFilter,\n    StringFilter,\n    FilterCard\n  },\n  props: {\n    /**\n     * An array of filters to render.\n     */\n    filters: {\n      type: Array,\n      required: true\n    },\n    /**\n     * Object Key/values of filter names/values from all concerned filters.\n     * @model\n     */\n    value: {\n      type: Object,\n      default: () => ({})\n    },\n    /**\n     * The filters to show; an array of filter name properties.\n     */\n    filtersShown: {\n      type: Array,\n      required: false,\n      default: () => []\n    },\n    /**\n     * Lock or unluck filter addition/removal.\n     */\n    canEdit: {\n      type: Boolean,\n      required: false,\n      default: () => false\n    },\n    /**\n    * Set active filters selection dialogue style, choose between 'dropdown' or 'modal'.\n    * Defaults to using 'dropdown'\n    */\n    dialogStyle: {\n      type: String,\n      required: false,\n      default: () => 'dropdown'\n    },\n    /**\n    * Change action label\n    */\n    filterActionLabel: {\n      type: String,\n      required: false,\n      default: () => 'Add filter'\n    },\n    /**\n    * Filter list label\n    */\n    filterListLabel: {\n      type: String,\n      required: false,\n      default: () => 'Filters'\n    }\n  },\n  data () {\n    return {\n      filtersToShow: this.filtersShown,\n      filterToAdd: null,\n      drag: false,\n      width: 0,\n      mobileToggle: false\n    }\n  },\n  computed: {\n    doCollapse () {\n      // Bootstrap's mobile collapse width\n      return this.width <= 576\n    },\n    doDragDrop () {\n      return this.canEdit && !this.doCollapse\n    },\n    listOfVisibleFilters () {\n      return this.filtersToShow.map(id => this.filters.find(filter => filter.name === id))\n        .filter(item => item !== undefined)\n        .filter(item => item.type !== 'compound-title')\n    }\n  },\n  watch: {\n    filtersShown (newValue) {\n      this.filtersToShow = newValue\n    }\n  },\n  created () {\n    window.addEventListener('resize', this.handleResize)\n    this.handleResize()\n  },\n  destroyed () {\n    window.removeEventListener('resize', this.handleResize)\n  },\n  methods: {\n    handleResize () {\n      this.width = window.innerWidth\n    },\n    removeFilter (name) {\n      this.filtersToShow = this.filtersToShow.filter(filter => name !== filter)\n      /**\n       * Emit the filters that are supposed to be visible.\n       * @property {Array} filtersToShow - An array of filter name properties\n       * @event update\n       */\n      this.$emit('update', this.filtersToShow)\n\n      const selections = { ...this.value }\n      delete selections[name]\n      this.$emit('input', selections)\n    },\n    selectionChange (name, value) {\n      /**\n       * Update the model with the updated values from related filters.\n       * @property {Object} - Filter name/value\n       * @event input\n       */\n\n      // clear an empty checkbox and range filter\n      if (Array.isArray(value)) {\n        if (value.length === 0) {\n          value = undefined\n        } else if (value.every(item => item === null)) {\n          value = undefined\n        }\n      }\n\n      const newSelection = { ...this.value, [name]: value }\n      // remove all undefined properties\n      Object.keys(newSelection).forEach(key => newSelection[key] === undefined && delete newSelection[key])\n      this.$emit('input', newSelection)\n    },\n    selectionUpdate () {\n      this.$emit('update', this.filtersToShow)\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .dragdrop .drag-handle {\n    cursor: grab;\n  }\n\n  .dragdrop.dragging .drag-handle {\n    cursor: grabbing;\n  }\n\n  .btn-close-filter-dialog {\n    cursor: pointer;\n    display: inline-block;\n    height: inherit;\n    position: absolute;\n    right: 10px;\n    text-align: center;\n    transition: color 0.2s;\n    width: 1.5em;\n  }\n\n  .btn-close-filter-dialog:hover {\n    color: var(--danger);\n  }\n\n  .change-filters form {\n    max-height: 400px;\n    overflow: auto;\n  }\n</style>\n\n<docs>\nCard containing filter\n### Usage\n```jsx\nconst onRemoveFilter = () => alert('remove me please')\n\nconst model = {\n    search: 'test',\n}\n\nconst filtersShown = ['datetime']\n\n<div class=\"row\">\n  <div class=\"col-4\">\n    <FilterContainer\n        v-model=\"model\"\n        :filters=\"filtersMocks\"\n        :filters-shown=\"filtersShown\"\n        :can-edit=\"true\"\n        filterActionLabel=\"Add filter\"\n        filterListLabel=\"Filters\"\n        @update=\"(newState) => filtersShown = newState\"\n    />\n  </div>\n  <div>{{model}}</div>\n</div>\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'Pagination',\n  props: {\n    /**\n     * Extra css classes for the pagination buttons.\n     */\n    css: {\n      type: Object,\n      required: false,\n      default: () => ({})\n    },\n    /**\n     * Translatable texts.\n     */\n    i18n: {\n      type: Object,\n      default: () => ({\n        page: 'page',\n        'per page': 'per page',\n        items: 'items'\n      })\n    },\n    /**\n     * Select choices for the page size.\n     */\n    pageSizes: {\n      type: Array,\n      required: false,\n      default: () => [10, 20, 50]\n    },\n    /**\n     * Reflects the pagination state.\n     * @model\n     */\n    value: {\n      type: Object,\n      required: true\n    },\n    /**\n     * Number of navigational page buttons; this must be uneven.\n     */\n    visiblePages: {\n      type: Number,\n      default: () => 7,\n      validator (value) {\n        return (value % 2 !== 0)\n      }\n    }\n  },\n  data: function () {\n    return {\n      localValue: {\n        size: 20,\n        page: 1,\n        loading: false,\n        count: 0\n      }\n    }\n  },\n  computed: {\n    navigationText () {\n      if (this.pageCount <= 1) {\n        return `${this.i18n.items}: ${this.localValue.count}`\n      } else {\n        return `${this.i18n.page} ${this.localValue.page}/${this.pageCount} (${this.localValue.count} ${this.i18n.items})`\n      }\n    },\n    pageCount () {\n      if (!this.localValue.count) { return 0 }\n      return Math.ceil(this.localValue.count / this.localValue.size)\n    },\n    pageNumbers () {\n      const pages = []\n      for (let i = this.pageRange.left; i <= this.pageRange.right; i++) { pages.push(i) }\n      return pages\n    },\n    /**\n     * Calculations that determine which pages must be rendered.\n     * See the computed `pageNumbers` method for its usage.\n     */\n    pageRange () {\n      const edge = Math.floor(this.visiblePages / 2)\n      const start = this.localValue.page <= edge\n      const end = this.localValue.page >= (Math.floor(this.localValue.count / this.localValue.size) - edge)\n\n      let left, right\n\n      if (start) {\n        left = 1\n        right = (this.pageCount > this.visiblePages) ? this.visiblePages : this.pageCount\n      } else if (end) {\n        left = (this.pageCount - this.visiblePages) > 0 ? (this.pageCount - this.visiblePages + 1) : 1\n        right = this.pageCount\n      } else {\n        // Must be within the mid-range.\n        left = this.localValue.page - edge\n        right = this.localValue.page + edge\n      }\n\n      return { left, right }\n    }\n  },\n  watch: {\n    /**\n     * Sync the local state when the external state changes.\n     */\n    value: {\n      handler (value) {\n        this.localValue = value\n      },\n      deep: true\n    }\n  },\n  async created () {\n    this.localValue = { ...this.localValue, ...this.value }\n  },\n  methods: {\n    updateValue (value) {\n      this.localValue = { ...this.localValue, ...this.value, ...value }\n      this.$emit('input', { ...this.localValue })\n    },\n    handleSizeChange () {\n      this.updateValue({ page: 1, size: this.localValue.size })\n    }\n  }\n}\n","<template>\n  <nav class=\"c-pagination\">\n    <div v-if=\"localValue.count > localValue.size\" class=\"btn-group mb-2 mr-3\">\n      <button\n        :class=\"css\" class=\"btn btn-outline-primary\"\n        :disabled=\"localValue.page <= 1\"\n        @click=\"updateValue({page: 1})\"\n      >\n        «\n      </button>\n\n      <button\n        :class=\"css\" class=\"t-page-prev btn btn-outline-primary\"\n        :disabled=\"localValue.page <= 1\"\n        @click=\"updateValue({page: localValue.page - 1})\"\n      >\n        ‹\n      </button>\n\n      <button\n        v-for=\"pageNumber in pageNumbers\" :key=\"pageNumber\"\n        class=\"btn btn-outline-primary\"\n        :class=\"{'active': pageNumber === localValue.page, ...css}\"\n        @click=\"updateValue({page: pageNumber})\"\n      >\n        {{ pageNumber }}\n      </button>\n\n      <button\n        :class=\"css\" class=\"t-page-next btn btn-outline-primary\"\n        :disabled=\"localValue.page >= pageCount\"\n        @click=\"updateValue({page: localValue.page + 1})\"\n      >\n        ›\n      </button>\n\n      <button\n        :class=\"css\" class=\"btn btn-outline-primary\"\n        :disabled=\"localValue.page >= pageCount\"\n        @click=\"updateValue({page: pageCount})\"\n      >\n        »\n      </button>\n    </div>\n\n    <div class=\"controls mb-2\">\n      <div class=\"item-count form-inline mr-2\">\n        <span>{{ navigationText }}</span>\n      </div>\n\n      <div class=\"form-check form-check-inline\">\n        <label class=\"form-check-label mr-2\" for=\"page-size\">{{ i18n['per page'] }}</label>\n        <select\n          id=\"page-size\" v-model=\"localValue.size\"\n          class=\"form-control\"\n          @change=\"handleSizeChange\"\n        >\n          <option v-for=\"pageSize of pageSizes\" :key=\"pageSize\" :value=\"pageSize\">\n            {{ pageSize }}\n          </option>\n        </select>\n      </div>\n    </div>\n  </nav>\n</template>\n\n<script>\nexport default {\n  name: 'Pagination',\n  props: {\n    /**\n     * Extra css classes for the pagination buttons.\n     */\n    css: {\n      type: Object,\n      required: false,\n      default: () => ({})\n    },\n    /**\n     * Translatable texts.\n     */\n    i18n: {\n      type: Object,\n      default: () => ({\n        page: 'page',\n        'per page': 'per page',\n        items: 'items'\n      })\n    },\n    /**\n     * Select choices for the page size.\n     */\n    pageSizes: {\n      type: Array,\n      required: false,\n      default: () => [10, 20, 50]\n    },\n    /**\n     * Reflects the pagination state.\n     * @model\n     */\n    value: {\n      type: Object,\n      required: true\n    },\n    /**\n     * Number of navigational page buttons; this must be uneven.\n     */\n    visiblePages: {\n      type: Number,\n      default: () => 7,\n      validator (value) {\n        return (value % 2 !== 0)\n      }\n    }\n  },\n  data: function () {\n    return {\n      localValue: {\n        size: 20,\n        page: 1,\n        loading: false,\n        count: 0\n      }\n    }\n  },\n  computed: {\n    navigationText () {\n      if (this.pageCount <= 1) {\n        return `${this.i18n.items}: ${this.localValue.count}`\n      } else {\n        return `${this.i18n.page} ${this.localValue.page}/${this.pageCount} (${this.localValue.count} ${this.i18n.items})`\n      }\n    },\n    pageCount () {\n      if (!this.localValue.count) { return 0 }\n      return Math.ceil(this.localValue.count / this.localValue.size)\n    },\n    pageNumbers () {\n      const pages = []\n      for (let i = this.pageRange.left; i <= this.pageRange.right; i++) { pages.push(i) }\n      return pages\n    },\n    /**\n     * Calculations that determine which pages must be rendered.\n     * See the computed `pageNumbers` method for its usage.\n     */\n    pageRange () {\n      const edge = Math.floor(this.visiblePages / 2)\n      const start = this.localValue.page <= edge\n      const end = this.localValue.page >= (Math.floor(this.localValue.count / this.localValue.size) - edge)\n\n      let left, right\n\n      if (start) {\n        left = 1\n        right = (this.pageCount > this.visiblePages) ? this.visiblePages : this.pageCount\n      } else if (end) {\n        left = (this.pageCount - this.visiblePages) > 0 ? (this.pageCount - this.visiblePages + 1) : 1\n        right = this.pageCount\n      } else {\n        // Must be within the mid-range.\n        left = this.localValue.page - edge\n        right = this.localValue.page + edge\n      }\n\n      return { left, right }\n    }\n  },\n  watch: {\n    /**\n     * Sync the local state when the external state changes.\n     */\n    value: {\n      handler (value) {\n        this.localValue = value\n      },\n      deep: true\n    }\n  },\n  async created () {\n    this.localValue = { ...this.localValue, ...this.value }\n  },\n  methods: {\n    updateValue (value) {\n      this.localValue = { ...this.localValue, ...this.value, ...value }\n      this.$emit('input', { ...this.localValue })\n    },\n    handleSizeChange () {\n      this.updateValue({ page: 1, size: this.localValue.size })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.c-pagination {\n  display: flex;\n  flex-wrap: wrap;\n  width: 100%;\n\n  .btn-group {\n    display: flex;\n\n    .btn {\n      // Use fixed width buttons, so their position remains stable during navigation.\n      width: 2.25rem;\n    }\n  }\n\n  // The controls container fills up the rest of the space and flows\n  // beneath the navigation buttons when there is no more room.\n  .controls {\n    display: flex;\n    flex: 1;\n    flex-wrap: nowrap;\n    justify-content: space-between;\n    white-space: nowrap;\n\n    select {\n      width: 4.5rem;\n    }\n\n    .form-check {\n      margin: 0;\n    }\n  }\n}\n</style>\n\n<docs>\n## Basic example\n\n```jsx\n  // Always provide at least 'size' and 'page'; the other properties\n  // are added from the pagination component itself.\n  let model = { size: 20, page: 1, count: 124 }\n  const mockStore = (e) => { model = e }\n\n  <Pagination\n    v-model=\"model\"\n    v-on:input=\"mockStore\"\n    v-bind:visiblePages=\"9\"\n    v-bind:pageSizes=\"[10, 20, 50, 100]\"\n    v-bind:css=\"{'btn-sm': true}\"/>\n  Model: {{model}}\n```\n</docs>\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nconst defaultTimeout = 3000\n\nexport default {\n  name: 'Toaster',\n  props: {\n    /**\n     * List of toasts to show (see types/Toast.ts)\n     * @model\n     */\n    value: {\n      type: Array,\n      required: true\n    },\n    /**\n     * Position of toast in window\n     * Fixed positioning: 'top-left', 'bottom-left', 'top-right', 'bottom-right'\n     * Or Inline using: 'inline'\n     */\n    position: {\n      type: String,\n      default: () => 'bottom-right'\n    }\n  },\n  data: function () {\n    return {\n      toasts: [...this.value]\n    }\n  },\n  watch: {\n    value: {\n      handler: function (newValue, oldValue) {\n        this.$set(this, 'toasts', [...newValue])\n\n        // Only process timeout for new toasts. Old value is empty\n        // when called on creation, due to immediately watch property.\n        if (oldValue && newValue.length < oldValue.length) return\n\n        for (const toast of newValue) {\n          // Timeout already scheduled.\n          if (toast.timeout === -1) continue\n          // New toast has an explicitly disabled timeout.\n          if (toast.timeout === 0) continue\n\n          if (!toast.timeout) {\n            toast.timeout = defaultTimeout\n          }\n\n          setTimeout(() => {\n            this.clearToast(toast)\n          }, toast.timeout)\n\n          toast.timeout = -1\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    clearToast (toast) {\n      this.toasts.splice(this.toasts.indexOf(toast), 1)\n      /**\n      * v-model return value\n      * @event input\n      * @property {Object[]} Toasts array with toast removed\n      */\n      this.$emit('input', [...this.toasts])\n    }\n  }\n}\n","<template>\n  <div class=\"c-toaster\" :class=\"{[position]: true}\">\n    <div\n      v-for=\"(toast, index) in toasts\" :key=\"index\"\n      class=\"mg-toast alert alert-dismissible fade show shadow-sm\"\n      :class=\"{[`alert-${toast.type}`]: true}\"\n    >\n      <div class=\"mg-toast-message\" v-html=\"toast.message\" />\n\n      <button type=\"button\" class=\"close\" @click=\"clearToast(toast)\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n  </div>\n</template>\n<script>\nconst defaultTimeout = 3000\n\nexport default {\n  name: 'Toaster',\n  props: {\n    /**\n     * List of toasts to show (see types/Toast.ts)\n     * @model\n     */\n    value: {\n      type: Array,\n      required: true\n    },\n    /**\n     * Position of toast in window\n     * Fixed positioning: 'top-left', 'bottom-left', 'top-right', 'bottom-right'\n     * Or Inline using: 'inline'\n     */\n    position: {\n      type: String,\n      default: () => 'bottom-right'\n    }\n  },\n  data: function () {\n    return {\n      toasts: [...this.value]\n    }\n  },\n  watch: {\n    value: {\n      handler: function (newValue, oldValue) {\n        this.$set(this, 'toasts', [...newValue])\n\n        // Only process timeout for new toasts. Old value is empty\n        // when called on creation, due to immediately watch property.\n        if (oldValue && newValue.length < oldValue.length) return\n\n        for (const toast of newValue) {\n          // Timeout already scheduled.\n          if (toast.timeout === -1) continue\n          // New toast has an explicitly disabled timeout.\n          if (toast.timeout === 0) continue\n\n          if (!toast.timeout) {\n            toast.timeout = defaultTimeout\n          }\n\n          setTimeout(() => {\n            this.clearToast(toast)\n          }, toast.timeout)\n\n          toast.timeout = -1\n        }\n      },\n      immediate: true\n    }\n  },\n  methods: {\n    clearToast (toast) {\n      this.toasts.splice(this.toasts.indexOf(toast), 1)\n      /**\n      * v-model return value\n      * @event input\n      * @property {Object[]} Toasts array with toast removed\n      */\n      this.$emit('input', [...this.toasts])\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n$spacer: 0.5rem;\n\n.c-toaster {\n  &.top-left,\n  &.top-right {\n    position: fixed;\n    top: $spacer;\n  }\n\n  &.bottom-left,\n  &.bottom-right {\n    bottom: $spacer;\n    position: fixed;\n  }\n\n  &.bottom-left,\n  &.top-left {\n    left: $spacer;\n  }\n\n  &.bottom-right,\n  &.top-right {\n    right: $spacer;\n  }\n\n  &:not(.inline) {\n    max-width: 350px; // To match bootstrap's toast size ( in case the shopping cart is under the toasts )\n    z-index: 1060;  // Bootstrap popover z-index\n\n    @media (max-width: 576px) {\n      padding: 0 $spacer;\n      width: 100%;\n\n      &.bottom-left,\n      &.top-left {\n        left: 0;\n      }\n\n      &.bottom-right,\n      &.top-right {\n        right: 0;\n      }\n\n    }\n  }\n}\n</style>\n\n<docs>\n  This is a notification component.\n\n  ## Example\n\n  ```jsx\n  let model = []\n  const addToast = (message, type, timeout) => model.push({message, type, timeout})\n  const mockVuex = (e) => model = e\n\n  <Toaster v-model=\"model\" v-on:input=\"mockVuex\"></Toaster>\n  <button class=\"btn btn-primary\" v-on:click=\"addToast('new message', 'success', 0)\">Add toast</button>\n  <button class=\"btn btn-primary\" v-on:click=\"addToast('timeout message', 'danger', 1500)\">Add toast (timeout)</button>\n  <div>{{model}}</div>\n  ```\n</docs>\n"],"names":["ActiveFilters","ChangeFilters","CheckboxFilter","DateTimeFilter","MultiFilter","NumberFilter","RangeFilter","StringFilter","FilterCard"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAe;AACf,EAAE,IAAI,EAAE,eAAe;AACvB,EAAE,KAAK,EAAE;AACT;AACA;AACA;AACA,IAAI,OAAO,EAAE;AACb,MAAM,IAAI,EAAE,KAAK;AACjB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE;AACX,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK;AACL,GAAG;AACH,EAAE,IAAI,CAAC,GAAG;AACV,IAAI,OAAO;AACX,MAAM,YAAY,EAAE,EAAE;AACtB,KAAK;AACL,GAAG;AACH,EAAE,KAAK,EAAE;AACT,IAAI,KAAK,EAAE;AACX,MAAM,OAAO,CAAC,CAAC,QAAQ,EAAE;AACzB,QAAQ,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAC;AACxC,OAAO;AACP,MAAM,SAAS,EAAE,IAAI;AACrB,KAAK;AACL,GAAG;AACH,EAAE,OAAO,EAAE;AACX,IAAI,MAAM,iBAAiB,CAAC,CAAC,QAAQ,EAAE;AACvC,MAAM,MAAM,YAAY,GAAG,GAAE;AAC7B,MAAM,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,KAAK;AACjE,QAAQ,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,EAAC;AAC7C;AACA;AACA,QAAQ,IAAI,OAAO,KAAK,SAAS,KAAK,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AAClF,UAAU,MAAM;AAChB,SAAS;AACT;AACA,QAAQ,IAAI,MAAM,CAAC,IAAI,KAAK,kBAAkB,EAAE;AAChD,UAAU,IAAI,MAAK;AACnB;AACA,UAAU,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,KAAK,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,EAAE;AACrE,YAAY,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,GAAE;AACnD,WAAW,MAAM;AACjB,YAAY,KAAK,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,EAAE,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,kBAAkB,EAAE,CAAC,EAAC;AAC7F,WAAW;AACX;AACA,UAAU,YAAY,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,EAAC;AAChE,UAAU,MAAM;AAChB,SAAS;AACT;AACA;AACA,QAAQ,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;AACpC;AACA,UAAU,IAAI,MAAM,CAAC,IAAI,KAAK,iBAAiB,EAAE;AACjD;AACA,YAAY,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,OAAO,GAAE;AACjD,YAAY,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI;AACtC,cAAc,MAAM,iBAAiB,GAAG,MAAM,CAAC,MAAM;AACrD,gBAAgB,YAAY,IAAI,YAAY,CAAC,KAAK,KAAK,MAAM;AAC7D,eAAe,CAAC,CAAC,EAAC;AAClB,cAAc,YAAY,CAAC,IAAI,CAAC;AAChC,gBAAgB,GAAG;AACnB,gBAAgB,MAAM;AACtB,gBAAgB,KAAK,EAAE,iBAAiB,CAAC,IAAI;AAC7C,gBAAgB,KAAK,EAAE,MAAM,CAAC,KAAK;AACnC,eAAe,EAAC;AAChB,aAAa,EAAC;AACd,WAAW;AACX;AACA,UAAU,IAAI,MAAM,CAAC,IAAI,KAAK,cAAc,EAAE;AAC9C,YAAY,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,KAAK,OAAO,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;AAClF,cAAc,YAAY,CAAC,IAAI,CAAC;AAChC,gBAAgB,GAAG;AACnB,gBAAgB,KAAK,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;AAC/C,gBAAgB,KAAK,EAAE,MAAM,CAAC,KAAK;AACnC,eAAe,EAAC;AAChB,aAAa,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE;AAC1F,cAAc,YAAY,CAAC,IAAI,CAAC;AAChC,gBAAgB,GAAG;AACnB,gBAAgB,KAAK,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;AAC/C,gBAAgB,KAAK,EAAE,MAAM,CAAC,KAAK;AACnC,eAAe,EAAC;AAChB,aAAa,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;AACnE,cAAc,YAAY,CAAC,IAAI,CAAC;AAChC,gBAAgB,GAAG;AACnB,gBAAgB,KAAK,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,gBAAgB,KAAK,EAAE,MAAM,CAAC,KAAK;AACnC,eAAe,EAAC;AAChB,aAAa;AACb,WAAW;AACX;AACA,UAAU,IAAI,MAAM,CAAC,IAAI,KAAK,cAAc,EAAE;AAC9C,YAAY,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC,EAAE,aAAa,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAC;AACrH,YAAY,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI;AACtC,cAAc,MAAM,iBAAiB,GAAG,OAAO,CAAC,MAAM;AACtD,gBAAgB,YAAY,IAAI,YAAY,CAAC,KAAK,KAAK,MAAM;AAC7D,eAAe,CAAC,CAAC,EAAC;AAClB,cAAc,YAAY,CAAC,IAAI,CAAC;AAChC,gBAAgB,GAAG;AACnB,gBAAgB,MAAM;AACtB,gBAAgB,KAAK,EAAE,iBAAiB,CAAC,IAAI;AAC7C,gBAAgB,KAAK,EAAE,MAAM,CAAC,KAAK;AACnC,eAAe,EAAC;AAChB,aAAa,EAAC;AACd,WAAW;AACX,SAAS,MAAM;AACf;AACA,UAAU,YAAY,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,KAAK,EAAE,EAAC;AACzE,SAAS;AACT,OAAO,EAAC;AACR,MAAM,IAAI,IAAI,CAAC,KAAK,KAAK,QAAQ,EAAE;AACnC,QAAQ,IAAI,CAAC,YAAY,GAAG,aAAY;AACxC,OAAO;AACP,KAAK;AACL,IAAI,YAAY,CAAC,CAAC,GAAG,EAAE;AACvB,MAAM,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;AAClE,KAAK;AACL,IAAI,YAAY,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,EAAE;AACnC,MAAM,MAAM,UAAU,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,GAAE;AAC1C,MAAM,IAAI,MAAM,KAAK,SAAS,EAAE;AAChC,QAAQ,OAAO,UAAU,CAAC,GAAG,EAAC;AAC9B,OAAO,MAAM;AACb,QAAQ,UAAU,CAAC,GAAG,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,YAAY,IAAI,YAAY,KAAK,MAAM,EAAC;AACzF,OAAO;AACP,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,EAAC;AACrC,KAAK;AACL,GAAG;AACH;;ACxJA,SAAS,kBAAkB,CAAC,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,oBAAoB,EAAE,gBAAgB,oBAAoB,UAAU,EAAE,cAAc,EAAE,iBAAiB,EAAE,oBAAoB,EAAE;AAC7L,IAAI,IAAI,OAAO,UAAU,KAAK,SAAS,EAAE;AACzC,QAAQ,iBAAiB,GAAG,cAAc,CAAC;AAC3C,QAAQ,cAAc,GAAG,UAAU,CAAC;AACpC,QAAQ,UAAU,GAAG,KAAK,CAAC;AAC3B,KAAK;AACL;AACA,IAAI,MAAM,OAAO,GAAG,OAAO,MAAM,KAAK,UAAU,GAAG,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC;AAC3E;AACA,IAAI,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,EAAE;AACrC,QAAQ,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;AACzC,QAAQ,OAAO,CAAC,eAAe,GAAG,QAAQ,CAAC,eAAe,CAAC;AAC3D,QAAQ,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC;AACjC;AACA,QAAQ,IAAI,oBAAoB,EAAE;AAClC,YAAY,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;AACtC,SAAS;AACT,KAAK;AACL;AACA,IAAI,IAAI,OAAO,EAAE;AACjB,QAAQ,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC;AACnC,KAAK;AACL,IAAI,IAAI,IAAI,CAAC;AACb,IAAI,IAAI,gBAAgB,EAAE;AAC1B;AACA,QAAQ,IAAI,GAAG,UAAU,OAAO,EAAE;AAClC;AACA,YAAY,OAAO;AACnB,gBAAgB,OAAO;AACvB,qBAAqB,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;AAC3D,qBAAqB,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AACzF;AACA,YAAY,IAAI,CAAC,OAAO,IAAI,OAAO,mBAAmB,KAAK,WAAW,EAAE;AACxE,gBAAgB,OAAO,GAAG,mBAAmB,CAAC;AAC9C,aAAa;AACb;AACA,YAAY,IAAI,KAAK,EAAE;AACvB,gBAAgB,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC;AAC7D,aAAa;AACb;AACA,YAAY,IAAI,OAAO,IAAI,OAAO,CAAC,qBAAqB,EAAE;AAC1D,gBAAgB,OAAO,CAAC,qBAAqB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;AACpE,aAAa;AACb,SAAS,CAAC;AACV;AACA;AACA,QAAQ,OAAO,CAAC,YAAY,GAAG,IAAI,CAAC;AACpC,KAAK;AACL,SAAS,IAAI,KAAK,EAAE;AACpB,QAAQ,IAAI,GAAG,UAAU;AACzB,cAAc,UAAU,OAAO,EAAE;AACjC,gBAAgB,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,oBAAoB,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;AAChG,aAAa;AACb,cAAc,UAAU,OAAO,EAAE;AACjC,gBAAgB,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC;AAC1D,aAAa,CAAC;AACd,KAAK;AACL,IAAI,IAAI,IAAI,EAAE;AACd,QAAQ,IAAI,OAAO,CAAC,UAAU,EAAE;AAChC;AACA,YAAY,MAAM,cAAc,GAAG,OAAO,CAAC,MAAM,CAAC;AAClD,YAAY,OAAO,CAAC,MAAM,GAAG,SAAS,wBAAwB,CAAC,CAAC,EAAE,OAAO,EAAE;AAC3E,gBAAgB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACnC,gBAAgB,OAAO,cAAc,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;AAClD,aAAa,CAAC;AACd,SAAS;AACT,aAAa;AACb;AACA,YAAY,MAAM,QAAQ,GAAG,OAAO,CAAC,YAAY,CAAC;AAClD,YAAY,OAAO,CAAC,YAAY,GAAG,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACjF,SAAS;AACT,KAAK;AACL,IAAI,OAAO,MAAM,CAAC;AAClB;;;ACvEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,EAAE,IAAI,EAAE,eAAe;AACvB,EAAE,KAAK,EAAE;AACT;AACA;AACA;AACA;AACA,IAAI,OAAO,EAAE;AACb,MAAM,IAAI,EAAE,KAAK;AACjB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE;AACX,MAAM,IAAI,EAAE,KAAK;AACjB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK;AACL,GAAG;AACH,EAAE,IAAI,CAAC,GAAG;AACV,IAAI,OAAO;AACX,MAAM,QAAQ,EAAE,IAAI,CAAC,KAAK;AAC1B,KAAK;AACL,GAAG;AACH,EAAE,KAAK,EAAE;AACT,IAAI,KAAK,EAAE;AACX,MAAM,OAAO,CAAC,CAAC,QAAQ,EAAE;AACzB,QAAQ,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,QAAQ,EAAC;AACrC,OAAO;AACP,MAAM,SAAS,EAAE,IAAI;AACrB,KAAK;AACL,GAAG;AACH,EAAE,OAAO,EAAE;AACX,IAAI,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,KAAK,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK;AACnE,IAAI,eAAe,CAAC,CAAC,MAAM,EAAE,KAAK,EAAE;AACpC,MAAM,IAAI,KAAK,EAAE;AACjB,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAC;AACvC,OAAO,MAAM;AACb,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK,IAAI,KAAK,MAAM,CAAC,IAAI,EAAC;AAC5E,OAAO;AACP;AACA;AACA,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,gBAAgB,EAAE;AAC5C,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO;AACzC,WAAW,MAAM,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,KAAK,MAAM,CAAC,IAAI,CAAC;AAC1D,WAAW,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,EAAC;AACnC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;AACjD;AACA,UAAU,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,YAAY,CAAC,CAAC,MAAM;AACpE,YAAY,IAAI,CAAC,MAAM;AACvB,YAAW;AACX,SAAS,MAAM;AACf;AACA,UAAU,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM;AAC9C,YAAY,CAAC,IAAI,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC;AAClD,YAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE;AAC3B,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO;AACzC,WAAW,MAAM,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,QAAQ,KAAK,MAAM,CAAC,QAAQ,CAAC;AAC9D,WAAW,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,EAAC;AACnC,QAAQ,MAAM,WAAW,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,IAAI;AACpD,UAAU,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC;AACtC,UAAS;AACT,QAAQ,MAAM,YAAY,GAAG,YAAY,CAAC,KAAK;AAC/C,UAAU,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC;AACjD,UAAS;AACT,QAAQ,MAAM,eAAe,GAAG,CAAC,WAAW,IAAI,CAAC,aAAY;AAC7D,QAAQ,IAAI,WAAW,EAAE;AACzB,UAAU,IAAI,CAAC,QAAQ,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM;AACpE,YAAY,IAAI,CAAC,MAAM;AACvB,YAAW;AACX,SAAS;AACT,QAAQ,IAAI,YAAY,EAAE;AAC1B,UAAU,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM;AAC9C,YAAY,CAAC,IAAI,KAAK,IAAI,KAAK,MAAM,CAAC,QAAQ;AAC9C,YAAW;AACX,SAAS;AACT,QAAQ,IAAI,eAAe,EAAE;AAC7B,UAAU,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM;AAC9C,YAAY,CAAC,IAAI,KAAK,IAAI,KAAK,MAAM,CAAC,QAAQ;AAC9C,YAAW;AACX,SAAS;AACT,OAAO;AACP,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAC;AACxC,KAAK;AACL,GAAG;AACH;;;ACrHA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,EAAE,IAAI,EAAE,gBAAgB;AACxB,EAAE,KAAK,EAAE;AACT;AACA;AACA;AACA,IAAI,kBAAkB,EAAE;AACxB,MAAM,IAAI,EAAE,OAAO;AACnB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,KAAK;AAC1B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,OAAO,EAAE;AACb,MAAM,IAAI,EAAE,CAAC,QAAQ,CAAC;AACtB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,aAAa,EAAE;AACnB,MAAM,IAAI,EAAE,KAAK;AACjB,MAAM,QAAQ,EAAE,KAAK;AACrB,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE;AACX,MAAM,IAAI,EAAE,KAAK;AACjB,MAAM,OAAO,EAAE,MAAM,EAAE;AACvB,KAAK;AACL;AACA;AACA;AACA,IAAI,aAAa,EAAE;AACnB,MAAM,IAAI,EAAE,OAAO;AACnB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,IAAI;AACzB,KAAK;AACL;AACA;AACA;AACA,IAAI,iBAAiB,EAAE;AACvB,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,OAAO,EAAE,MAAM,SAAS;AAC9B,KAAK;AACL,GAAG;AACH,EAAE,IAAI,CAAC,GAAG;AACV,IAAI,OAAO;AACX,MAAM,cAAc,EAAE,KAAK;AAC3B,MAAM,SAAS,EAAE,EAAE;AACnB,MAAM,eAAe,EAAE,EAAE;AACzB,MAAM,YAAY,EAAE,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM;AAC1H,KAAK;AACL,GAAG;AACH,EAAE,QAAQ,EAAE;AACZ,IAAI,cAAc,CAAC,GAAG;AACtB,MAAM,OAAO,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,OAAO,IAAI,CAAC,eAAe,KAAK,UAAU,GAAG,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC;AACjK,KAAK;AACL,IAAI,eAAe,CAAC,GAAG;AACvB,MAAM,OAAO,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM;AAC3F,KAAK;AACL,IAAI,gBAAgB,CAAC,GAAG;AACxB,MAAM,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,cAAc,GAAG,YAAY;AAC9D,KAAK;AACL,IAAI,eAAe,CAAC,GAAG;AACvB,MAAM,OAAO,IAAI,CAAC,YAAY,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,GAAG,WAAW;AAClH,KAAK;AACL,IAAI,eAAe,CAAC,GAAG;AACvB,MAAM,IAAI,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;AAC3D,QAAQ,OAAO,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC/F,OAAO,MAAM;AACb,QAAQ,OAAO,IAAI,CAAC,eAAe;AACnC,OAAO;AACP,KAAK;AACL,GAAG;AACH,EAAE,KAAK,EAAE;AACT,IAAI,KAAK,CAAC,GAAG;AACb,MAAM,IAAI,CAAC,QAAQ,GAAE;AACrB,KAAK;AACL,IAAI,eAAe,CAAC,GAAG;AACvB,MAAM,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAe;AAC9C,KAAK;AACL,IAAI,SAAS,CAAC,CAAC,QAAQ,EAAE;AACzB,MAAM,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;AAChC,QAAQ,IAAI,YAAY,GAAG,GAAE;AAC7B;AACA,QAAQ,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACrC,UAAU,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,IAAI,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAC;AACpH,SAAS,MAAM;AACf,UAAU,YAAY,GAAG,CAAC,GAAG,QAAQ,EAAC;AACtC,SAAS;AACT,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,YAAY,EAAC;AACzC,OAAO;AACP,MAAM,IAAI,CAAC,cAAc,GAAG,MAAK;AACjC,KAAK;AACL,GAAG;AACH,EAAE,OAAO,CAAC,GAAG;AACb,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,QAAQ,IAAI;AACpC,MAAM,IAAI,CAAC,eAAe,GAAG,SAAQ;AACrC,KAAK,EAAC;AACN,IAAI,IAAI,CAAC,QAAQ,GAAE;AACnB,GAAG;AACH,EAAE,OAAO,EAAE;AACX,IAAI,YAAY,CAAC,GAAG;AACpB,MAAM,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;AACvD,QAAQ,IAAI,CAAC,SAAS,GAAG,GAAE;AAC3B,OAAO,MAAM;AACb,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,IAAI,MAAM,CAAC,KAAK,EAAC;AACzE,OAAO;AACP,KAAK;AACL,IAAI,WAAW,CAAC,GAAG;AACnB,MAAM,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,aAAY;AAC5C,KAAK;AACL,IAAI,QAAQ,CAAC,GAAG;AAChB,MAAM,IAAI,CAAC,cAAc,GAAG,KAAI;AAChC,MAAM,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;AACpF,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,EAAC;AACvD,OAAO,MAAM;AACb,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAK;AACnC,OAAO;AACP,KAAK;AACL,GAAG;AACH;;;ACxJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,EAAE,IAAI,EAAE,oBAAoB;AAC5B,EAAE,KAAK,EAAE;AACT;AACA;AACA;AACA,IAAI,UAAU,EAAE;AAChB,MAAM,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC;AACnC,KAAK;AACL;AACA;AACA;AACA,IAAI,WAAW,EAAE;AACjB,MAAM,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC;AACnC,KAAK;AACL;AACA;AACA;AACA,IAAI,SAAS,EAAE;AACf,MAAM,IAAI,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC;AACnC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iBAAiB,EAAE;AACvB,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK;AACL;AACA;AACA;AACA,IAAI,QAAQ,EAAE;AACd,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,wBAAwB;AAC7C,KAAK;AACL;AACA;AACA;AACA,IAAI,iBAAiB,EAAE;AACvB,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,MAAM;AAC3B,KAAK;AACL;AACA;AACA;AACA,IAAI,aAAa,EAAE;AACnB,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,WAAW;AAChC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE;AACX,MAAM,IAAI,EAAE,KAAK;AACjB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,EAAE;AACvB,KAAK;AACL;AACA;AACA;AACA,IAAI,cAAc,EAAE;AACpB,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,MAAM;AAC3B,KAAK;AACL;AACA;AACA;AACA,IAAI,YAAY,EAAE;AAClB,MAAM,IAAI,EAAE,QAAQ;AACpB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK;AACL,GAAG;AACH,EAAE,IAAI,EAAE,OAAO;AACf,IAAI,aAAa,EAAE,KAAK;AACxB,GAAG,CAAC;AACJ,EAAE,QAAQ,EAAE;AACZ,IAAI,aAAa,CAAC,GAAG;AACrB,MAAM,OAAO,IAAI,CAAC,aAAa,GAAG,MAAM,GAAG,MAAM;AACjD,KAAK;AACL,GAAG;AACH,EAAE,OAAO,EAAE;AACX,IAAI,YAAY,CAAC,CAAC,IAAI,EAAE;AACxB,MAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AACpC,QAAQ,OAAO,IAAI;AACnB,OAAO,MAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC3C,QAAQ,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,QAAQ,EAAE;AAC3D,UAAU,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;AAC1C,SAAS;AACT,OAAO;AACP,MAAM,OAAO,EAAE;AACf,KAAK;AACL,IAAI,UAAU,CAAC,CAAC,QAAQ,EAAE;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,KAAK,QAAQ,CAAC,EAAC;AACvE,KAAK;AACL,GAAG;AACH;;;AC7JA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,EAAE,IAAI,EAAE,gBAAgB;AACxB,EAAE,KAAK,EAAE;AACT;AACA;AACA;AACA;AACA,IAAI,GAAG,EAAE;AACT,MAAM,OAAO,EAAE,MAAM,IAAI;AACzB,MAAM,IAAI,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC;AAC1B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,GAAG,EAAE;AACT,MAAM,OAAO,EAAE,MAAM,IAAI;AACzB,MAAM,IAAI,EAAE,CAAC,MAAM,EAAE,IAAI,CAAC;AAC1B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE;AACX,MAAM,OAAO,EAAE,MAAM,OAAO;AAC5B,MAAM,IAAI,EAAE,MAAM;AAClB,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,IAAI,EAAE;AACV,MAAM,IAAI,EAAE,OAAO;AACnB,MAAM,OAAO,EAAE,MAAM,IAAI;AACzB,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE;AACX,MAAM,IAAI,EAAE,OAAO;AACnB,MAAM,OAAO,EAAE,MAAM,IAAI;AACzB,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE;AACX,MAAM,IAAI,EAAE,KAAK;AACjB,MAAM,OAAO,EAAE,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC;AACjC,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,YAAY,EAAE;AAClB,MAAM,IAAI,EAAE,OAAO;AACnB,MAAM,OAAO,EAAE,MAAM,KAAK;AAC1B,KAAK;AACL,GAAG;AACH,EAAE,IAAI,EAAE,YAAY;AACpB,IAAI,OAAO;AACX,MAAM,SAAS,EAAE;AACjB,QAAQ,SAAS,EAAE,IAAI;AACvB,QAAQ,OAAO,EAAE,IAAI;AACrB,OAAO;AACP,KAAK;AACL,GAAG;AACH,EAAE,QAAQ,EAAE;AACZ,IAAI,aAAa,EAAE,YAAY;AAC/B,MAAM,MAAM,IAAI,GAAG,IAAI,CAAC,UAAS;AACjC,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AAC5C,QAAQ,OAAO,WAAW;AAC1B,OAAO;AACP,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE;AACvE,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC;AAC9C,OAAO,MAAM;AACb,QAAQ,OAAO,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;AACtF,OAAO;AACP,KAAK;AACL,IAAI,YAAY,CAAC,GAAG;AACpB,MAAM,OAAO,IAAI,CAAC,IAAI,GAAG,qBAAqB,GAAG,YAAY;AAC7D,KAAK;AACL,GAAG;AACH,EAAE,KAAK,EAAE;AACT,IAAI,KAAK,CAAC,CAAC,QAAQ,EAAE;AACrB,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAC;AACjC,KAAK;AACL,GAAG;AACH,EAAE,WAAW,CAAC,GAAG;AACjB,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAC;AACjC,GAAG;AACH,EAAE,OAAO,EAAE;AACX,IAAI,UAAU,EAAE,YAAY;AAC5B,MAAM,IAAI,CAAC,SAAS,GAAG;AACvB,QAAQ,SAAS,EAAE,IAAI;AACvB,QAAQ,OAAO,EAAE,IAAI;AACrB,QAAO;AACP;AACA,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,EAAC;AACpC,KAAK;AACL,IAAI,YAAY,CAAC,CAAC,KAAK,EAAE;AACzB,MAAM,IAAI,KAAK,EAAE;AACjB,QAAQ,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC;AACrE,QAAQ,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC;AACnE,OAAO;AACP,KAAK;AACL,IAAI,YAAY,EAAE,YAAY;AAC9B,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAC;AAC7E,KAAK;AACL,IAAI,mBAAmB,CAAC,CAAC,KAAK,EAAE;AAChC,MAAM,IAAI,KAAK,EAAE;AACjB,QAAQ,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC;AAC3E,OAAO;AACP,KAAK;AACL,IAAI,UAAU,CAAC,CAAC,QAAQ,EAAE;AAC1B,MAAM,OAAO,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,cAAc,EAAE,GAAG,QAAQ,CAAC,kBAAkB,EAAE;AAClF,KAAK;AACL,GAAG;AACH;;;AC7JA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,EAAE,IAAI,EAAE,YAAY;AACpB,EAAE,KAAK,EAAE;AACT;AACA;AACA;AACA,IAAI,WAAW,EAAE;AACjB,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,OAAO,EAAE,MAAM,EAAE;AACvB,KAAK;AACL;AACA;AACA;AACA,IAAI,IAAI,EAAE;AACV,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK;AACL;AACA;AACA;AACA,IAAI,KAAK,EAAE;AACX,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,EAAE;AACvB,KAAK;AACL;AACA;AACA;AACA,IAAI,SAAS,EAAE;AACf,MAAM,IAAI,EAAE,OAAO;AACnB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,IAAI;AACzB,KAAK;AACL;AACA;AACA;AACA,IAAI,WAAW,EAAE;AACjB,MAAM,IAAI,EAAE,OAAO;AACnB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,IAAI;AACzB,KAAK;AACL;AACA;AACA;AACA,IAAI,WAAW,EAAE;AACjB,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,EAAE;AACvB,KAAK;AACL;AACA;AACA;AACA,IAAI,SAAS,EAAE;AACf,MAAM,IAAI,EAAE,OAAO;AACnB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,KAAK;AAC1B,KAAK;AACL,GAAG;AACH,EAAE,IAAI,CAAC,GAAG;AACV,IAAI,OAAO;AACX,MAAM,MAAM,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI;AACvD,KAAK;AACL,GAAG;AACH,EAAE,QAAQ,EAAE;AACZ,IAAI,UAAU,EAAE,YAAY;AAC5B,MAAM,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAC;AAChE,MAAM,IAAI,IAAI,CAAC,WAAW,EAAE;AAC5B,QAAQ,OAAO,CAAC,IAAI,CAAC,aAAa,EAAC;AACnC,OAAO;AACP,MAAM,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC;AAC9B,KAAK;AACL,IAAI,SAAS,CAAC,GAAG;AACjB,MAAM,OAAO;AACb,QAAQ,SAAS,EAAE,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,GAAG,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;AACvD,QAAQ,UAAU,EAAE,gBAAgB;AACpC,OAAO;AACP,KAAK;AACL,GAAG;AACH,EAAE,OAAO,EAAE;AACX,IAAI,YAAY,CAAC,GAAG;AACpB,MAAM,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,IAAI,CAAC,IAAI,EAAC;AAC3C,KAAK;AACL,IAAI,WAAW,CAAC,GAAG;AACnB,MAAM,IAAI,IAAI,CAAC,WAAW,EAAE;AAC5B,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,OAAM;AAClC,QAAQ,OAAO,IAAI,CAAC,MAAM;AAC1B,OAAO;AACP,MAAM,OAAO,KAAK;AAClB,KAAK;AACL,GAAG;AACH;;;ACpIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,EAAE,IAAI,EAAE,aAAa;AACrB,EAAE,KAAK,EAAE;AACT;AACA;AACA;AACA,IAAI,kBAAkB,EAAE;AACxB,MAAM,IAAI,EAAE,OAAO;AACnB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,KAAK;AAC1B,KAAK;AACL;AACA;AACA;AACA,IAAI,IAAI,EAAE;AACV,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK;AACL;AACA;AACA;AACA,IAAI,WAAW,EAAE;AACjB,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,qBAAqB;AAC1C,KAAK;AACL;AACA;AACA;AACA,IAAI,OAAO,EAAE;AACb,MAAM,IAAI,EAAE,QAAQ;AACpB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK;AACL;AACA;AACA;AACA,IAAI,mBAAmB,EAAE;AACzB,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,CAAC;AACtB,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,mBAAmB,EAAE;AACzB,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,GAAG;AAClB,KAAK;AACL;AACA;AACA;AACA,IAAI,KAAK,EAAE;AACX,MAAM,IAAI,EAAE,KAAK;AACjB,MAAM,OAAO,EAAE,MAAM,EAAE;AACvB,KAAK;AACL;AACA;AACA;AACA,IAAI,iBAAiB,EAAE;AACvB,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,OAAO,EAAE,MAAM,EAAE;AACvB,KAAK;AACL,GAAG;AACH,EAAE,IAAI,CAAC,GAAG;AACV,IAAI,OAAO;AACX,MAAM,cAAc,EAAE,KAAK;AAC3B,MAAM,SAAS,EAAE,CAAC;AAClB,MAAM,SAAS,EAAE,KAAK;AACtB,MAAM,YAAY,EAAE,MAAM;AAC1B,MAAM,YAAY,EAAE,EAAE;AACtB,MAAM,cAAc,EAAE,EAAE;AACxB,MAAM,SAAS,EAAE,EAAE;AACnB,MAAM,KAAK,EAAE,EAAE;AACf,KAAK;AACL,GAAG;AACH,EAAE,QAAQ,EAAE;AACZ,IAAI,kBAAkB,CAAC,GAAG;AAC1B,MAAM,OAAO,IAAI,CAAC,YAAY;AAC9B,KAAK;AACL,IAAI,aAAa,CAAC,GAAG;AACrB,MAAM,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC;AAC7D,KAAK;AACL,IAAI,gBAAgB,CAAC,GAAG;AACxB,MAAM,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM;AAC3C,KAAK;AACL,IAAI,YAAY,CAAC,GAAG;AACpB,MAAM,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAS;AAC9D,MAAM,IAAI,SAAS,IAAI,IAAI,CAAC,iBAAiB,EAAE;AAC/C,QAAQ,OAAO,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;AAC5C,OAAO,MAAM;AACb,QAAQ,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC;AACpD,OAAO;AACP,KAAK;AACL,GAAG;AACH,EAAE,KAAK,EAAE;AACT,IAAI,SAAS,CAAC,CAAC,QAAQ,EAAE;AACzB,MAAM,IAAI,aAAY;AACtB,MAAM,IAAI,IAAI,CAAC,cAAc,EAAE;AAC/B,QAAQ,IAAI,CAAC,cAAc,GAAG,MAAK;AACnC,QAAQ,MAAM;AACd,OAAO;AACP;AACA,MAAM,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACnC,QAAQ,YAAY,GAAG,MAAM,CAAC,MAAM;AACpC,UAAU,QAAQ;AAClB,UAAU,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AAC/E,UAAS;AACT,OAAO,MAAM;AACb,QAAQ,YAAY,GAAG,CAAC,GAAG,QAAQ,EAAC;AACpC,OAAO;AACP;AACA,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,YAAY,EAAC;AACvC,KAAK;AACL,IAAI,KAAK,CAAC,GAAG;AACb,MAAM,IAAI,CAAC,QAAQ,GAAE;AACrB,KAAK;AACL,IAAI,KAAK,CAAC,CAAC,UAAU,EAAE;AACvB,MAAM,IAAI,IAAI,CAAC,YAAY,EAAE;AAC7B,QAAQ,YAAY,CAAC,IAAI,CAAC,YAAY,EAAC;AACvC,OAAO;AACP;AACA,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;AAC9B,QAAQ,MAAM,kBAAkB,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAC;AACrE,QAAQ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,EAAC;AACrE,QAAQ,MAAM;AACd,OAAO;AACP;AACA,MAAM,IAAI,CAAC,YAAY,GAAG,UAAU,CAAC,MAAM;AAC3C,QAAQ,YAAY,CAAC,IAAI,CAAC,YAAY,EAAC;AACvC,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAiB;AAC/C,QAAQ,IAAI,CAAC,SAAS,GAAG,KAAI;AAC7B;AACA,QAAQ,IAAI,CAAC,OAAO,CAAC,EAAE,aAAa,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,IAAI;AACxE,UAAU,CAAC,aAAa,KAAK;AAC7B,YAAY,MAAM,UAAU,GAAG,aAAa;AAC5C,gBAAgB,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;AACvD,gBAAgB,IAAI,CAAC,aAAY;AACjC,YAAY,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,EAAC;AACjE,WAAW;AACX,UAAS;AACT;AACA,QAAQ,IAAI,CAAC,SAAS,GAAG,MAAK;AAC9B,OAAO,EAAE,GAAG,EAAC;AACb,KAAK;AACL,GAAG;AACH,EAAE,OAAO,CAAC,GAAG;AACb,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,kBAAiB;AAC3C,GAAG;AACH,EAAE,WAAW,CAAC,GAAG;AACjB,IAAI,IAAI,CAAC,gBAAgB,GAAE;AAC3B,GAAG;AACH,EAAE,OAAO,EAAE;AACX,IAAI,gBAAgB,CAAC,CAAC,YAAY,EAAE;AACpC,MAAM,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK;AAClC,QAAQ;AACR,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC;AAC3C,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC;AAC3C,UAAU;AACV,UAAU,OAAO,CAAC;AAClB,SAAS,MAAM;AACf,UAAU,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC;AAC1C,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC;AAC3C,UAAU;AACV,UAAU,OAAO,CAAC,CAAC;AACnB,SAAS,MAAM,OAAO,CAAC;AACvB,OAAO,EAAC;AACR;AACA,MAAM,OAAO,KAAK,CAAC,IAAI;AACvB,QAAQ,IAAI,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;AACrD,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,YAAY,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;AACvE,KAAK;AACL,IAAI,QAAQ,CAAC,GAAG;AAChB,MAAM,IAAI,CAAC,cAAc,GAAG,KAAI;AAChC,MAAM,IAAI,CAAC,SAAS;AACpB,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,QAAQ;AACzC,YAAY,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC;AAC5C,YAAY,IAAI,CAAC,MAAK;AACtB,KAAK;AACL,IAAI,QAAQ,CAAC,GAAG;AAChB,MAAM,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,kBAAiB;AAC9C,KAAK;AACL,IAAI,MAAM,gBAAgB,CAAC,GAAG;AAC9B,MAAM,IAAI,eAAe,GAAG,GAAE;AAC9B;AACA,MAAM,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;AAC3C,QAAQ,IAAI,CAAC,QAAQ,GAAE;AACvB;AACA,QAAQ,eAAe,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC;AAC7C,UAAU,aAAa,EAAE,OAAO;AAChC,UAAU,SAAS,EAAE,IAAI;AACzB,UAAU,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC;AACzC,SAAS,EAAC;AACV,OAAO;AACP;AACA;AACA,MAAM,MAAM,sBAAsB,GAAG,eAAe,CAAC,MAAM;AAC3D,QAAQ,MAAM,IAAI,CAAC,OAAO,CAAC;AAC3B,UAAU,aAAa,EAAE,OAAO;AAChC,UAAU,KAAK,EAAE,IAAI,CAAC,mBAAmB;AACzC,SAAS,CAAC;AACV,QAAO;AACP;AACA;AACA,MAAM,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,EAAC;AACzE,MAAM,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAc;AAC7C,KAAK;AACL,GAAG;AACH;;;AC3QA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,EAAE,IAAI,EAAE,cAAc;AACtB,EAAE,KAAK,EAAE;AACT;AACA;AACA;AACA,IAAI,GAAG,EAAE;AACT,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,OAAO,EAAE,MAAM,MAAM,CAAC,gBAAgB;AAC5C,KAAK;AACL;AACA;AACA;AACA,IAAI,GAAG,EAAE;AACT,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,OAAO,EAAE,MAAM,MAAM,CAAC,gBAAgB;AAC5C,KAAK;AACL;AACA;AACA;AACA,IAAI,IAAI,EAAE;AACV,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,OAAO,EAAE,MAAM,CAAC;AACtB,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE;AACX,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,OAAO,EAAE,MAAM,CAAC;AACtB,KAAK;AACL;AACA;AACA;AACA,IAAI,SAAS,EAAE;AACf,MAAM,IAAI,EAAE,OAAO;AACnB,MAAM,OAAO,EAAE,MAAM,KAAK;AAC1B,KAAK;AACL,GAAG;AACH,EAAE,QAAQ,EAAE;AACZ,IAAI,KAAK,EAAE;AACX,MAAM,GAAG,CAAC,GAAG;AACb,QAAQ,OAAO,IAAI,CAAC,KAAK;AACzB,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,GAAG,CAAC,CAAC,KAAK,EAAE;AAClB,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,EAAE,EAAE;AACvD,UAAU,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,EAAC;AACxC,SAAS,MAAM;AACf,UAAU,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,EAAC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,CAAC,KAAK,CAAC,EAAC;AAChD,SAAS;AACT,OAAO;AACP,KAAK;AACL,GAAG;AACH;;;ACxFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,EAAE,IAAI,EAAE,aAAa;AACrB,EAAE,KAAK,EAAE;AACT;AACA;AACA;AACA,IAAI,GAAG,EAAE;AACT,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,OAAO,EAAE,MAAM,MAAM,CAAC,gBAAgB;AAC5C,KAAK;AACL;AACA;AACA;AACA,IAAI,GAAG,EAAE;AACT,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,OAAO,EAAE,MAAM,MAAM,CAAC,gBAAgB;AAC5C,KAAK;AACL;AACA;AACA;AACA,IAAI,IAAI,EAAE;AACV,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,OAAO,EAAE,MAAM,CAAC;AACtB,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE;AACX,MAAM,IAAI,EAAE,KAAK;AACjB,MAAM,OAAO,EAAE,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC;AACjC,KAAK;AACL;AACA;AACA;AACA,IAAI,SAAS,EAAE;AACf,MAAM,IAAI,EAAE,OAAO;AACnB,MAAM,OAAO,EAAE,MAAM,KAAK;AAC1B,KAAK;AACL,GAAG;AACH,EAAE,IAAI,EAAE,YAAY;AACpB,IAAI,OAAO;AACX,MAAM,UAAU,EAAE,IAAI,CAAC,KAAK;AAC5B,KAAK;AACL,GAAG;AACH,EAAE,KAAK,EAAE;AACT,IAAI,KAAK,CAAC,CAAC,QAAQ,EAAE;AACrB,MAAM,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,IAAI,QAAQ,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;AACtD,QAAQ,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,EAAE,IAAI,EAAC;AACtC,OAAO;AACP,KAAK;AACL,GAAG;AACH,EAAE,OAAO,EAAE;AACX,IAAI,aAAa,CAAC,CAAC,EAAE,EAAE,KAAK,EAAE;AAC9B,MAAM,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,MAAK;AACjC,MAAM,IAAI,CAAC,sBAAsB,GAAE;AACnC,KAAK;AACL,IAAI,UAAU,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE;AACjC,MAAM,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC;AAChD,KAAK;AACL,IAAI,sBAAsB,CAAC,GAAG;AAC9B,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;AACrC,QAAQ,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,KAAI;AACjC,OAAO;AACP,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;AACrC,QAAQ,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,KAAI;AACjC,OAAO;AACP;AACA,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;AACtC,QAAQ,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAC;AACpF,OAAO;AACP,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;AACtC,QAAQ,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,EAAC;AACpF,OAAO;AACP,MAAM,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC;AAChE;AACA;AACA;AACA;AACA;AACA,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,EAAC;AAC/C,KAAK;AACL,GAAG;AACH;;;AC/IA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,EAAE,IAAI,EAAE,cAAc;AACtB,EAAE,KAAK,EAAE;AACT;AACA;AACA;AACA,IAAI,IAAI,EAAE;AACV,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK;AACL;AACA;AACA;AACA,IAAI,WAAW,EAAE;AACjB,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,EAAE;AACvB,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE;AACX,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,OAAO,EAAE,MAAM,EAAE;AACvB,KAAK;AACL,GAAG;AACH,EAAE,QAAQ,EAAE;AACZ,IAAI,KAAK,EAAE;AACX,MAAM,GAAG,CAAC,GAAG;AACb,QAAQ,OAAO,IAAI,CAAC,KAAK,IAAI,EAAE;AAC/B,OAAO;AACP,MAAM,GAAG,CAAC,CAAC,KAAK,EAAE;AAClB,QAAQ,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,KAAK,EAAE,GAAG,SAAS,GAAG,KAAK,EAAC;AAC7D,OAAO;AACP,KAAK;AACL,GAAG;AACH;;;ACvDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AA4GA;AACA,eAAe;AACf,EAAE,IAAI,EAAE,iBAAiB;AACzB,EAAE,UAAU,EAAE;AACd,mBAAIA,iBAAa;AACjB,mBAAIC,mBAAa;AACjB,oBAAIC,mBAAc;AAClB,oBAAIC,mBAAc;AAClB,iBAAIC,mBAAW;AACf,kBAAIC,mBAAY;AAChB,iBAAIC,mBAAW;AACf,kBAAIC,mBAAY;AAChB,gBAAIC,mBAAU;AACd,GAAG;AACH,EAAE,KAAK,EAAE;AACT;AACA;AACA;AACA,IAAI,OAAO,EAAE;AACb,MAAM,IAAI,EAAE,KAAK;AACjB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE;AACX,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,OAAO,EAAE,OAAO,EAAE,CAAC;AACzB,KAAK;AACL;AACA;AACA;AACA,IAAI,YAAY,EAAE;AAClB,MAAM,IAAI,EAAE,KAAK;AACjB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,EAAE;AACvB,KAAK;AACL;AACA;AACA;AACA,IAAI,OAAO,EAAE;AACb,MAAM,IAAI,EAAE,OAAO;AACnB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,KAAK;AAC1B,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,WAAW,EAAE;AACjB,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,UAAU;AAC/B,KAAK;AACL;AACA;AACA;AACA,IAAI,iBAAiB,EAAE;AACvB,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,YAAY;AACjC,KAAK;AACL;AACA;AACA;AACA,IAAI,eAAe,EAAE;AACrB,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,SAAS;AAC9B,KAAK;AACL,GAAG;AACH,EAAE,IAAI,CAAC,GAAG;AACV,IAAI,OAAO;AACX,MAAM,aAAa,EAAE,IAAI,CAAC,YAAY;AACtC,MAAM,WAAW,EAAE,IAAI;AACvB,MAAM,IAAI,EAAE,KAAK;AACjB,MAAM,KAAK,EAAE,CAAC;AACd,MAAM,YAAY,EAAE,KAAK;AACzB,KAAK;AACL,GAAG;AACH,EAAE,QAAQ,EAAE;AACZ,IAAI,UAAU,CAAC,GAAG;AAClB;AACA,MAAM,OAAO,IAAI,CAAC,KAAK,IAAI,GAAG;AAC9B,KAAK;AACL,IAAI,UAAU,CAAC,GAAG;AAClB,MAAM,OAAO,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU;AAC7C,KAAK;AACL,IAAI,oBAAoB,CAAC,GAAG;AAC5B,MAAM,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC;AAC1F,SAAS,MAAM,CAAC,IAAI,IAAI,IAAI,KAAK,SAAS,CAAC;AAC3C,SAAS,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,gBAAgB,CAAC;AACvD,KAAK;AACL,GAAG;AACH,EAAE,KAAK,EAAE;AACT,IAAI,YAAY,CAAC,CAAC,QAAQ,EAAE;AAC5B,MAAM,IAAI,CAAC,aAAa,GAAG,SAAQ;AACnC,KAAK;AACL,GAAG;AACH,EAAE,OAAO,CAAC,GAAG;AACb,IAAI,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAC;AACxD,IAAI,IAAI,CAAC,YAAY,GAAE;AACvB,GAAG;AACH,EAAE,SAAS,CAAC,GAAG;AACf,IAAI,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAC;AAC3D,GAAG;AACH,EAAE,OAAO,EAAE;AACX,IAAI,YAAY,CAAC,GAAG;AACpB,MAAM,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,WAAU;AACpC,KAAK;AACL,IAAI,YAAY,CAAC,CAAC,IAAI,EAAE;AACxB,MAAM,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,KAAK,MAAM,EAAC;AAC/E;AACA;AACA;AACA;AACA;AACA,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,EAAC;AAC9C;AACA,MAAM,MAAM,UAAU,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,GAAE;AAC1C,MAAM,OAAO,UAAU,CAAC,IAAI,EAAC;AAC7B,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,EAAC;AACrC,KAAK;AACL,IAAI,eAAe,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;AAChC,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AAChC,UAAU,KAAK,GAAG,UAAS;AAC3B,SAAS,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,EAAE;AACvD,UAAU,KAAK,GAAG,UAAS;AAC3B,SAAS;AACT,OAAO;AACP;AACA,MAAM,MAAM,YAAY,GAAG,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,GAAG,KAAK,GAAE;AAC3D;AACA,MAAM,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,GAAG,IAAI,YAAY,CAAC,GAAG,CAAC,KAAK,SAAS,IAAI,OAAO,YAAY,CAAC,GAAG,CAAC,EAAC;AAC3G,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,YAAY,EAAC;AACvC,KAAK;AACL,IAAI,eAAe,CAAC,GAAG;AACvB,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAaeAAe;AACf,EAAE,IAAI,EAAE,YAAY;AACpB,EAAE,KAAK,EAAE;AACT;AACA;AACA;AACA,IAAI,GAAG,EAAE;AACT,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,OAAO,EAAE,CAAC;AACzB,KAAK;AACL;AACA;AACA;AACA,IAAI,IAAI,EAAE;AACV,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,OAAO,EAAE,OAAO;AACtB,QAAQ,IAAI,EAAE,MAAM;AACpB,QAAQ,UAAU,EAAE,UAAU;AAC9B,QAAQ,KAAK,EAAE,OAAO;AACtB,OAAO,CAAC;AACR,KAAK;AACL;AACA;AACA;AACA,IAAI,SAAS,EAAE;AACf,MAAM,IAAI,EAAE,KAAK;AACjB,MAAM,QAAQ,EAAE,KAAK;AACrB,MAAM,OAAO,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AACjC,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE;AACX,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK;AACL;AACA;AACA;AACA,IAAI,YAAY,EAAE;AAClB,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,OAAO,EAAE,MAAM,CAAC;AACtB,MAAM,SAAS,CAAC,CAAC,KAAK,EAAE;AACxB,QAAQ,QAAQ,KAAK,GAAG,CAAC,KAAK,CAAC,CAAC;AAChC,OAAO;AACP,KAAK;AACL,GAAG;AACH,EAAE,IAAI,EAAE,YAAY;AACpB,IAAI,OAAO;AACX,MAAM,UAAU,EAAE;AAClB,QAAQ,IAAI,EAAE,EAAE;AAChB,QAAQ,IAAI,EAAE,CAAC;AACf,QAAQ,OAAO,EAAE,KAAK;AACtB,QAAQ,KAAK,EAAE,CAAC;AAChB,OAAO;AACP,KAAK;AACL,GAAG;AACH,EAAE,QAAQ,EAAE;AACZ,IAAI,cAAc,CAAC,GAAG;AACtB,MAAM,IAAI,IAAI,CAAC,SAAS,IAAI,CAAC,EAAE;AAC/B,QAAQ,OAAO,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AAC7D,OAAO,MAAM;AACb,QAAQ,OAAO,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1H,OAAO;AACP,KAAK;AACL,IAAI,SAAS,CAAC,GAAG;AACjB,MAAM,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,EAAE,OAAO,CAAC,EAAE;AAC9C,MAAM,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;AACpE,KAAK;AACL,IAAI,WAAW,CAAC,GAAG;AACnB,MAAM,MAAM,KAAK,GAAG,GAAE;AACtB,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC,EAAC,EAAE;AACzF,MAAM,OAAO,KAAK;AAClB,KAAK;AACL;AACA;AACA;AACA;AACA,IAAI,SAAS,CAAC,GAAG;AACjB,MAAM,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,EAAC;AACpD,MAAM,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,KAAI;AAChD,MAAM,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,IAAI,EAAC;AAC3G;AACA,MAAM,IAAI,IAAI,EAAE,MAAK;AACrB;AACA,MAAM,IAAI,KAAK,EAAE;AACjB,QAAQ,IAAI,GAAG,EAAC;AAChB,QAAQ,KAAK,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAS;AACzF,OAAO,MAAM,IAAI,GAAG,EAAE;AACtB,QAAQ,IAAI,GAAG,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,EAAC;AACtG,QAAQ,KAAK,GAAG,IAAI,CAAC,UAAS;AAC9B,OAAO,MAAM;AACb;AACA,QAAQ,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI;AAC1C,QAAQ,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI;AAC3C,OAAO;AACP;AACA,MAAM,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE;AAC5B,KAAK;AACL,GAAG;AACH,EAAE,KAAK,EAAE;AACT;AACA;AACA;AACA,IAAI,KAAK,EAAE;AACX,MAAM,OAAO,CAAC,CAAC,KAAK,EAAE;AACtB,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAK;AAC/B,OAAO;AACP,MAAM,IAAI,EAAE,IAAI;AAChB,KAAK;AACL,GAAG;AACH,EAAE,MAAM,OAAO,CAAC,GAAG;AACnB,IAAI,IAAI,CAAC,UAAU,GAAG,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE,GAAG,IAAI,CAAC,KAAK,GAAE;AAC3D,GAAG;AACH,EAAE,OAAO,EAAE;AACX,IAAI,WAAW,CAAC,CAAC,KAAK,EAAE;AACxB,MAAM,IAAI,CAAC,UAAU,GAAG,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,KAAK,GAAE;AACvE,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE,EAAC;AACjD,KAAK;AACL,IAAI,gBAAgB,CAAC,GAAG;AACxB,MAAM,IAAI,CAAC,WAAW,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,EAAC;AAC/D,KAAK;AACL,GAAG;AACH;;;AC9LA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,cAAc,GAAG,KAAI;AAC3B;AACA,eAAe;AACf,EAAE,IAAI,EAAE,SAAS;AACjB,EAAE,KAAK,EAAE;AACT;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE;AACX,MAAM,IAAI,EAAE,KAAK;AACjB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI,QAAQ,EAAE;AACd,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,OAAO,EAAE,MAAM,cAAc;AACnC,KAAK;AACL,GAAG;AACH,EAAE,IAAI,EAAE,YAAY;AACpB,IAAI,OAAO;AACX,MAAM,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;AAC7B,KAAK;AACL,GAAG;AACH,EAAE,KAAK,EAAE;AACT,IAAI,KAAK,EAAE;AACX,MAAM,OAAO,EAAE,UAAU,QAAQ,EAAE,QAAQ,EAAE;AAC7C,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,GAAG,QAAQ,CAAC,EAAC;AAChD;AACA;AACA;AACA,QAAQ,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE,MAAM;AACjE;AACA,QAAQ,KAAK,MAAM,KAAK,IAAI,QAAQ,EAAE;AACtC;AACA,UAAU,IAAI,KAAK,CAAC,OAAO,KAAK,CAAC,CAAC,EAAE,QAAQ;AAC5C;AACA,UAAU,IAAI,KAAK,CAAC,OAAO,KAAK,CAAC,EAAE,QAAQ;AAC3C;AACA,UAAU,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;AAC9B,YAAY,KAAK,CAAC,OAAO,GAAG,eAAc;AAC1C,WAAW;AACX;AACA,UAAU,UAAU,CAAC,MAAM;AAC3B,YAAY,IAAI,CAAC,UAAU,CAAC,KAAK,EAAC;AAClC,WAAW,EAAE,KAAK,CAAC,OAAO,EAAC;AAC3B;AACA,UAAU,KAAK,CAAC,OAAO,GAAG,CAAC,EAAC;AAC5B,SAAS;AACT,OAAO;AACP,MAAM,SAAS,EAAE,IAAI;AACrB,KAAK;AACL,GAAG;AACH,EAAE,OAAO,EAAE;AACX,IAAI,UAAU,CAAC,CAAC,KAAK,EAAE;AACvB,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,CAAC,EAAC;AACvD;AACA;AACA;AACA;AACA;AACA,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAC;AAC3C,KAAK;AACL,GAAG;AACH;;;AClFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}